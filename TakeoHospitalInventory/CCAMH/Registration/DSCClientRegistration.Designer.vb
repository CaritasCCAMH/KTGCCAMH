'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8940
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DSCClientRegistration"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DSCClientRegistration
    Inherits Global.System.Data.DataSet
    
    Private tabletblProvinces As tblProvincesDataTable
    
    Private tabletblDistricts As tblDistrictsDataTable
    
    Private tabletblCommunes As tblCommunesDataTable
    
    Private tableTblOccupation As TblOccupationDataTable
    
    Private tabletblEducation As tblEducationDataTable
    
    Private tabletblVillages As tblVillagesDataTable
    
    Private tableCCAMH_CLIENTS111 As CCAMH_CLIENTS111DataTable
    
    Private tableCCAMH_CLIENTS As CCAMH_CLIENTSDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("tblProvinces")) Is Nothing) Then
                MyBase.Tables.Add(New tblProvincesDataTable(ds.Tables("tblProvinces")))
            End If
            If (Not (ds.Tables("tblDistricts")) Is Nothing) Then
                MyBase.Tables.Add(New tblDistrictsDataTable(ds.Tables("tblDistricts")))
            End If
            If (Not (ds.Tables("tblCommunes")) Is Nothing) Then
                MyBase.Tables.Add(New tblCommunesDataTable(ds.Tables("tblCommunes")))
            End If
            If (Not (ds.Tables("TblOccupation")) Is Nothing) Then
                MyBase.Tables.Add(New TblOccupationDataTable(ds.Tables("TblOccupation")))
            End If
            If (Not (ds.Tables("tblEducation")) Is Nothing) Then
                MyBase.Tables.Add(New tblEducationDataTable(ds.Tables("tblEducation")))
            End If
            If (Not (ds.Tables("tblVillages")) Is Nothing) Then
                MyBase.Tables.Add(New tblVillagesDataTable(ds.Tables("tblVillages")))
            End If
            If (Not (ds.Tables("CCAMH_CLIENTS111")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_CLIENTS111DataTable(ds.Tables("CCAMH_CLIENTS111")))
            End If
            If (Not (ds.Tables("CCAMH_CLIENTS")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_CLIENTSDataTable(ds.Tables("CCAMH_CLIENTS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblProvinces() As tblProvincesDataTable
        Get
            Return Me.tabletblProvinces
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblDistricts() As tblDistrictsDataTable
        Get
            Return Me.tabletblDistricts
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblCommunes() As tblCommunesDataTable
        Get
            Return Me.tabletblCommunes
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TblOccupation() As TblOccupationDataTable
        Get
            Return Me.tableTblOccupation
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblEducation() As tblEducationDataTable
        Get
            Return Me.tabletblEducation
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblVillages() As tblVillagesDataTable
        Get
            Return Me.tabletblVillages
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CCAMH_CLIENTS111() As CCAMH_CLIENTS111DataTable
        Get
            Return Me.tableCCAMH_CLIENTS111
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CCAMH_CLIENTS() As CCAMH_CLIENTSDataTable
        Get
            Return Me.tableCCAMH_CLIENTS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DSCClientRegistration = CType(MyBase.Clone,DSCClientRegistration)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("tblProvinces")) Is Nothing) Then
                MyBase.Tables.Add(New tblProvincesDataTable(ds.Tables("tblProvinces")))
            End If
            If (Not (ds.Tables("tblDistricts")) Is Nothing) Then
                MyBase.Tables.Add(New tblDistrictsDataTable(ds.Tables("tblDistricts")))
            End If
            If (Not (ds.Tables("tblCommunes")) Is Nothing) Then
                MyBase.Tables.Add(New tblCommunesDataTable(ds.Tables("tblCommunes")))
            End If
            If (Not (ds.Tables("TblOccupation")) Is Nothing) Then
                MyBase.Tables.Add(New TblOccupationDataTable(ds.Tables("TblOccupation")))
            End If
            If (Not (ds.Tables("tblEducation")) Is Nothing) Then
                MyBase.Tables.Add(New tblEducationDataTable(ds.Tables("tblEducation")))
            End If
            If (Not (ds.Tables("tblVillages")) Is Nothing) Then
                MyBase.Tables.Add(New tblVillagesDataTable(ds.Tables("tblVillages")))
            End If
            If (Not (ds.Tables("CCAMH_CLIENTS111")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_CLIENTS111DataTable(ds.Tables("CCAMH_CLIENTS111")))
            End If
            If (Not (ds.Tables("CCAMH_CLIENTS")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_CLIENTSDataTable(ds.Tables("CCAMH_CLIENTS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabletblProvinces = CType(MyBase.Tables("tblProvinces"),tblProvincesDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblProvinces) Is Nothing) Then
                Me.tabletblProvinces.InitVars
            End If
        End If
        Me.tabletblDistricts = CType(MyBase.Tables("tblDistricts"),tblDistrictsDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblDistricts) Is Nothing) Then
                Me.tabletblDistricts.InitVars
            End If
        End If
        Me.tabletblCommunes = CType(MyBase.Tables("tblCommunes"),tblCommunesDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblCommunes) Is Nothing) Then
                Me.tabletblCommunes.InitVars
            End If
        End If
        Me.tableTblOccupation = CType(MyBase.Tables("TblOccupation"),TblOccupationDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTblOccupation) Is Nothing) Then
                Me.tableTblOccupation.InitVars
            End If
        End If
        Me.tabletblEducation = CType(MyBase.Tables("tblEducation"),tblEducationDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblEducation) Is Nothing) Then
                Me.tabletblEducation.InitVars
            End If
        End If
        Me.tabletblVillages = CType(MyBase.Tables("tblVillages"),tblVillagesDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblVillages) Is Nothing) Then
                Me.tabletblVillages.InitVars
            End If
        End If
        Me.tableCCAMH_CLIENTS111 = CType(MyBase.Tables("CCAMH_CLIENTS111"),CCAMH_CLIENTS111DataTable)
        If (initTable = true) Then
            If (Not (Me.tableCCAMH_CLIENTS111) Is Nothing) Then
                Me.tableCCAMH_CLIENTS111.InitVars
            End If
        End If
        Me.tableCCAMH_CLIENTS = CType(MyBase.Tables("CCAMH_CLIENTS"),CCAMH_CLIENTSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCCAMH_CLIENTS) Is Nothing) Then
                Me.tableCCAMH_CLIENTS.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DSCClientRegistration"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DSCClientRegistration.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabletblProvinces = New tblProvincesDataTable
        MyBase.Tables.Add(Me.tabletblProvinces)
        Me.tabletblDistricts = New tblDistrictsDataTable
        MyBase.Tables.Add(Me.tabletblDistricts)
        Me.tabletblCommunes = New tblCommunesDataTable
        MyBase.Tables.Add(Me.tabletblCommunes)
        Me.tableTblOccupation = New TblOccupationDataTable
        MyBase.Tables.Add(Me.tableTblOccupation)
        Me.tabletblEducation = New tblEducationDataTable
        MyBase.Tables.Add(Me.tabletblEducation)
        Me.tabletblVillages = New tblVillagesDataTable
        MyBase.Tables.Add(Me.tabletblVillages)
        Me.tableCCAMH_CLIENTS111 = New CCAMH_CLIENTS111DataTable
        MyBase.Tables.Add(Me.tableCCAMH_CLIENTS111)
        Me.tableCCAMH_CLIENTS = New CCAMH_CLIENTSDataTable
        MyBase.Tables.Add(Me.tableCCAMH_CLIENTS)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetblProvinces() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetblDistricts() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetblCommunes() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTblOccupation() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetblEducation() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetblVillages() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeCCAMH_CLIENTS111() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeCCAMH_CLIENTS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DSCClientRegistration = New DSCClientRegistration
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub tblProvincesRowChangeEventHandler(ByVal sender As Object, ByVal e As tblProvincesRowChangeEvent)
    
    Public Delegate Sub tblDistrictsRowChangeEventHandler(ByVal sender As Object, ByVal e As tblDistrictsRowChangeEvent)
    
    Public Delegate Sub tblCommunesRowChangeEventHandler(ByVal sender As Object, ByVal e As tblCommunesRowChangeEvent)
    
    Public Delegate Sub TblOccupationRowChangeEventHandler(ByVal sender As Object, ByVal e As TblOccupationRowChangeEvent)
    
    Public Delegate Sub tblEducationRowChangeEventHandler(ByVal sender As Object, ByVal e As tblEducationRowChangeEvent)
    
    Public Delegate Sub tblVillagesRowChangeEventHandler(ByVal sender As Object, ByVal e As tblVillagesRowChangeEvent)
    
    Public Delegate Sub CCAMH_CLIENTS111RowChangeEventHandler(ByVal sender As Object, ByVal e As CCAMH_CLIENTS111RowChangeEvent)
    
    Public Delegate Sub CCAMH_CLIENTSRowChangeEventHandler(ByVal sender As Object, ByVal e As CCAMH_CLIENTSRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblProvincesDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblProvincesRow)
        
        Private columnIDProvCode As Global.System.Data.DataColumn
        
        Private columnProvince As Global.System.Data.DataColumn
        
        Private columnKhet As Global.System.Data.DataColumn
        
        Private columnAbrev As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblProvinces"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDProvCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDProvCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProvinceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProvince
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KhetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKhet
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AbrevColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbrev
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblProvincesRow
            Get
                Return CType(Me.Rows(index),tblProvincesRow)
            End Get
        End Property
        
        Public Event tblProvincesRowChanging As tblProvincesRowChangeEventHandler
        
        Public Event tblProvincesRowChanged As tblProvincesRowChangeEventHandler
        
        Public Event tblProvincesRowDeleting As tblProvincesRowChangeEventHandler
        
        Public Event tblProvincesRowDeleted As tblProvincesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddtblProvincesRow(ByVal row As tblProvincesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddtblProvincesRow(ByVal IDProvCode As Integer, ByVal Province As String, ByVal Khet As String, ByVal Abrev As String) As tblProvincesRow
            Dim rowtblProvincesRow As tblProvincesRow = CType(Me.NewRow,tblProvincesRow)
            Dim columnValuesArray() As Object = New Object() {IDProvCode, Province, Khet, Abrev}
            rowtblProvincesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblProvincesRow)
            Return rowtblProvincesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblProvincesDataTable = CType(MyBase.Clone,tblProvincesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblProvincesDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnIDProvCode = MyBase.Columns("IDProvCode")
            Me.columnProvince = MyBase.Columns("Province")
            Me.columnKhet = MyBase.Columns("Khet")
            Me.columnAbrev = MyBase.Columns("Abrev")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnIDProvCode = New Global.System.Data.DataColumn("IDProvCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDProvCode)
            Me.columnProvince = New Global.System.Data.DataColumn("Province", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProvince)
            Me.columnKhet = New Global.System.Data.DataColumn("Khet", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKhet)
            Me.columnAbrev = New Global.System.Data.DataColumn("Abrev", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbrev)
            Me.columnProvince.MaxLength = 50
            Me.columnKhet.MaxLength = 50
            Me.columnAbrev.MaxLength = 3
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewtblProvincesRow() As tblProvincesRow
            Return CType(Me.NewRow,tblProvincesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblProvincesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblProvincesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblProvincesRowChangedEvent) Is Nothing) Then
                RaiseEvent tblProvincesRowChanged(Me, New tblProvincesRowChangeEvent(CType(e.Row,tblProvincesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblProvincesRowChangingEvent) Is Nothing) Then
                RaiseEvent tblProvincesRowChanging(Me, New tblProvincesRowChangeEvent(CType(e.Row,tblProvincesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblProvincesRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblProvincesRowDeleted(Me, New tblProvincesRowChangeEvent(CType(e.Row,tblProvincesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblProvincesRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblProvincesRowDeleting(Me, New tblProvincesRowChangeEvent(CType(e.Row,tblProvincesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovetblProvincesRow(ByVal row As tblProvincesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSCClientRegistration = New DSCClientRegistration
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblProvincesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblDistrictsDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblDistrictsRow)
        
        Private columnIDProvCode As Global.System.Data.DataColumn
        
        Private columnSrokCode As Global.System.Data.DataColumn
        
        Private columnDISTRICT As Global.System.Data.DataColumn
        
        Private _column_suk As Global.System.Data.DataColumn
        
        Private columnXSROK As Global.System.Data.DataColumn
        
        Private columnYSROK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblDistricts"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDProvCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDProvCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrokCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrokCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DISTRICTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISTRICT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property __sukColumn() As Global.System.Data.DataColumn
            Get
                Return Me._column_suk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property XSROKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXSROK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property YSROKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYSROK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblDistrictsRow
            Get
                Return CType(Me.Rows(index),tblDistrictsRow)
            End Get
        End Property
        
        Public Event tblDistrictsRowChanging As tblDistrictsRowChangeEventHandler
        
        Public Event tblDistrictsRowChanged As tblDistrictsRowChangeEventHandler
        
        Public Event tblDistrictsRowDeleting As tblDistrictsRowChangeEventHandler
        
        Public Event tblDistrictsRowDeleted As tblDistrictsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddtblDistrictsRow(ByVal row As tblDistrictsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddtblDistrictsRow(ByVal IDProvCode As Integer, ByVal SrokCode As Integer, ByVal DISTRICT As String, ByVal __suk As String, ByVal XSROK As Double, ByVal YSROK As Double) As tblDistrictsRow
            Dim rowtblDistrictsRow As tblDistrictsRow = CType(Me.NewRow,tblDistrictsRow)
            Dim columnValuesArray() As Object = New Object() {IDProvCode, SrokCode, DISTRICT, __suk, XSROK, YSROK}
            rowtblDistrictsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblDistrictsRow)
            Return rowtblDistrictsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblDistrictsDataTable = CType(MyBase.Clone,tblDistrictsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblDistrictsDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnIDProvCode = MyBase.Columns("IDProvCode")
            Me.columnSrokCode = MyBase.Columns("SrokCode")
            Me.columnDISTRICT = MyBase.Columns("DISTRICT")
            Me._column_suk = MyBase.Columns("¨suk")
            Me.columnXSROK = MyBase.Columns("XSROK")
            Me.columnYSROK = MyBase.Columns("YSROK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnIDProvCode = New Global.System.Data.DataColumn("IDProvCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDProvCode)
            Me.columnSrokCode = New Global.System.Data.DataColumn("SrokCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrokCode)
            Me.columnDISTRICT = New Global.System.Data.DataColumn("DISTRICT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISTRICT)
            Me._column_suk = New Global.System.Data.DataColumn("¨suk", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._column_suk.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_column_suk")
            Me._column_suk.ExtendedProperties.Add("Generator_UserColumnName", "¨suk")
            MyBase.Columns.Add(Me._column_suk)
            Me.columnXSROK = New Global.System.Data.DataColumn("XSROK", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXSROK)
            Me.columnYSROK = New Global.System.Data.DataColumn("YSROK", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYSROK)
            Me.columnDISTRICT.MaxLength = 40
            Me._column_suk.MaxLength = 40
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewtblDistrictsRow() As tblDistrictsRow
            Return CType(Me.NewRow,tblDistrictsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblDistrictsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblDistrictsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblDistrictsRowChangedEvent) Is Nothing) Then
                RaiseEvent tblDistrictsRowChanged(Me, New tblDistrictsRowChangeEvent(CType(e.Row,tblDistrictsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblDistrictsRowChangingEvent) Is Nothing) Then
                RaiseEvent tblDistrictsRowChanging(Me, New tblDistrictsRowChangeEvent(CType(e.Row,tblDistrictsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblDistrictsRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblDistrictsRowDeleted(Me, New tblDistrictsRowChangeEvent(CType(e.Row,tblDistrictsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblDistrictsRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblDistrictsRowDeleting(Me, New tblDistrictsRowChangeEvent(CType(e.Row,tblDistrictsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovetblDistrictsRow(ByVal row As tblDistrictsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSCClientRegistration = New DSCClientRegistration
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblDistrictsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblCommunesDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblCommunesRow)
        
        Private columnIDProvCode As Global.System.Data.DataColumn
        
        Private columnSrokCode As Global.System.Data.DataColumn
        
        Private columnCommune As Global.System.Data.DataColumn
        
        Private columnKhumCode As Global.System.Data.DataColumn
        
        Private columnXuM As Global.System.Data.DataColumn
        
        Private columnXKHUM As Global.System.Data.DataColumn
        
        Private columnYKHUM As Global.System.Data.DataColumn
        
        Private columnMods As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblCommunes"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDProvCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDProvCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrokCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrokCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CommuneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCommune
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KhumCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKhumCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property XuMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXuM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property XKHUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXKHUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property YKHUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYKHUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ModsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMods
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblCommunesRow
            Get
                Return CType(Me.Rows(index),tblCommunesRow)
            End Get
        End Property
        
        Public Event tblCommunesRowChanging As tblCommunesRowChangeEventHandler
        
        Public Event tblCommunesRowChanged As tblCommunesRowChangeEventHandler
        
        Public Event tblCommunesRowDeleting As tblCommunesRowChangeEventHandler
        
        Public Event tblCommunesRowDeleted As tblCommunesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddtblCommunesRow(ByVal row As tblCommunesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddtblCommunesRow(ByVal IDProvCode As Integer, ByVal SrokCode As Integer, ByVal Commune As String, ByVal KhumCode As Integer, ByVal XuM As String, ByVal XKHUM As Double, ByVal YKHUM As Double, ByVal Mods As String) As tblCommunesRow
            Dim rowtblCommunesRow As tblCommunesRow = CType(Me.NewRow,tblCommunesRow)
            Dim columnValuesArray() As Object = New Object() {IDProvCode, SrokCode, Commune, KhumCode, XuM, XKHUM, YKHUM, Mods}
            rowtblCommunesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblCommunesRow)
            Return rowtblCommunesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblCommunesDataTable = CType(MyBase.Clone,tblCommunesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblCommunesDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnIDProvCode = MyBase.Columns("IDProvCode")
            Me.columnSrokCode = MyBase.Columns("SrokCode")
            Me.columnCommune = MyBase.Columns("Commune")
            Me.columnKhumCode = MyBase.Columns("KhumCode")
            Me.columnXuM = MyBase.Columns("XuM")
            Me.columnXKHUM = MyBase.Columns("XKHUM")
            Me.columnYKHUM = MyBase.Columns("YKHUM")
            Me.columnMods = MyBase.Columns("Mods")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnIDProvCode = New Global.System.Data.DataColumn("IDProvCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDProvCode)
            Me.columnSrokCode = New Global.System.Data.DataColumn("SrokCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrokCode)
            Me.columnCommune = New Global.System.Data.DataColumn("Commune", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCommune)
            Me.columnKhumCode = New Global.System.Data.DataColumn("KhumCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKhumCode)
            Me.columnXuM = New Global.System.Data.DataColumn("XuM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXuM)
            Me.columnXKHUM = New Global.System.Data.DataColumn("XKHUM", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXKHUM)
            Me.columnYKHUM = New Global.System.Data.DataColumn("YKHUM", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYKHUM)
            Me.columnMods = New Global.System.Data.DataColumn("Mods", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMods)
            Me.columnCommune.MaxLength = 40
            Me.columnXuM.MaxLength = 40
            Me.columnMods.MaxLength = 15
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewtblCommunesRow() As tblCommunesRow
            Return CType(Me.NewRow,tblCommunesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblCommunesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblCommunesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblCommunesRowChangedEvent) Is Nothing) Then
                RaiseEvent tblCommunesRowChanged(Me, New tblCommunesRowChangeEvent(CType(e.Row,tblCommunesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblCommunesRowChangingEvent) Is Nothing) Then
                RaiseEvent tblCommunesRowChanging(Me, New tblCommunesRowChangeEvent(CType(e.Row,tblCommunesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblCommunesRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblCommunesRowDeleted(Me, New tblCommunesRowChangeEvent(CType(e.Row,tblCommunesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblCommunesRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblCommunesRowDeleting(Me, New tblCommunesRowChangeEvent(CType(e.Row,tblCommunesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovetblCommunesRow(ByVal row As tblCommunesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSCClientRegistration = New DSCClientRegistration
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblCommunesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TblOccupationDataTable
        Inherits Global.System.Data.TypedTableBase(Of TblOccupationRow)
        
        Private columnOccNo As Global.System.Data.DataColumn
        
        Private columnOccupation As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TblOccupation"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OccNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOccNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OccupationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOccupation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TblOccupationRow
            Get
                Return CType(Me.Rows(index),TblOccupationRow)
            End Get
        End Property
        
        Public Event TblOccupationRowChanging As TblOccupationRowChangeEventHandler
        
        Public Event TblOccupationRowChanged As TblOccupationRowChangeEventHandler
        
        Public Event TblOccupationRowDeleting As TblOccupationRowChangeEventHandler
        
        Public Event TblOccupationRowDeleted As TblOccupationRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTblOccupationRow(ByVal row As TblOccupationRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTblOccupationRow(ByVal Occupation As String) As TblOccupationRow
            Dim rowTblOccupationRow As TblOccupationRow = CType(Me.NewRow,TblOccupationRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Occupation}
            rowTblOccupationRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTblOccupationRow)
            Return rowTblOccupationRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByOccNo(ByVal OccNo As Decimal) As TblOccupationRow
            Return CType(Me.Rows.Find(New Object() {OccNo}),TblOccupationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TblOccupationDataTable = CType(MyBase.Clone,TblOccupationDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TblOccupationDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnOccNo = MyBase.Columns("OccNo")
            Me.columnOccupation = MyBase.Columns("Occupation")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnOccNo = New Global.System.Data.DataColumn("OccNo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOccNo)
            Me.columnOccupation = New Global.System.Data.DataColumn("Occupation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOccupation)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnOccNo}, true))
            Me.columnOccNo.AutoIncrement = true
            Me.columnOccNo.AutoIncrementSeed = -1
            Me.columnOccNo.AutoIncrementStep = -1
            Me.columnOccNo.AllowDBNull = false
            Me.columnOccNo.ReadOnly = true
            Me.columnOccNo.Unique = true
            Me.columnOccupation.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTblOccupationRow() As TblOccupationRow
            Return CType(Me.NewRow,TblOccupationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TblOccupationRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TblOccupationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TblOccupationRowChangedEvent) Is Nothing) Then
                RaiseEvent TblOccupationRowChanged(Me, New TblOccupationRowChangeEvent(CType(e.Row,TblOccupationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TblOccupationRowChangingEvent) Is Nothing) Then
                RaiseEvent TblOccupationRowChanging(Me, New TblOccupationRowChangeEvent(CType(e.Row,TblOccupationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TblOccupationRowDeletedEvent) Is Nothing) Then
                RaiseEvent TblOccupationRowDeleted(Me, New TblOccupationRowChangeEvent(CType(e.Row,TblOccupationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TblOccupationRowDeletingEvent) Is Nothing) Then
                RaiseEvent TblOccupationRowDeleting(Me, New TblOccupationRowChangeEvent(CType(e.Row,TblOccupationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTblOccupationRow(ByVal row As TblOccupationRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSCClientRegistration = New DSCClientRegistration
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TblOccupationDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblEducationDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblEducationRow)
        
        Private columneduNo As Global.System.Data.DataColumn
        
        Private columnEducation As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblEducation"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property eduNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columneduNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EducationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEducation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblEducationRow
            Get
                Return CType(Me.Rows(index),tblEducationRow)
            End Get
        End Property
        
        Public Event tblEducationRowChanging As tblEducationRowChangeEventHandler
        
        Public Event tblEducationRowChanged As tblEducationRowChangeEventHandler
        
        Public Event tblEducationRowDeleting As tblEducationRowChangeEventHandler
        
        Public Event tblEducationRowDeleted As tblEducationRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddtblEducationRow(ByVal row As tblEducationRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddtblEducationRow(ByVal Education As String) As tblEducationRow
            Dim rowtblEducationRow As tblEducationRow = CType(Me.NewRow,tblEducationRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Education}
            rowtblEducationRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblEducationRow)
            Return rowtblEducationRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByeduNo(ByVal eduNo As Decimal) As tblEducationRow
            Return CType(Me.Rows.Find(New Object() {eduNo}),tblEducationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblEducationDataTable = CType(MyBase.Clone,tblEducationDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblEducationDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columneduNo = MyBase.Columns("eduNo")
            Me.columnEducation = MyBase.Columns("Education")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columneduNo = New Global.System.Data.DataColumn("eduNo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columneduNo)
            Me.columnEducation = New Global.System.Data.DataColumn("Education", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEducation)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columneduNo}, true))
            Me.columneduNo.AutoIncrement = true
            Me.columneduNo.AutoIncrementSeed = -1
            Me.columneduNo.AutoIncrementStep = -1
            Me.columneduNo.AllowDBNull = false
            Me.columneduNo.ReadOnly = true
            Me.columneduNo.Unique = true
            Me.columnEducation.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewtblEducationRow() As tblEducationRow
            Return CType(Me.NewRow,tblEducationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblEducationRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblEducationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblEducationRowChangedEvent) Is Nothing) Then
                RaiseEvent tblEducationRowChanged(Me, New tblEducationRowChangeEvent(CType(e.Row,tblEducationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblEducationRowChangingEvent) Is Nothing) Then
                RaiseEvent tblEducationRowChanging(Me, New tblEducationRowChangeEvent(CType(e.Row,tblEducationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblEducationRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblEducationRowDeleted(Me, New tblEducationRowChangeEvent(CType(e.Row,tblEducationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblEducationRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblEducationRowDeleting(Me, New tblEducationRowChangeEvent(CType(e.Row,tblEducationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovetblEducationRow(ByVal row As tblEducationRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSCClientRegistration = New DSCClientRegistration
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblEducationDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblVillagesDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblVillagesRow)
        
        Private columnIDProvCode As Global.System.Data.DataColumn
        
        Private columnSrokCode As Global.System.Data.DataColumn
        
        Private columnKhumCode As Global.System.Data.DataColumn
        
        Private columnPhumCode As Global.System.Data.DataColumn
        
        Private columnVILLAGE As Global.System.Data.DataColumn
        
        Private columnPUmi As Global.System.Data.DataColumn
        
        Private columnXPHUM As Global.System.Data.DataColumn
        
        Private columnYPHUM As Global.System.Data.DataColumn
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnMods As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblVillages"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDProvCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDProvCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SrokCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSrokCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KhumCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKhumCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PhumCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPhumCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VILLAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVILLAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PUmiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPUmi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property XPHUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXPHUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property YPHUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYPHUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ModsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMods
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblVillagesRow
            Get
                Return CType(Me.Rows(index),tblVillagesRow)
            End Get
        End Property
        
        Public Event tblVillagesRowChanging As tblVillagesRowChangeEventHandler
        
        Public Event tblVillagesRowChanged As tblVillagesRowChangeEventHandler
        
        Public Event tblVillagesRowDeleting As tblVillagesRowChangeEventHandler
        
        Public Event tblVillagesRowDeleted As tblVillagesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddtblVillagesRow(ByVal row As tblVillagesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddtblVillagesRow(ByVal IDProvCode As Integer, ByVal SrokCode As Integer, ByVal KhumCode As Integer, ByVal PhumCode As Integer, ByVal VILLAGE As String, ByVal PUmi As String, ByVal XPHUM As Double, ByVal YPHUM As Double, ByVal ID As Integer, ByVal Mods As String) As tblVillagesRow
            Dim rowtblVillagesRow As tblVillagesRow = CType(Me.NewRow,tblVillagesRow)
            Dim columnValuesArray() As Object = New Object() {IDProvCode, SrokCode, KhumCode, PhumCode, VILLAGE, PUmi, XPHUM, YPHUM, ID, Mods}
            rowtblVillagesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblVillagesRow)
            Return rowtblVillagesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblVillagesDataTable = CType(MyBase.Clone,tblVillagesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblVillagesDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnIDProvCode = MyBase.Columns("IDProvCode")
            Me.columnSrokCode = MyBase.Columns("SrokCode")
            Me.columnKhumCode = MyBase.Columns("KhumCode")
            Me.columnPhumCode = MyBase.Columns("PhumCode")
            Me.columnVILLAGE = MyBase.Columns("VILLAGE")
            Me.columnPUmi = MyBase.Columns("PUmi")
            Me.columnXPHUM = MyBase.Columns("XPHUM")
            Me.columnYPHUM = MyBase.Columns("YPHUM")
            Me.columnID = MyBase.Columns("ID")
            Me.columnMods = MyBase.Columns("Mods")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnIDProvCode = New Global.System.Data.DataColumn("IDProvCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDProvCode)
            Me.columnSrokCode = New Global.System.Data.DataColumn("SrokCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSrokCode)
            Me.columnKhumCode = New Global.System.Data.DataColumn("KhumCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKhumCode)
            Me.columnPhumCode = New Global.System.Data.DataColumn("PhumCode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPhumCode)
            Me.columnVILLAGE = New Global.System.Data.DataColumn("VILLAGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVILLAGE)
            Me.columnPUmi = New Global.System.Data.DataColumn("PUmi", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPUmi)
            Me.columnXPHUM = New Global.System.Data.DataColumn("XPHUM", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXPHUM)
            Me.columnYPHUM = New Global.System.Data.DataColumn("YPHUM", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYPHUM)
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnMods = New Global.System.Data.DataColumn("Mods", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMods)
            Me.columnVILLAGE.MaxLength = 255
            Me.columnPUmi.MaxLength = 50
            Me.columnID.AllowDBNull = false
            Me.columnMods.MaxLength = 12
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewtblVillagesRow() As tblVillagesRow
            Return CType(Me.NewRow,tblVillagesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblVillagesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblVillagesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblVillagesRowChangedEvent) Is Nothing) Then
                RaiseEvent tblVillagesRowChanged(Me, New tblVillagesRowChangeEvent(CType(e.Row,tblVillagesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblVillagesRowChangingEvent) Is Nothing) Then
                RaiseEvent tblVillagesRowChanging(Me, New tblVillagesRowChangeEvent(CType(e.Row,tblVillagesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblVillagesRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblVillagesRowDeleted(Me, New tblVillagesRowChangeEvent(CType(e.Row,tblVillagesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblVillagesRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblVillagesRowDeleting(Me, New tblVillagesRowChangeEvent(CType(e.Row,tblVillagesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovetblVillagesRow(ByVal row As tblVillagesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSCClientRegistration = New DSCClientRegistration
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblVillagesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CCAMH_CLIENTS111DataTable
        Inherits Global.System.Data.TypedTableBase(Of CCAMH_CLIENTS111Row)
        
        Private columnCLIENT_ID As Global.System.Data.DataColumn
        
        Private columnCLIENT_NO As Global.System.Data.DataColumn
        
        Private columnCLIENT_NAME As Global.System.Data.DataColumn
        
        Private columnCLIENT_SEX As Global.System.Data.DataColumn
        
        Private columnCLIENT_AGE As Global.System.Data.DataColumn
        
        Private columnCLIENT_DOB As Global.System.Data.DataColumn
        
        Private columnCLIENT_BROUGHT_BY As Global.System.Data.DataColumn
        
        Private columnCLIENT_REFERED_BY As Global.System.Data.DataColumn
        
        Private columnCLIENT_SIBLING As Global.System.Data.DataColumn
        
        Private columnCLIENT_BROTHER As Global.System.Data.DataColumn
        
        Private columnCLIENT_SISTER As Global.System.Data.DataColumn
        
        Private columnCLIENT_DATE_SEEN As Global.System.Data.DataColumn
        
        Private columnCLIENT_SCHOOL_GOING As Global.System.Data.DataColumn
        
        Private columnCLIENT_LEVE_OF_EDU As Global.System.Data.DataColumn
        
        Private columnCLIENT_FATHER As Global.System.Data.DataColumn
        
        Private columnCLIENT_FATHER_EDU As Global.System.Data.DataColumn
        
        Private columnCLIENT_FATHER_POS As Global.System.Data.DataColumn
        
        Private columnCLIENT_MOTHER As Global.System.Data.DataColumn
        
        Private columnCLIENT_MOTHER_EDU As Global.System.Data.DataColumn
        
        Private columnCLIENT_MOTHER_POS As Global.System.Data.DataColumn
        
        Private columnCLIENT_HOUSE_NO As Global.System.Data.DataColumn
        
        Private columnCLIENT_STREET_NO As Global.System.Data.DataColumn
        
        Private columnCLIENT_VILLAGE As Global.System.Data.DataColumn
        
        Private columnCLIENT_COMMUNE As Global.System.Data.DataColumn
        
        Private columnCLIENT_DISTICT As Global.System.Data.DataColumn
        
        Private columnCLIENT_CITY As Global.System.Data.DataColumn
        
        Private columnCLIENT_PHONE As Global.System.Data.DataColumn
        
        Private columnCLIENT_CONSULTATION_PURPOSE As Global.System.Data.DataColumn
        
        Private columnCLIENT_IMP_NEUROPSY As Global.System.Data.DataColumn
        
        Private columnCLIENT_IMP_DEV As Global.System.Data.DataColumn
        
        Private columnCLIENT_PSYCHO As Global.System.Data.DataColumn
        
        Private columnCLIENT_SUBTYPE As Global.System.Data.DataColumn
        
        Private columnCLIENT_REASON_FOR_NOT_REG As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADV_REG_DATE As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADV_REFERENCE As Global.System.Data.DataColumn
        
        Private columnYEARS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CCAMH_CLIENTS111"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_SEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_SEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_AGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_AGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_DOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_DOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_BROUGHT_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_BROUGHT_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_REFERED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_REFERED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_SIBLINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_SIBLING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_BROTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_BROTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_SISTERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_SISTER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_DATE_SEENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_DATE_SEEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_SCHOOL_GOINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_SCHOOL_GOING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_LEVE_OF_EDUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_LEVE_OF_EDU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_FATHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_FATHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_FATHER_EDUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_FATHER_EDU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_FATHER_POSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_FATHER_POS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_MOTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_MOTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_MOTHER_EDUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_MOTHER_EDU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_MOTHER_POSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_MOTHER_POS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_HOUSE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_HOUSE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_STREET_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_STREET_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_VILLAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_VILLAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_COMMUNEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_COMMUNE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_DISTICTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_DISTICT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_CITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_PHONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_PHONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_CONSULTATION_PURPOSEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CONSULTATION_PURPOSE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_IMP_NEUROPSYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_IMP_NEUROPSY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_IMP_DEVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_IMP_DEV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_PSYCHOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_PSYCHO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_SUBTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_SUBTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_REASON_FOR_NOT_REGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_REASON_FOR_NOT_REG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_ADV_REG_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADV_REG_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_ADV_REFERENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADV_REFERENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property YEARSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYEARS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CCAMH_CLIENTS111Row
            Get
                Return CType(Me.Rows(index),CCAMH_CLIENTS111Row)
            End Get
        End Property
        
        Public Event CCAMH_CLIENTS111RowChanging As CCAMH_CLIENTS111RowChangeEventHandler
        
        Public Event CCAMH_CLIENTS111RowChanged As CCAMH_CLIENTS111RowChangeEventHandler
        
        Public Event CCAMH_CLIENTS111RowDeleting As CCAMH_CLIENTS111RowChangeEventHandler
        
        Public Event CCAMH_CLIENTS111RowDeleted As CCAMH_CLIENTS111RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddCCAMH_CLIENTS111Row(ByVal row As CCAMH_CLIENTS111Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddCCAMH_CLIENTS111Row( _
                    ByVal CLIENT_NO As Decimal,  _
                    ByVal CLIENT_NAME As String,  _
                    ByVal CLIENT_SEX As String,  _
                    ByVal CLIENT_AGE As Decimal,  _
                    ByVal CLIENT_DOB As Date,  _
                    ByVal CLIENT_BROUGHT_BY As String,  _
                    ByVal CLIENT_REFERED_BY As String,  _
                    ByVal CLIENT_SIBLING As Decimal,  _
                    ByVal CLIENT_BROTHER As Decimal,  _
                    ByVal CLIENT_SISTER As Decimal,  _
                    ByVal CLIENT_DATE_SEEN As Date,  _
                    ByVal CLIENT_SCHOOL_GOING As String,  _
                    ByVal CLIENT_LEVE_OF_EDU As String,  _
                    ByVal CLIENT_FATHER As String,  _
                    ByVal CLIENT_FATHER_EDU As String,  _
                    ByVal CLIENT_FATHER_POS As String,  _
                    ByVal CLIENT_MOTHER As String,  _
                    ByVal CLIENT_MOTHER_EDU As String,  _
                    ByVal CLIENT_MOTHER_POS As String,  _
                    ByVal CLIENT_HOUSE_NO As String,  _
                    ByVal CLIENT_STREET_NO As String,  _
                    ByVal CLIENT_VILLAGE As String,  _
                    ByVal CLIENT_COMMUNE As String,  _
                    ByVal CLIENT_DISTICT As String,  _
                    ByVal CLIENT_CITY As String,  _
                    ByVal CLIENT_PHONE As String,  _
                    ByVal CLIENT_CONSULTATION_PURPOSE As String,  _
                    ByVal CLIENT_IMP_NEUROPSY As Boolean,  _
                    ByVal CLIENT_IMP_DEV As Boolean,  _
                    ByVal CLIENT_PSYCHO As Boolean,  _
                    ByVal CLIENT_SUBTYPE As String,  _
                    ByVal CLIENT_REASON_FOR_NOT_REG As String,  _
                    ByVal CLIENT_ADV_REG_DATE As String,  _
                    ByVal CLIENT_ADV_REFERENCE As String,  _
                    ByVal YEARS As Decimal) As CCAMH_CLIENTS111Row
            Dim rowCCAMH_CLIENTS111Row As CCAMH_CLIENTS111Row = CType(Me.NewRow,CCAMH_CLIENTS111Row)
            Dim columnValuesArray() As Object = New Object() {Nothing, CLIENT_NO, CLIENT_NAME, CLIENT_SEX, CLIENT_AGE, CLIENT_DOB, CLIENT_BROUGHT_BY, CLIENT_REFERED_BY, CLIENT_SIBLING, CLIENT_BROTHER, CLIENT_SISTER, CLIENT_DATE_SEEN, CLIENT_SCHOOL_GOING, CLIENT_LEVE_OF_EDU, CLIENT_FATHER, CLIENT_FATHER_EDU, CLIENT_FATHER_POS, CLIENT_MOTHER, CLIENT_MOTHER_EDU, CLIENT_MOTHER_POS, CLIENT_HOUSE_NO, CLIENT_STREET_NO, CLIENT_VILLAGE, CLIENT_COMMUNE, CLIENT_DISTICT, CLIENT_CITY, CLIENT_PHONE, CLIENT_CONSULTATION_PURPOSE, CLIENT_IMP_NEUROPSY, CLIENT_IMP_DEV, CLIENT_PSYCHO, CLIENT_SUBTYPE, CLIENT_REASON_FOR_NOT_REG, CLIENT_ADV_REG_DATE, CLIENT_ADV_REFERENCE, YEARS}
            rowCCAMH_CLIENTS111Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowCCAMH_CLIENTS111Row)
            Return rowCCAMH_CLIENTS111Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByCLIENT_NO(ByVal CLIENT_NO As Decimal) As CCAMH_CLIENTS111Row
            Return CType(Me.Rows.Find(New Object() {CLIENT_NO}),CCAMH_CLIENTS111Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CCAMH_CLIENTS111DataTable = CType(MyBase.Clone,CCAMH_CLIENTS111DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CCAMH_CLIENTS111DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCLIENT_ID = MyBase.Columns("CLIENT_ID")
            Me.columnCLIENT_NO = MyBase.Columns("CLIENT_NO")
            Me.columnCLIENT_NAME = MyBase.Columns("CLIENT_NAME")
            Me.columnCLIENT_SEX = MyBase.Columns("CLIENT_SEX")
            Me.columnCLIENT_AGE = MyBase.Columns("CLIENT_AGE")
            Me.columnCLIENT_DOB = MyBase.Columns("CLIENT_DOB")
            Me.columnCLIENT_BROUGHT_BY = MyBase.Columns("CLIENT_BROUGHT_BY")
            Me.columnCLIENT_REFERED_BY = MyBase.Columns("CLIENT_REFERED_BY")
            Me.columnCLIENT_SIBLING = MyBase.Columns("CLIENT_SIBLING")
            Me.columnCLIENT_BROTHER = MyBase.Columns("CLIENT_BROTHER")
            Me.columnCLIENT_SISTER = MyBase.Columns("CLIENT_SISTER")
            Me.columnCLIENT_DATE_SEEN = MyBase.Columns("CLIENT_DATE_SEEN")
            Me.columnCLIENT_SCHOOL_GOING = MyBase.Columns("CLIENT_SCHOOL_GOING")
            Me.columnCLIENT_LEVE_OF_EDU = MyBase.Columns("CLIENT_LEVE_OF_EDU")
            Me.columnCLIENT_FATHER = MyBase.Columns("CLIENT_FATHER")
            Me.columnCLIENT_FATHER_EDU = MyBase.Columns("CLIENT_FATHER_EDU")
            Me.columnCLIENT_FATHER_POS = MyBase.Columns("CLIENT_FATHER_POS")
            Me.columnCLIENT_MOTHER = MyBase.Columns("CLIENT_MOTHER")
            Me.columnCLIENT_MOTHER_EDU = MyBase.Columns("CLIENT_MOTHER_EDU")
            Me.columnCLIENT_MOTHER_POS = MyBase.Columns("CLIENT_MOTHER_POS")
            Me.columnCLIENT_HOUSE_NO = MyBase.Columns("CLIENT_HOUSE_NO")
            Me.columnCLIENT_STREET_NO = MyBase.Columns("CLIENT_STREET_NO")
            Me.columnCLIENT_VILLAGE = MyBase.Columns("CLIENT_VILLAGE")
            Me.columnCLIENT_COMMUNE = MyBase.Columns("CLIENT_COMMUNE")
            Me.columnCLIENT_DISTICT = MyBase.Columns("CLIENT_DISTICT")
            Me.columnCLIENT_CITY = MyBase.Columns("CLIENT_CITY")
            Me.columnCLIENT_PHONE = MyBase.Columns("CLIENT_PHONE")
            Me.columnCLIENT_CONSULTATION_PURPOSE = MyBase.Columns("CLIENT_CONSULTATION_PURPOSE")
            Me.columnCLIENT_IMP_NEUROPSY = MyBase.Columns("CLIENT_IMP_NEUROPSY")
            Me.columnCLIENT_IMP_DEV = MyBase.Columns("CLIENT_IMP_DEV")
            Me.columnCLIENT_PSYCHO = MyBase.Columns("CLIENT_PSYCHO")
            Me.columnCLIENT_SUBTYPE = MyBase.Columns("CLIENT_SUBTYPE")
            Me.columnCLIENT_REASON_FOR_NOT_REG = MyBase.Columns("CLIENT_REASON_FOR_NOT_REG")
            Me.columnCLIENT_ADV_REG_DATE = MyBase.Columns("CLIENT_ADV_REG_DATE")
            Me.columnCLIENT_ADV_REFERENCE = MyBase.Columns("CLIENT_ADV_REFERENCE")
            Me.columnYEARS = MyBase.Columns("YEARS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCLIENT_ID = New Global.System.Data.DataColumn("CLIENT_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ID)
            Me.columnCLIENT_NO = New Global.System.Data.DataColumn("CLIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NO)
            Me.columnCLIENT_NAME = New Global.System.Data.DataColumn("CLIENT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NAME)
            Me.columnCLIENT_SEX = New Global.System.Data.DataColumn("CLIENT_SEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_SEX)
            Me.columnCLIENT_AGE = New Global.System.Data.DataColumn("CLIENT_AGE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_AGE)
            Me.columnCLIENT_DOB = New Global.System.Data.DataColumn("CLIENT_DOB", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_DOB)
            Me.columnCLIENT_BROUGHT_BY = New Global.System.Data.DataColumn("CLIENT_BROUGHT_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_BROUGHT_BY)
            Me.columnCLIENT_REFERED_BY = New Global.System.Data.DataColumn("CLIENT_REFERED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_REFERED_BY)
            Me.columnCLIENT_SIBLING = New Global.System.Data.DataColumn("CLIENT_SIBLING", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_SIBLING)
            Me.columnCLIENT_BROTHER = New Global.System.Data.DataColumn("CLIENT_BROTHER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_BROTHER)
            Me.columnCLIENT_SISTER = New Global.System.Data.DataColumn("CLIENT_SISTER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_SISTER)
            Me.columnCLIENT_DATE_SEEN = New Global.System.Data.DataColumn("CLIENT_DATE_SEEN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_DATE_SEEN)
            Me.columnCLIENT_SCHOOL_GOING = New Global.System.Data.DataColumn("CLIENT_SCHOOL_GOING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_SCHOOL_GOING)
            Me.columnCLIENT_LEVE_OF_EDU = New Global.System.Data.DataColumn("CLIENT_LEVE_OF_EDU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_LEVE_OF_EDU)
            Me.columnCLIENT_FATHER = New Global.System.Data.DataColumn("CLIENT_FATHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_FATHER)
            Me.columnCLIENT_FATHER_EDU = New Global.System.Data.DataColumn("CLIENT_FATHER_EDU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_FATHER_EDU)
            Me.columnCLIENT_FATHER_POS = New Global.System.Data.DataColumn("CLIENT_FATHER_POS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_FATHER_POS)
            Me.columnCLIENT_MOTHER = New Global.System.Data.DataColumn("CLIENT_MOTHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_MOTHER)
            Me.columnCLIENT_MOTHER_EDU = New Global.System.Data.DataColumn("CLIENT_MOTHER_EDU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_MOTHER_EDU)
            Me.columnCLIENT_MOTHER_POS = New Global.System.Data.DataColumn("CLIENT_MOTHER_POS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_MOTHER_POS)
            Me.columnCLIENT_HOUSE_NO = New Global.System.Data.DataColumn("CLIENT_HOUSE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_HOUSE_NO)
            Me.columnCLIENT_STREET_NO = New Global.System.Data.DataColumn("CLIENT_STREET_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_STREET_NO)
            Me.columnCLIENT_VILLAGE = New Global.System.Data.DataColumn("CLIENT_VILLAGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_VILLAGE)
            Me.columnCLIENT_COMMUNE = New Global.System.Data.DataColumn("CLIENT_COMMUNE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_COMMUNE)
            Me.columnCLIENT_DISTICT = New Global.System.Data.DataColumn("CLIENT_DISTICT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_DISTICT)
            Me.columnCLIENT_CITY = New Global.System.Data.DataColumn("CLIENT_CITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CITY)
            Me.columnCLIENT_PHONE = New Global.System.Data.DataColumn("CLIENT_PHONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_PHONE)
            Me.columnCLIENT_CONSULTATION_PURPOSE = New Global.System.Data.DataColumn("CLIENT_CONSULTATION_PURPOSE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CONSULTATION_PURPOSE)
            Me.columnCLIENT_IMP_NEUROPSY = New Global.System.Data.DataColumn("CLIENT_IMP_NEUROPSY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_IMP_NEUROPSY)
            Me.columnCLIENT_IMP_DEV = New Global.System.Data.DataColumn("CLIENT_IMP_DEV", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_IMP_DEV)
            Me.columnCLIENT_PSYCHO = New Global.System.Data.DataColumn("CLIENT_PSYCHO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_PSYCHO)
            Me.columnCLIENT_SUBTYPE = New Global.System.Data.DataColumn("CLIENT_SUBTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_SUBTYPE)
            Me.columnCLIENT_REASON_FOR_NOT_REG = New Global.System.Data.DataColumn("CLIENT_REASON_FOR_NOT_REG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_REASON_FOR_NOT_REG)
            Me.columnCLIENT_ADV_REG_DATE = New Global.System.Data.DataColumn("CLIENT_ADV_REG_DATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADV_REG_DATE)
            Me.columnCLIENT_ADV_REFERENCE = New Global.System.Data.DataColumn("CLIENT_ADV_REFERENCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADV_REFERENCE)
            Me.columnYEARS = New Global.System.Data.DataColumn("YEARS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYEARS)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCLIENT_NO}, true))
            Me.columnCLIENT_ID.AutoIncrement = true
            Me.columnCLIENT_ID.AutoIncrementSeed = -1
            Me.columnCLIENT_ID.AutoIncrementStep = -1
            Me.columnCLIENT_ID.AllowDBNull = false
            Me.columnCLIENT_ID.ReadOnly = true
            Me.columnCLIENT_NO.AllowDBNull = false
            Me.columnCLIENT_NO.Unique = true
            Me.columnCLIENT_NAME.MaxLength = 100
            Me.columnCLIENT_SEX.MaxLength = 1
            Me.columnCLIENT_BROUGHT_BY.MaxLength = 50
            Me.columnCLIENT_REFERED_BY.MaxLength = 50
            Me.columnCLIENT_SCHOOL_GOING.MaxLength = 50
            Me.columnCLIENT_LEVE_OF_EDU.MaxLength = 50
            Me.columnCLIENT_FATHER.MaxLength = 100
            Me.columnCLIENT_FATHER_EDU.MaxLength = 50
            Me.columnCLIENT_FATHER_POS.MaxLength = 50
            Me.columnCLIENT_MOTHER.MaxLength = 50
            Me.columnCLIENT_MOTHER_EDU.MaxLength = 50
            Me.columnCLIENT_MOTHER_POS.MaxLength = 50
            Me.columnCLIENT_HOUSE_NO.MaxLength = 50
            Me.columnCLIENT_STREET_NO.MaxLength = 50
            Me.columnCLIENT_VILLAGE.MaxLength = 50
            Me.columnCLIENT_COMMUNE.MaxLength = 50
            Me.columnCLIENT_DISTICT.MaxLength = 50
            Me.columnCLIENT_CITY.MaxLength = 50
            Me.columnCLIENT_PHONE.MaxLength = 50
            Me.columnCLIENT_CONSULTATION_PURPOSE.MaxLength = 300
            Me.columnCLIENT_SUBTYPE.MaxLength = 300
            Me.columnCLIENT_REASON_FOR_NOT_REG.MaxLength = 300
            Me.columnCLIENT_ADV_REG_DATE.MaxLength = 300
            Me.columnCLIENT_ADV_REFERENCE.MaxLength = 300
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewCCAMH_CLIENTS111Row() As CCAMH_CLIENTS111Row
            Return CType(Me.NewRow,CCAMH_CLIENTS111Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CCAMH_CLIENTS111Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CCAMH_CLIENTS111Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CCAMH_CLIENTS111RowChangedEvent) Is Nothing) Then
                RaiseEvent CCAMH_CLIENTS111RowChanged(Me, New CCAMH_CLIENTS111RowChangeEvent(CType(e.Row,CCAMH_CLIENTS111Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CCAMH_CLIENTS111RowChangingEvent) Is Nothing) Then
                RaiseEvent CCAMH_CLIENTS111RowChanging(Me, New CCAMH_CLIENTS111RowChangeEvent(CType(e.Row,CCAMH_CLIENTS111Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CCAMH_CLIENTS111RowDeletedEvent) Is Nothing) Then
                RaiseEvent CCAMH_CLIENTS111RowDeleted(Me, New CCAMH_CLIENTS111RowChangeEvent(CType(e.Row,CCAMH_CLIENTS111Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CCAMH_CLIENTS111RowDeletingEvent) Is Nothing) Then
                RaiseEvent CCAMH_CLIENTS111RowDeleting(Me, New CCAMH_CLIENTS111RowChangeEvent(CType(e.Row,CCAMH_CLIENTS111Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveCCAMH_CLIENTS111Row(ByVal row As CCAMH_CLIENTS111Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSCClientRegistration = New DSCClientRegistration
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CCAMH_CLIENTS111DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CCAMH_CLIENTSDataTable
        Inherits Global.System.Data.TypedTableBase(Of CCAMH_CLIENTSRow)
        
        Private columnCLIENT_ID As Global.System.Data.DataColumn
        
        Private columnCLIENT_NO As Global.System.Data.DataColumn
        
        Private columnCLIENT_NAME As Global.System.Data.DataColumn
        
        Private columnCLIENT_SEX As Global.System.Data.DataColumn
        
        Private columnCLIENT_AGE As Global.System.Data.DataColumn
        
        Private columnCLIENT_DOB As Global.System.Data.DataColumn
        
        Private columnCLIENT_BROUGHT_BY As Global.System.Data.DataColumn
        
        Private columnCLIENT_REFERED_BY As Global.System.Data.DataColumn
        
        Private columnCLIENT_SIBLING As Global.System.Data.DataColumn
        
        Private columnCLIENT_BROTHER As Global.System.Data.DataColumn
        
        Private columnCLIENT_SISTER As Global.System.Data.DataColumn
        
        Private columnCLIENT_DATE_SEEN As Global.System.Data.DataColumn
        
        Private columnCLIENT_SCHOOL_GOING As Global.System.Data.DataColumn
        
        Private columnCLIENT_LEVE_OF_EDU As Global.System.Data.DataColumn
        
        Private columnCLIENT_FATHER As Global.System.Data.DataColumn
        
        Private columnCLIENT_FATHER_EDU As Global.System.Data.DataColumn
        
        Private columnCLIENT_FATHER_POS As Global.System.Data.DataColumn
        
        Private columnCLIENT_MOTHER As Global.System.Data.DataColumn
        
        Private columnCLIENT_MOTHER_EDU As Global.System.Data.DataColumn
        
        Private columnCLIENT_MOTHER_POS As Global.System.Data.DataColumn
        
        Private columnCLIENT_HOUSE_NO As Global.System.Data.DataColumn
        
        Private columnCLIENT_STREET_NO As Global.System.Data.DataColumn
        
        Private columnCLIENT_VILLAGE As Global.System.Data.DataColumn
        
        Private columnCLIENT_COMMUNE As Global.System.Data.DataColumn
        
        Private columnCLIENT_DISTICT As Global.System.Data.DataColumn
        
        Private columnCLIENT_CITY As Global.System.Data.DataColumn
        
        Private columnCLIENT_PHONE As Global.System.Data.DataColumn
        
        Private columnCLIENT_CONSULTATION_PURPOSE As Global.System.Data.DataColumn
        
        Private columnCLIENT_IMP_NEUROPSY As Global.System.Data.DataColumn
        
        Private columnCLIENT_IMP_DEV As Global.System.Data.DataColumn
        
        Private columnCLIENT_PSYCHO As Global.System.Data.DataColumn
        
        Private columnCLIENT_SUBTYPE As Global.System.Data.DataColumn
        
        Private columnCLIENT_REASON_FOR_NOT_REG As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADV_REFERENCE As Global.System.Data.DataColumn
        
        Private columnYEARS As Global.System.Data.DataColumn
        
        Private columnCLIENT_DATE_REG As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CCAMH_CLIENTS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_SEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_SEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_AGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_AGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_DOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_DOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_BROUGHT_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_BROUGHT_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_REFERED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_REFERED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_SIBLINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_SIBLING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_BROTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_BROTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_SISTERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_SISTER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_DATE_SEENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_DATE_SEEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_SCHOOL_GOINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_SCHOOL_GOING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_LEVE_OF_EDUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_LEVE_OF_EDU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_FATHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_FATHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_FATHER_EDUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_FATHER_EDU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_FATHER_POSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_FATHER_POS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_MOTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_MOTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_MOTHER_EDUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_MOTHER_EDU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_MOTHER_POSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_MOTHER_POS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_HOUSE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_HOUSE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_STREET_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_STREET_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_VILLAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_VILLAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_COMMUNEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_COMMUNE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_DISTICTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_DISTICT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_CITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_PHONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_PHONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_CONSULTATION_PURPOSEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CONSULTATION_PURPOSE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_IMP_NEUROPSYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_IMP_NEUROPSY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_IMP_DEVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_IMP_DEV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_PSYCHOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_PSYCHO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_SUBTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_SUBTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_REASON_FOR_NOT_REGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_REASON_FOR_NOT_REG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_ADV_REFERENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADV_REFERENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property YEARSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYEARS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CLIENT_DATE_REGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_DATE_REG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CCAMH_CLIENTSRow
            Get
                Return CType(Me.Rows(index),CCAMH_CLIENTSRow)
            End Get
        End Property
        
        Public Event CCAMH_CLIENTSRowChanging As CCAMH_CLIENTSRowChangeEventHandler
        
        Public Event CCAMH_CLIENTSRowChanged As CCAMH_CLIENTSRowChangeEventHandler
        
        Public Event CCAMH_CLIENTSRowDeleting As CCAMH_CLIENTSRowChangeEventHandler
        
        Public Event CCAMH_CLIENTSRowDeleted As CCAMH_CLIENTSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddCCAMH_CLIENTSRow(ByVal row As CCAMH_CLIENTSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddCCAMH_CLIENTSRow( _
                    ByVal CLIENT_NO As Decimal,  _
                    ByVal CLIENT_NAME As String,  _
                    ByVal CLIENT_SEX As String,  _
                    ByVal CLIENT_AGE As Decimal,  _
                    ByVal CLIENT_DOB As Date,  _
                    ByVal CLIENT_BROUGHT_BY As String,  _
                    ByVal CLIENT_REFERED_BY As String,  _
                    ByVal CLIENT_SIBLING As Decimal,  _
                    ByVal CLIENT_BROTHER As Decimal,  _
                    ByVal CLIENT_SISTER As Decimal,  _
                    ByVal CLIENT_DATE_SEEN As Date,  _
                    ByVal CLIENT_SCHOOL_GOING As String,  _
                    ByVal CLIENT_LEVE_OF_EDU As String,  _
                    ByVal CLIENT_FATHER As String,  _
                    ByVal CLIENT_FATHER_EDU As String,  _
                    ByVal CLIENT_FATHER_POS As String,  _
                    ByVal CLIENT_MOTHER As String,  _
                    ByVal CLIENT_MOTHER_EDU As String,  _
                    ByVal CLIENT_MOTHER_POS As String,  _
                    ByVal CLIENT_HOUSE_NO As String,  _
                    ByVal CLIENT_STREET_NO As String,  _
                    ByVal CLIENT_VILLAGE As String,  _
                    ByVal CLIENT_COMMUNE As String,  _
                    ByVal CLIENT_DISTICT As String,  _
                    ByVal CLIENT_CITY As String,  _
                    ByVal CLIENT_PHONE As String,  _
                    ByVal CLIENT_CONSULTATION_PURPOSE As String,  _
                    ByVal CLIENT_IMP_NEUROPSY As Boolean,  _
                    ByVal CLIENT_IMP_DEV As Boolean,  _
                    ByVal CLIENT_PSYCHO As Boolean,  _
                    ByVal CLIENT_SUBTYPE As String,  _
                    ByVal CLIENT_REASON_FOR_NOT_REG As String,  _
                    ByVal CLIENT_ADV_REFERENCE As String,  _
                    ByVal YEARS As Decimal,  _
                    ByVal CLIENT_DATE_REG As String) As CCAMH_CLIENTSRow
            Dim rowCCAMH_CLIENTSRow As CCAMH_CLIENTSRow = CType(Me.NewRow,CCAMH_CLIENTSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CLIENT_NO, CLIENT_NAME, CLIENT_SEX, CLIENT_AGE, CLIENT_DOB, CLIENT_BROUGHT_BY, CLIENT_REFERED_BY, CLIENT_SIBLING, CLIENT_BROTHER, CLIENT_SISTER, CLIENT_DATE_SEEN, CLIENT_SCHOOL_GOING, CLIENT_LEVE_OF_EDU, CLIENT_FATHER, CLIENT_FATHER_EDU, CLIENT_FATHER_POS, CLIENT_MOTHER, CLIENT_MOTHER_EDU, CLIENT_MOTHER_POS, CLIENT_HOUSE_NO, CLIENT_STREET_NO, CLIENT_VILLAGE, CLIENT_COMMUNE, CLIENT_DISTICT, CLIENT_CITY, CLIENT_PHONE, CLIENT_CONSULTATION_PURPOSE, CLIENT_IMP_NEUROPSY, CLIENT_IMP_DEV, CLIENT_PSYCHO, CLIENT_SUBTYPE, CLIENT_REASON_FOR_NOT_REG, CLIENT_ADV_REFERENCE, YEARS, CLIENT_DATE_REG}
            rowCCAMH_CLIENTSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCCAMH_CLIENTSRow)
            Return rowCCAMH_CLIENTSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByCLIENT_NO(ByVal CLIENT_NO As Decimal) As CCAMH_CLIENTSRow
            Return CType(Me.Rows.Find(New Object() {CLIENT_NO}),CCAMH_CLIENTSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CCAMH_CLIENTSDataTable = CType(MyBase.Clone,CCAMH_CLIENTSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CCAMH_CLIENTSDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCLIENT_ID = MyBase.Columns("CLIENT_ID")
            Me.columnCLIENT_NO = MyBase.Columns("CLIENT_NO")
            Me.columnCLIENT_NAME = MyBase.Columns("CLIENT_NAME")
            Me.columnCLIENT_SEX = MyBase.Columns("CLIENT_SEX")
            Me.columnCLIENT_AGE = MyBase.Columns("CLIENT_AGE")
            Me.columnCLIENT_DOB = MyBase.Columns("CLIENT_DOB")
            Me.columnCLIENT_BROUGHT_BY = MyBase.Columns("CLIENT_BROUGHT_BY")
            Me.columnCLIENT_REFERED_BY = MyBase.Columns("CLIENT_REFERED_BY")
            Me.columnCLIENT_SIBLING = MyBase.Columns("CLIENT_SIBLING")
            Me.columnCLIENT_BROTHER = MyBase.Columns("CLIENT_BROTHER")
            Me.columnCLIENT_SISTER = MyBase.Columns("CLIENT_SISTER")
            Me.columnCLIENT_DATE_SEEN = MyBase.Columns("CLIENT_DATE_SEEN")
            Me.columnCLIENT_SCHOOL_GOING = MyBase.Columns("CLIENT_SCHOOL_GOING")
            Me.columnCLIENT_LEVE_OF_EDU = MyBase.Columns("CLIENT_LEVE_OF_EDU")
            Me.columnCLIENT_FATHER = MyBase.Columns("CLIENT_FATHER")
            Me.columnCLIENT_FATHER_EDU = MyBase.Columns("CLIENT_FATHER_EDU")
            Me.columnCLIENT_FATHER_POS = MyBase.Columns("CLIENT_FATHER_POS")
            Me.columnCLIENT_MOTHER = MyBase.Columns("CLIENT_MOTHER")
            Me.columnCLIENT_MOTHER_EDU = MyBase.Columns("CLIENT_MOTHER_EDU")
            Me.columnCLIENT_MOTHER_POS = MyBase.Columns("CLIENT_MOTHER_POS")
            Me.columnCLIENT_HOUSE_NO = MyBase.Columns("CLIENT_HOUSE_NO")
            Me.columnCLIENT_STREET_NO = MyBase.Columns("CLIENT_STREET_NO")
            Me.columnCLIENT_VILLAGE = MyBase.Columns("CLIENT_VILLAGE")
            Me.columnCLIENT_COMMUNE = MyBase.Columns("CLIENT_COMMUNE")
            Me.columnCLIENT_DISTICT = MyBase.Columns("CLIENT_DISTICT")
            Me.columnCLIENT_CITY = MyBase.Columns("CLIENT_CITY")
            Me.columnCLIENT_PHONE = MyBase.Columns("CLIENT_PHONE")
            Me.columnCLIENT_CONSULTATION_PURPOSE = MyBase.Columns("CLIENT_CONSULTATION_PURPOSE")
            Me.columnCLIENT_IMP_NEUROPSY = MyBase.Columns("CLIENT_IMP_NEUROPSY")
            Me.columnCLIENT_IMP_DEV = MyBase.Columns("CLIENT_IMP_DEV")
            Me.columnCLIENT_PSYCHO = MyBase.Columns("CLIENT_PSYCHO")
            Me.columnCLIENT_SUBTYPE = MyBase.Columns("CLIENT_SUBTYPE")
            Me.columnCLIENT_REASON_FOR_NOT_REG = MyBase.Columns("CLIENT_REASON_FOR_NOT_REG")
            Me.columnCLIENT_ADV_REFERENCE = MyBase.Columns("CLIENT_ADV_REFERENCE")
            Me.columnYEARS = MyBase.Columns("YEARS")
            Me.columnCLIENT_DATE_REG = MyBase.Columns("CLIENT_DATE_REG")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCLIENT_ID = New Global.System.Data.DataColumn("CLIENT_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ID)
            Me.columnCLIENT_NO = New Global.System.Data.DataColumn("CLIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NO)
            Me.columnCLIENT_NAME = New Global.System.Data.DataColumn("CLIENT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NAME)
            Me.columnCLIENT_SEX = New Global.System.Data.DataColumn("CLIENT_SEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_SEX)
            Me.columnCLIENT_AGE = New Global.System.Data.DataColumn("CLIENT_AGE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_AGE)
            Me.columnCLIENT_DOB = New Global.System.Data.DataColumn("CLIENT_DOB", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_DOB)
            Me.columnCLIENT_BROUGHT_BY = New Global.System.Data.DataColumn("CLIENT_BROUGHT_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_BROUGHT_BY)
            Me.columnCLIENT_REFERED_BY = New Global.System.Data.DataColumn("CLIENT_REFERED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_REFERED_BY)
            Me.columnCLIENT_SIBLING = New Global.System.Data.DataColumn("CLIENT_SIBLING", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_SIBLING)
            Me.columnCLIENT_BROTHER = New Global.System.Data.DataColumn("CLIENT_BROTHER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_BROTHER)
            Me.columnCLIENT_SISTER = New Global.System.Data.DataColumn("CLIENT_SISTER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_SISTER)
            Me.columnCLIENT_DATE_SEEN = New Global.System.Data.DataColumn("CLIENT_DATE_SEEN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_DATE_SEEN)
            Me.columnCLIENT_SCHOOL_GOING = New Global.System.Data.DataColumn("CLIENT_SCHOOL_GOING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_SCHOOL_GOING)
            Me.columnCLIENT_LEVE_OF_EDU = New Global.System.Data.DataColumn("CLIENT_LEVE_OF_EDU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_LEVE_OF_EDU)
            Me.columnCLIENT_FATHER = New Global.System.Data.DataColumn("CLIENT_FATHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_FATHER)
            Me.columnCLIENT_FATHER_EDU = New Global.System.Data.DataColumn("CLIENT_FATHER_EDU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_FATHER_EDU)
            Me.columnCLIENT_FATHER_POS = New Global.System.Data.DataColumn("CLIENT_FATHER_POS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_FATHER_POS)
            Me.columnCLIENT_MOTHER = New Global.System.Data.DataColumn("CLIENT_MOTHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_MOTHER)
            Me.columnCLIENT_MOTHER_EDU = New Global.System.Data.DataColumn("CLIENT_MOTHER_EDU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_MOTHER_EDU)
            Me.columnCLIENT_MOTHER_POS = New Global.System.Data.DataColumn("CLIENT_MOTHER_POS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_MOTHER_POS)
            Me.columnCLIENT_HOUSE_NO = New Global.System.Data.DataColumn("CLIENT_HOUSE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_HOUSE_NO)
            Me.columnCLIENT_STREET_NO = New Global.System.Data.DataColumn("CLIENT_STREET_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_STREET_NO)
            Me.columnCLIENT_VILLAGE = New Global.System.Data.DataColumn("CLIENT_VILLAGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_VILLAGE)
            Me.columnCLIENT_COMMUNE = New Global.System.Data.DataColumn("CLIENT_COMMUNE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_COMMUNE)
            Me.columnCLIENT_DISTICT = New Global.System.Data.DataColumn("CLIENT_DISTICT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_DISTICT)
            Me.columnCLIENT_CITY = New Global.System.Data.DataColumn("CLIENT_CITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CITY)
            Me.columnCLIENT_PHONE = New Global.System.Data.DataColumn("CLIENT_PHONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_PHONE)
            Me.columnCLIENT_CONSULTATION_PURPOSE = New Global.System.Data.DataColumn("CLIENT_CONSULTATION_PURPOSE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CONSULTATION_PURPOSE)
            Me.columnCLIENT_IMP_NEUROPSY = New Global.System.Data.DataColumn("CLIENT_IMP_NEUROPSY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_IMP_NEUROPSY)
            Me.columnCLIENT_IMP_DEV = New Global.System.Data.DataColumn("CLIENT_IMP_DEV", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_IMP_DEV)
            Me.columnCLIENT_PSYCHO = New Global.System.Data.DataColumn("CLIENT_PSYCHO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_PSYCHO)
            Me.columnCLIENT_SUBTYPE = New Global.System.Data.DataColumn("CLIENT_SUBTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_SUBTYPE)
            Me.columnCLIENT_REASON_FOR_NOT_REG = New Global.System.Data.DataColumn("CLIENT_REASON_FOR_NOT_REG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_REASON_FOR_NOT_REG)
            Me.columnCLIENT_ADV_REFERENCE = New Global.System.Data.DataColumn("CLIENT_ADV_REFERENCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADV_REFERENCE)
            Me.columnYEARS = New Global.System.Data.DataColumn("YEARS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYEARS)
            Me.columnCLIENT_DATE_REG = New Global.System.Data.DataColumn("CLIENT_DATE_REG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_DATE_REG)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCLIENT_NO}, true))
            Me.columnCLIENT_ID.AutoIncrement = true
            Me.columnCLIENT_ID.AutoIncrementSeed = -1
            Me.columnCLIENT_ID.AutoIncrementStep = -1
            Me.columnCLIENT_ID.AllowDBNull = false
            Me.columnCLIENT_ID.ReadOnly = true
            Me.columnCLIENT_NO.AllowDBNull = false
            Me.columnCLIENT_NO.Unique = true
            Me.columnCLIENT_NAME.MaxLength = 100
            Me.columnCLIENT_SEX.MaxLength = 1
            Me.columnCLIENT_BROUGHT_BY.MaxLength = 50
            Me.columnCLIENT_REFERED_BY.MaxLength = 50
            Me.columnCLIENT_SCHOOL_GOING.MaxLength = 50
            Me.columnCLIENT_LEVE_OF_EDU.MaxLength = 50
            Me.columnCLIENT_FATHER.MaxLength = 100
            Me.columnCLIENT_FATHER_EDU.MaxLength = 50
            Me.columnCLIENT_FATHER_POS.MaxLength = 50
            Me.columnCLIENT_MOTHER.MaxLength = 50
            Me.columnCLIENT_MOTHER_EDU.MaxLength = 50
            Me.columnCLIENT_MOTHER_POS.MaxLength = 50
            Me.columnCLIENT_HOUSE_NO.MaxLength = 50
            Me.columnCLIENT_STREET_NO.MaxLength = 50
            Me.columnCLIENT_VILLAGE.MaxLength = 50
            Me.columnCLIENT_COMMUNE.MaxLength = 50
            Me.columnCLIENT_DISTICT.MaxLength = 50
            Me.columnCLIENT_CITY.MaxLength = 50
            Me.columnCLIENT_PHONE.MaxLength = 50
            Me.columnCLIENT_CONSULTATION_PURPOSE.MaxLength = 300
            Me.columnCLIENT_SUBTYPE.MaxLength = 300
            Me.columnCLIENT_REASON_FOR_NOT_REG.MaxLength = 300
            Me.columnCLIENT_ADV_REFERENCE.MaxLength = 300
            Me.columnCLIENT_DATE_REG.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewCCAMH_CLIENTSRow() As CCAMH_CLIENTSRow
            Return CType(Me.NewRow,CCAMH_CLIENTSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CCAMH_CLIENTSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CCAMH_CLIENTSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CCAMH_CLIENTSRowChangedEvent) Is Nothing) Then
                RaiseEvent CCAMH_CLIENTSRowChanged(Me, New CCAMH_CLIENTSRowChangeEvent(CType(e.Row,CCAMH_CLIENTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CCAMH_CLIENTSRowChangingEvent) Is Nothing) Then
                RaiseEvent CCAMH_CLIENTSRowChanging(Me, New CCAMH_CLIENTSRowChangeEvent(CType(e.Row,CCAMH_CLIENTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CCAMH_CLIENTSRowDeletedEvent) Is Nothing) Then
                RaiseEvent CCAMH_CLIENTSRowDeleted(Me, New CCAMH_CLIENTSRowChangeEvent(CType(e.Row,CCAMH_CLIENTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CCAMH_CLIENTSRowDeletingEvent) Is Nothing) Then
                RaiseEvent CCAMH_CLIENTSRowDeleting(Me, New CCAMH_CLIENTSRowChangeEvent(CType(e.Row,CCAMH_CLIENTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveCCAMH_CLIENTSRow(ByVal row As CCAMH_CLIENTSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSCClientRegistration = New DSCClientRegistration
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CCAMH_CLIENTSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tblProvincesRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblProvinces As tblProvincesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblProvinces = CType(Me.Table,tblProvincesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDProvCode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblProvinces.IDProvCodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDProvCode' in table 'tblProvinces' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblProvinces.IDProvCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Province() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblProvinces.ProvinceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Province' in table 'tblProvinces' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblProvinces.ProvinceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Khet() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblProvinces.KhetColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Khet' in table 'tblProvinces' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblProvinces.KhetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Abrev() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblProvinces.AbrevColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Abrev' in table 'tblProvinces' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblProvinces.AbrevColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIDProvCodeNull() As Boolean
            Return Me.IsNull(Me.tabletblProvinces.IDProvCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIDProvCodeNull()
            Me(Me.tabletblProvinces.IDProvCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProvinceNull() As Boolean
            Return Me.IsNull(Me.tabletblProvinces.ProvinceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProvinceNull()
            Me(Me.tabletblProvinces.ProvinceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKhetNull() As Boolean
            Return Me.IsNull(Me.tabletblProvinces.KhetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKhetNull()
            Me(Me.tabletblProvinces.KhetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAbrevNull() As Boolean
            Return Me.IsNull(Me.tabletblProvinces.AbrevColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAbrevNull()
            Me(Me.tabletblProvinces.AbrevColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tblDistrictsRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblDistricts As tblDistrictsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblDistricts = CType(Me.Table,tblDistrictsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDProvCode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblDistricts.IDProvCodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDProvCode' in table 'tblDistricts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblDistricts.IDProvCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SrokCode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblDistricts.SrokCodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SrokCode' in table 'tblDistricts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblDistricts.SrokCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DISTRICT() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblDistricts.DISTRICTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISTRICT' in table 'tblDistricts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblDistricts.DISTRICTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property __suk() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblDistricts.__sukColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '¨suk' in table 'tblDistricts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblDistricts.__sukColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property XSROK() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblDistricts.XSROKColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XSROK' in table 'tblDistricts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblDistricts.XSROKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property YSROK() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblDistricts.YSROKColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YSROK' in table 'tblDistricts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblDistricts.YSROKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIDProvCodeNull() As Boolean
            Return Me.IsNull(Me.tabletblDistricts.IDProvCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIDProvCodeNull()
            Me(Me.tabletblDistricts.IDProvCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrokCodeNull() As Boolean
            Return Me.IsNull(Me.tabletblDistricts.SrokCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrokCodeNull()
            Me(Me.tabletblDistricts.SrokCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDISTRICTNull() As Boolean
            Return Me.IsNull(Me.tabletblDistricts.DISTRICTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDISTRICTNull()
            Me(Me.tabletblDistricts.DISTRICTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is__sukNull() As Boolean
            Return Me.IsNull(Me.tabletblDistricts.__sukColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set__sukNull()
            Me(Me.tabletblDistricts.__sukColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsXSROKNull() As Boolean
            Return Me.IsNull(Me.tabletblDistricts.XSROKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetXSROKNull()
            Me(Me.tabletblDistricts.XSROKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsYSROKNull() As Boolean
            Return Me.IsNull(Me.tabletblDistricts.YSROKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetYSROKNull()
            Me(Me.tabletblDistricts.YSROKColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tblCommunesRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblCommunes As tblCommunesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblCommunes = CType(Me.Table,tblCommunesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDProvCode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblCommunes.IDProvCodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDProvCode' in table 'tblCommunes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCommunes.IDProvCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SrokCode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblCommunes.SrokCodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SrokCode' in table 'tblCommunes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCommunes.SrokCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Commune() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblCommunes.CommuneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Commune' in table 'tblCommunes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCommunes.CommuneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KhumCode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblCommunes.KhumCodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KhumCode' in table 'tblCommunes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCommunes.KhumCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property XuM() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblCommunes.XuMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XuM' in table 'tblCommunes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCommunes.XuMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property XKHUM() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblCommunes.XKHUMColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XKHUM' in table 'tblCommunes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCommunes.XKHUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property YKHUM() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblCommunes.YKHUMColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YKHUM' in table 'tblCommunes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCommunes.YKHUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Mods() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblCommunes.ModsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mods' in table 'tblCommunes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblCommunes.ModsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIDProvCodeNull() As Boolean
            Return Me.IsNull(Me.tabletblCommunes.IDProvCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIDProvCodeNull()
            Me(Me.tabletblCommunes.IDProvCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrokCodeNull() As Boolean
            Return Me.IsNull(Me.tabletblCommunes.SrokCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrokCodeNull()
            Me(Me.tabletblCommunes.SrokCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCommuneNull() As Boolean
            Return Me.IsNull(Me.tabletblCommunes.CommuneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCommuneNull()
            Me(Me.tabletblCommunes.CommuneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKhumCodeNull() As Boolean
            Return Me.IsNull(Me.tabletblCommunes.KhumCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKhumCodeNull()
            Me(Me.tabletblCommunes.KhumCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsXuMNull() As Boolean
            Return Me.IsNull(Me.tabletblCommunes.XuMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetXuMNull()
            Me(Me.tabletblCommunes.XuMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsXKHUMNull() As Boolean
            Return Me.IsNull(Me.tabletblCommunes.XKHUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetXKHUMNull()
            Me(Me.tabletblCommunes.XKHUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsYKHUMNull() As Boolean
            Return Me.IsNull(Me.tabletblCommunes.YKHUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetYKHUMNull()
            Me(Me.tabletblCommunes.YKHUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsModsNull() As Boolean
            Return Me.IsNull(Me.tabletblCommunes.ModsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetModsNull()
            Me(Me.tabletblCommunes.ModsColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class TblOccupationRow
        Inherits Global.System.Data.DataRow
        
        Private tableTblOccupation As TblOccupationDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTblOccupation = CType(Me.Table,TblOccupationDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OccNo() As Decimal
            Get
                Return CType(Me(Me.tableTblOccupation.OccNoColumn),Decimal)
            End Get
            Set
                Me(Me.tableTblOccupation.OccNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Occupation() As String
            Get
                Try 
                    Return CType(Me(Me.tableTblOccupation.OccupationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Occupation' in table 'TblOccupation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTblOccupation.OccupationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOccupationNull() As Boolean
            Return Me.IsNull(Me.tableTblOccupation.OccupationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOccupationNull()
            Me(Me.tableTblOccupation.OccupationColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tblEducationRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblEducation As tblEducationDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblEducation = CType(Me.Table,tblEducationDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property eduNo() As Decimal
            Get
                Return CType(Me(Me.tabletblEducation.eduNoColumn),Decimal)
            End Get
            Set
                Me(Me.tabletblEducation.eduNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Education() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblEducation.EducationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Education' in table 'tblEducation' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblEducation.EducationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEducationNull() As Boolean
            Return Me.IsNull(Me.tabletblEducation.EducationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEducationNull()
            Me(Me.tabletblEducation.EducationColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tblVillagesRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblVillages As tblVillagesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblVillages = CType(Me.Table,tblVillagesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDProvCode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblVillages.IDProvCodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IDProvCode' in table 'tblVillages' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblVillages.IDProvCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SrokCode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblVillages.SrokCodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SrokCode' in table 'tblVillages' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblVillages.SrokCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KhumCode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblVillages.KhumCodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KhumCode' in table 'tblVillages' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblVillages.KhumCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PhumCode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblVillages.PhumCodeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PhumCode' in table 'tblVillages' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblVillages.PhumCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VILLAGE() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblVillages.VILLAGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VILLAGE' in table 'tblVillages' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblVillages.VILLAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PUmi() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblVillages.PUmiColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PUmi' in table 'tblVillages' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblVillages.PUmiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property XPHUM() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblVillages.XPHUMColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XPHUM' in table 'tblVillages' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblVillages.XPHUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property YPHUM() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblVillages.YPHUMColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YPHUM' in table 'tblVillages' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblVillages.YPHUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tabletblVillages.IDColumn),Integer)
            End Get
            Set
                Me(Me.tabletblVillages.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Mods() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblVillages.ModsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mods' in table 'tblVillages' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblVillages.ModsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIDProvCodeNull() As Boolean
            Return Me.IsNull(Me.tabletblVillages.IDProvCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIDProvCodeNull()
            Me(Me.tabletblVillages.IDProvCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSrokCodeNull() As Boolean
            Return Me.IsNull(Me.tabletblVillages.SrokCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSrokCodeNull()
            Me(Me.tabletblVillages.SrokCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKhumCodeNull() As Boolean
            Return Me.IsNull(Me.tabletblVillages.KhumCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKhumCodeNull()
            Me(Me.tabletblVillages.KhumCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPhumCodeNull() As Boolean
            Return Me.IsNull(Me.tabletblVillages.PhumCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPhumCodeNull()
            Me(Me.tabletblVillages.PhumCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVILLAGENull() As Boolean
            Return Me.IsNull(Me.tabletblVillages.VILLAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVILLAGENull()
            Me(Me.tabletblVillages.VILLAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPUmiNull() As Boolean
            Return Me.IsNull(Me.tabletblVillages.PUmiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPUmiNull()
            Me(Me.tabletblVillages.PUmiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsXPHUMNull() As Boolean
            Return Me.IsNull(Me.tabletblVillages.XPHUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetXPHUMNull()
            Me(Me.tabletblVillages.XPHUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsYPHUMNull() As Boolean
            Return Me.IsNull(Me.tabletblVillages.YPHUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetYPHUMNull()
            Me(Me.tabletblVillages.YPHUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsModsNull() As Boolean
            Return Me.IsNull(Me.tabletblVillages.ModsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetModsNull()
            Me(Me.tabletblVillages.ModsColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class CCAMH_CLIENTS111Row
        Inherits Global.System.Data.DataRow
        
        Private tableCCAMH_CLIENTS111 As CCAMH_CLIENTS111DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCCAMH_CLIENTS111 = CType(Me.Table,CCAMH_CLIENTS111DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_ID() As Decimal
            Get
                Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_NO() As Decimal
            Get
                Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_NOColumn),Decimal)
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NAME' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_SEX() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_SEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_SEX' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_SEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_AGE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_AGEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_AGE' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_AGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_DOB() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_DOBColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_DOB' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_DOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_BROUGHT_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_BROUGHT_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_BROUGHT_BY' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_BROUGHT_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_REFERED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_REFERED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_REFERED_BY' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_REFERED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_SIBLING() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_SIBLINGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_SIBLING' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_SIBLINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_BROTHER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_BROTHERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_BROTHER' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_BROTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_SISTER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_SISTERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_SISTER' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_SISTERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_DATE_SEEN() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_DATE_SEENColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_DATE_SEEN' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_DATE_SEENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_SCHOOL_GOING() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_SCHOOL_GOINGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_SCHOOL_GOING' in table 'CCAMH_CLIENTS111' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_SCHOOL_GOINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_LEVE_OF_EDU() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_LEVE_OF_EDUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_LEVE_OF_EDU' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_LEVE_OF_EDUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_FATHER() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_FATHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_FATHER' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_FATHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_FATHER_EDU() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_FATHER_EDUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_FATHER_EDU' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_FATHER_EDUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_FATHER_POS() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_FATHER_POSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_FATHER_POS' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_FATHER_POSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_MOTHER() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_MOTHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_MOTHER' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_MOTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_MOTHER_EDU() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_MOTHER_EDUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_MOTHER_EDU' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_MOTHER_EDUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_MOTHER_POS() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_MOTHER_POSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_MOTHER_POS' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_MOTHER_POSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_HOUSE_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_HOUSE_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_HOUSE_NO' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_HOUSE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_STREET_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_STREET_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_STREET_NO' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_STREET_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_VILLAGE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_VILLAGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_VILLAGE' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_VILLAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_COMMUNE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_COMMUNEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_COMMUNE' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_COMMUNEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_DISTICT() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_DISTICTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_DISTICT' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_DISTICTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_CITY() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_CITYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CITY' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_CITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_PHONE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_PHONEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_PHONE' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_PHONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_CONSULTATION_PURPOSE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_CONSULTATION_PURPOSEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CONSULTATION_PURPOSE' in table 'CCAMH_CLIENTS111' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_CONSULTATION_PURPOSEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_IMP_NEUROPSY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_IMP_NEUROPSYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_IMP_NEUROPSY' in table 'CCAMH_CLIENTS111' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_IMP_NEUROPSYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_IMP_DEV() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_IMP_DEVColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_IMP_DEV' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_IMP_DEVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_PSYCHO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_PSYCHOColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_PSYCHO' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_PSYCHOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_SUBTYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_SUBTYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_SUBTYPE' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_SUBTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_REASON_FOR_NOT_REG() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_REASON_FOR_NOT_REGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_REASON_FOR_NOT_REG' in table 'CCAMH_CLIENTS111' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_REASON_FOR_NOT_REGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_ADV_REG_DATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_ADV_REG_DATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADV_REG_DATE' in table 'CCAMH_CLIENTS111' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_ADV_REG_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_ADV_REFERENCE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.CLIENT_ADV_REFERENCEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADV_REFERENCE' in table 'CCAMH_CLIENTS111' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.CLIENT_ADV_REFERENCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property YEARS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS111.YEARSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YEARS' in table 'CCAMH_CLIENTS111' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS111.YEARSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_NAMENull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_SEXNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_SEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_SEXNull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_SEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_AGENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_AGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_AGENull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_AGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_DOBNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_DOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_DOBNull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_DOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_BROUGHT_BYNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_BROUGHT_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_BROUGHT_BYNull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_BROUGHT_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_REFERED_BYNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_REFERED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_REFERED_BYNull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_REFERED_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_SIBLINGNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_SIBLINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_SIBLINGNull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_SIBLINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_BROTHERNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_BROTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_BROTHERNull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_BROTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_SISTERNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_SISTERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_SISTERNull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_SISTERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_DATE_SEENNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_DATE_SEENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_DATE_SEENNull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_DATE_SEENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_SCHOOL_GOINGNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_SCHOOL_GOINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_SCHOOL_GOINGNull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_SCHOOL_GOINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_LEVE_OF_EDUNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_LEVE_OF_EDUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_LEVE_OF_EDUNull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_LEVE_OF_EDUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_FATHERNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_FATHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_FATHERNull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_FATHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_FATHER_EDUNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_FATHER_EDUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_FATHER_EDUNull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_FATHER_EDUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_FATHER_POSNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_FATHER_POSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_FATHER_POSNull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_FATHER_POSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_MOTHERNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_MOTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_MOTHERNull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_MOTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_MOTHER_EDUNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_MOTHER_EDUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_MOTHER_EDUNull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_MOTHER_EDUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_MOTHER_POSNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_MOTHER_POSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_MOTHER_POSNull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_MOTHER_POSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_HOUSE_NONull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_HOUSE_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_HOUSE_NONull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_HOUSE_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_STREET_NONull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_STREET_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_STREET_NONull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_STREET_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_VILLAGENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_VILLAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_VILLAGENull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_VILLAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_COMMUNENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_COMMUNEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_COMMUNENull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_COMMUNEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_DISTICTNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_DISTICTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_DISTICTNull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_DISTICTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_CITYNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_CITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_CITYNull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_CITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_PHONENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_PHONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_PHONENull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_PHONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_CONSULTATION_PURPOSENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_CONSULTATION_PURPOSEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_CONSULTATION_PURPOSENull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_CONSULTATION_PURPOSEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_IMP_NEUROPSYNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_IMP_NEUROPSYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_IMP_NEUROPSYNull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_IMP_NEUROPSYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_IMP_DEVNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_IMP_DEVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_IMP_DEVNull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_IMP_DEVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_PSYCHONull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_PSYCHOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_PSYCHONull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_PSYCHOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_SUBTYPENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_SUBTYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_SUBTYPENull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_SUBTYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_REASON_FOR_NOT_REGNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_REASON_FOR_NOT_REGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_REASON_FOR_NOT_REGNull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_REASON_FOR_NOT_REGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_ADV_REG_DATENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_ADV_REG_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_ADV_REG_DATENull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_ADV_REG_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_ADV_REFERENCENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.CLIENT_ADV_REFERENCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_ADV_REFERENCENull()
            Me(Me.tableCCAMH_CLIENTS111.CLIENT_ADV_REFERENCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsYEARSNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS111.YEARSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetYEARSNull()
            Me(Me.tableCCAMH_CLIENTS111.YEARSColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class CCAMH_CLIENTSRow
        Inherits Global.System.Data.DataRow
        
        Private tableCCAMH_CLIENTS As CCAMH_CLIENTSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCCAMH_CLIENTS = CType(Me.Table,CCAMH_CLIENTSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_ID() As Decimal
            Get
                Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_NO() As Decimal
            Get
                Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_NOColumn),Decimal)
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NAME' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_SEX() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_SEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_SEX' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_SEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_AGE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_AGEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_AGE' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_AGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_DOB() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_DOBColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_DOB' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_DOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_BROUGHT_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_BROUGHT_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_BROUGHT_BY' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_BROUGHT_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_REFERED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_REFERED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_REFERED_BY' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_REFERED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_SIBLING() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_SIBLINGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_SIBLING' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_SIBLINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_BROTHER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_BROTHERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_BROTHER' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_BROTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_SISTER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_SISTERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_SISTER' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_SISTERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_DATE_SEEN() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_DATE_SEENColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_DATE_SEEN' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_DATE_SEENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_SCHOOL_GOING() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_SCHOOL_GOINGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_SCHOOL_GOING' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_SCHOOL_GOINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_LEVE_OF_EDU() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_LEVE_OF_EDUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_LEVE_OF_EDU' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_LEVE_OF_EDUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_FATHER() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_FATHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_FATHER' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_FATHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_FATHER_EDU() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_FATHER_EDUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_FATHER_EDU' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_FATHER_EDUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_FATHER_POS() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_FATHER_POSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_FATHER_POS' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_FATHER_POSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_MOTHER() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_MOTHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_MOTHER' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_MOTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_MOTHER_EDU() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_MOTHER_EDUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_MOTHER_EDU' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_MOTHER_EDUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_MOTHER_POS() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_MOTHER_POSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_MOTHER_POS' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_MOTHER_POSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_HOUSE_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_HOUSE_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_HOUSE_NO' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_HOUSE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_STREET_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_STREET_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_STREET_NO' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_STREET_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_VILLAGE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_VILLAGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_VILLAGE' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_VILLAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_COMMUNE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_COMMUNEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_COMMUNE' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_COMMUNEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_DISTICT() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_DISTICTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_DISTICT' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_DISTICTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_CITY() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_CITYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CITY' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_CITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_PHONE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_PHONEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_PHONE' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_PHONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_CONSULTATION_PURPOSE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_CONSULTATION_PURPOSEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CONSULTATION_PURPOSE' in table 'CCAMH_CLIENTS' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_CONSULTATION_PURPOSEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_IMP_NEUROPSY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_IMP_NEUROPSYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_IMP_NEUROPSY' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_IMP_NEUROPSYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_IMP_DEV() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_IMP_DEVColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_IMP_DEV' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_IMP_DEVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_PSYCHO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_PSYCHOColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_PSYCHO' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_PSYCHOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_SUBTYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_SUBTYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_SUBTYPE' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_SUBTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_REASON_FOR_NOT_REG() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_REASON_FOR_NOT_REGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_REASON_FOR_NOT_REG' in table 'CCAMH_CLIENTS' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_REASON_FOR_NOT_REGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_ADV_REFERENCE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_ADV_REFERENCEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADV_REFERENCE' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_ADV_REFERENCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property YEARS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.YEARSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YEARS' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.YEARSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CLIENT_DATE_REG() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENTS.CLIENT_DATE_REGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_DATE_REG' in table 'CCAMH_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENTS.CLIENT_DATE_REGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_NAMENull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_SEXNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_SEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_SEXNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_SEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_AGENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_AGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_AGENull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_AGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_DOBNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_DOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_DOBNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_DOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_BROUGHT_BYNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_BROUGHT_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_BROUGHT_BYNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_BROUGHT_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_REFERED_BYNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_REFERED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_REFERED_BYNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_REFERED_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_SIBLINGNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_SIBLINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_SIBLINGNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_SIBLINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_BROTHERNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_BROTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_BROTHERNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_BROTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_SISTERNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_SISTERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_SISTERNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_SISTERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_DATE_SEENNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_DATE_SEENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_DATE_SEENNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_DATE_SEENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_SCHOOL_GOINGNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_SCHOOL_GOINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_SCHOOL_GOINGNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_SCHOOL_GOINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_LEVE_OF_EDUNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_LEVE_OF_EDUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_LEVE_OF_EDUNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_LEVE_OF_EDUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_FATHERNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_FATHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_FATHERNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_FATHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_FATHER_EDUNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_FATHER_EDUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_FATHER_EDUNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_FATHER_EDUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_FATHER_POSNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_FATHER_POSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_FATHER_POSNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_FATHER_POSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_MOTHERNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_MOTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_MOTHERNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_MOTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_MOTHER_EDUNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_MOTHER_EDUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_MOTHER_EDUNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_MOTHER_EDUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_MOTHER_POSNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_MOTHER_POSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_MOTHER_POSNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_MOTHER_POSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_HOUSE_NONull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_HOUSE_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_HOUSE_NONull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_HOUSE_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_STREET_NONull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_STREET_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_STREET_NONull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_STREET_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_VILLAGENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_VILLAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_VILLAGENull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_VILLAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_COMMUNENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_COMMUNEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_COMMUNENull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_COMMUNEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_DISTICTNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_DISTICTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_DISTICTNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_DISTICTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_CITYNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_CITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_CITYNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_CITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_PHONENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_PHONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_PHONENull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_PHONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_CONSULTATION_PURPOSENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_CONSULTATION_PURPOSEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_CONSULTATION_PURPOSENull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_CONSULTATION_PURPOSEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_IMP_NEUROPSYNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_IMP_NEUROPSYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_IMP_NEUROPSYNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_IMP_NEUROPSYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_IMP_DEVNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_IMP_DEVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_IMP_DEVNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_IMP_DEVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_PSYCHONull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_PSYCHOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_PSYCHONull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_PSYCHOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_SUBTYPENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_SUBTYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_SUBTYPENull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_SUBTYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_REASON_FOR_NOT_REGNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_REASON_FOR_NOT_REGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_REASON_FOR_NOT_REGNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_REASON_FOR_NOT_REGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_ADV_REFERENCENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_ADV_REFERENCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_ADV_REFERENCENull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_ADV_REFERENCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsYEARSNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.YEARSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetYEARSNull()
            Me(Me.tableCCAMH_CLIENTS.YEARSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCLIENT_DATE_REGNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENTS.CLIENT_DATE_REGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCLIENT_DATE_REGNull()
            Me(Me.tableCCAMH_CLIENTS.CLIENT_DATE_REGColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tblProvincesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblProvincesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tblProvincesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tblProvincesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tblDistrictsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblDistrictsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tblDistrictsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tblDistrictsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tblCommunesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblCommunesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tblCommunesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tblCommunesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class TblOccupationRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TblOccupationRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As TblOccupationRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As TblOccupationRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tblEducationRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblEducationRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tblEducationRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tblEducationRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tblVillagesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblVillagesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tblVillagesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tblVillagesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class CCAMH_CLIENTS111RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CCAMH_CLIENTS111Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As CCAMH_CLIENTS111Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As CCAMH_CLIENTS111Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class CCAMH_CLIENTSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CCAMH_CLIENTSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As CCAMH_CLIENTSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As CCAMH_CLIENTSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DSCClientRegistrationTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblProvincesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblProvinces"
            tableMapping.ColumnMappings.Add("IDProvCode", "IDProvCode")
            tableMapping.ColumnMappings.Add("Province", "Province")
            tableMapping.ColumnMappings.Add("Khet", "Khet")
            tableMapping.ColumnMappings.Add("Abrev", "Abrev")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblProvinces] ([IDProvCode], [Province], [Khet], [Abrev]) VALUES (@I"& _ 
                "DProvCode, @Province, @Khet, @Abrev)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDProvCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDProvCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Province", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Province", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Khet", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Khet", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Abrev", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Abrev", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        IDProvCode, Province, Khet, Abrev"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblProvinces"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"OR"& _ 
                "DER BY IDProvCode"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSCClientRegistration.tblProvincesDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSCClientRegistration.tblProvincesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSCClientRegistration.tblProvincesDataTable = New DSCClientRegistration.tblProvincesDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSCClientRegistration.tblProvincesDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSCClientRegistration) As Integer
            Return Me.Adapter.Update(dataSet, "tblProvinces")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal IDProvCode As Global.System.Nullable(Of Integer), ByVal Province As String, ByVal Khet As String, ByVal Abrev As String) As Integer
            If (IDProvCode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(IDProvCode.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Province Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Province,String)
            End If
            If (Khet Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Khet,String)
            End If
            If (Abrev Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Abrev,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblDistrictsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblDistricts"
            tableMapping.ColumnMappings.Add("IDProvCode", "IDProvCode")
            tableMapping.ColumnMappings.Add("SrokCode", "SrokCode")
            tableMapping.ColumnMappings.Add("DISTRICT", "DISTRICT")
            tableMapping.ColumnMappings.Add("¨suk", "¨suk")
            tableMapping.ColumnMappings.Add("XSROK", "XSROK")
            tableMapping.ColumnMappings.Add("YSROK", "YSROK")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblDistricts] ([IDProvCode], [SrokCode], [DISTRICT], [¨suk], [XSROK]"& _ 
                ", [YSROK]) VALUES (@IDProvCode, @SrokCode, @DISTRICT, @p1, @XSROK, @YSROK)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDProvCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDProvCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SrokCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SrokCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DISTRICT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DISTRICT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@p1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "¨suk", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XSROK", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XSROK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YSROK", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YSROK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        IDProvCode, SrokCode, DISTRICT, [¨suk], XSROK, YSROK"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         "& _ 
                "   tblDistricts"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        IDProvCode, SrokCode, DISTRICT, [¨suk], XSROK, YSROK"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         "& _ 
                "   tblDistricts"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE         IDProvCode = @IDProvCode"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDProvCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "IDProvCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSCClientRegistration.tblDistrictsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSCClientRegistration.tblDistrictsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSCClientRegistration.tblDistrictsDataTable = New DSCClientRegistration.tblDistrictsDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSCClientRegistration.tblDistrictsDataTable, ByVal IDProvCode As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (IDProvCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(IDProvCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function getDistrict(ByVal IDProvCode As Global.System.Nullable(Of Integer)) As DSCClientRegistration.tblDistrictsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (IDProvCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(IDProvCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSCClientRegistration.tblDistrictsDataTable = New DSCClientRegistration.tblDistrictsDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSCClientRegistration.tblDistrictsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSCClientRegistration) As Integer
            Return Me.Adapter.Update(dataSet, "tblDistricts")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal IDProvCode As Global.System.Nullable(Of Integer), ByVal SrokCode As Global.System.Nullable(Of Integer), ByVal DISTRICT As String, ByVal p1 As String, ByVal XSROK As Global.System.Nullable(Of Double), ByVal YSROK As Global.System.Nullable(Of Double)) As Integer
            If (IDProvCode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(IDProvCode.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (SrokCode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SrokCode.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DISTRICT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DISTRICT,String)
            End If
            If (p1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(p1,String)
            End If
            If (XSROK.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(XSROK.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (YSROK.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(YSROK.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblCommunesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblCommunes"
            tableMapping.ColumnMappings.Add("IDProvCode", "IDProvCode")
            tableMapping.ColumnMappings.Add("SrokCode", "SrokCode")
            tableMapping.ColumnMappings.Add("Commune", "Commune")
            tableMapping.ColumnMappings.Add("KhumCode", "KhumCode")
            tableMapping.ColumnMappings.Add("XuM", "XuM")
            tableMapping.ColumnMappings.Add("XKHUM", "XKHUM")
            tableMapping.ColumnMappings.Add("YKHUM", "YKHUM")
            tableMapping.ColumnMappings.Add("Mods", "Mods")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblCommunes] ([IDProvCode], [SrokCode], [Commune], [KhumCode], [XuM]"& _ 
                ", [XKHUM], [YKHUM], [Mods]) VALUES (@IDProvCode, @SrokCode, @Commune, @KhumCode,"& _ 
                " @XuM, @XKHUM, @YKHUM, @Mods)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDProvCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDProvCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SrokCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SrokCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Commune", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Commune", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KhumCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KhumCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XuM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XuM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XKHUM", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XKHUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YKHUM", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YKHUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mods", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mods", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        IDProvCode, SrokCode, Commune, KhumCode, XuM, XKHUM, YKHUM, Mods"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"F"& _ 
                "ROM            tblCommunes"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY IDProvCode"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        IDProvCode, SrokCode, Commune, KhumCode, XuM, XKHUM, YKHUM, Mods"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"F"& _ 
                "ROM            tblCommunes"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (SrokCode = @SrokCode)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY IDProv"& _ 
                "Code"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SrokCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SrokCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        IDProvCode, SrokCode, Commune, KhumCode, XuM, XKHUM, YKHUM, Mods"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"F"& _ 
                "ROM            tblCommunes"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE   SrokCode = @SrokCode"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY IDProvCode"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SrokCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SrokCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSCClientRegistration.tblCommunesDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSCClientRegistration.tblCommunesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSCClientRegistration.tblCommunesDataTable = New DSCClientRegistration.tblCommunesDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSCClientRegistration.tblCommunesDataTable, ByVal SrokCode As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (SrokCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SrokCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function getCommunce(ByVal SrokCode As Global.System.Nullable(Of Integer)) As DSCClientRegistration.tblCommunesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (SrokCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SrokCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSCClientRegistration.tblCommunesDataTable = New DSCClientRegistration.tblCommunesDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1(ByVal dataTable As DSCClientRegistration.tblCommunesDataTable, ByVal SrokCode As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (SrokCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SrokCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function getCommune(ByVal SrokCode As Global.System.Nullable(Of Integer)) As DSCClientRegistration.tblCommunesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (SrokCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SrokCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSCClientRegistration.tblCommunesDataTable = New DSCClientRegistration.tblCommunesDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSCClientRegistration.tblCommunesDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSCClientRegistration) As Integer
            Return Me.Adapter.Update(dataSet, "tblCommunes")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal IDProvCode As Global.System.Nullable(Of Integer), ByVal SrokCode As Global.System.Nullable(Of Integer), ByVal Commune As String, ByVal KhumCode As Global.System.Nullable(Of Integer), ByVal XuM As String, ByVal XKHUM As Global.System.Nullable(Of Double), ByVal YKHUM As Global.System.Nullable(Of Double), ByVal Mods As String) As Integer
            If (IDProvCode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(IDProvCode.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (SrokCode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SrokCode.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Commune Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Commune,String)
            End If
            If (KhumCode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(KhumCode.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (XuM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(XuM,String)
            End If
            If (XKHUM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(XKHUM.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (YKHUM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(YKHUM.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Mods Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Mods,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TblOccupationTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TblOccupation"
            tableMapping.ColumnMappings.Add("OccNo", "OccNo")
            tableMapping.ColumnMappings.Add("Occupation", "Occupation")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [TblOccupation] WHERE (([OccNo] = @Original_OccNo) AND ((@IsNull_Occu"& _ 
                "pation = 1 AND [Occupation] IS NULL) OR ([Occupation] = @Original_Occupation)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OccNo", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OccNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Occupation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Occupation", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Occupation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Occupation", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [TblOccupation] ([Occupation]) VALUES (@Occupation);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT OccNo, O"& _ 
                "ccupation FROM TblOccupation WHERE (OccNo = SCOPE_IDENTITY()) ORDER BY Occupatio"& _ 
                "n"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Occupation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Occupation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [TblOccupation] SET [Occupation] = @Occupation WHERE (([OccNo] = @Original"& _ 
                "_OccNo) AND ((@IsNull_Occupation = 1 AND [Occupation] IS NULL) OR ([Occupation] "& _ 
                "= @Original_Occupation)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT OccNo, Occupation FROM TblOccupation WHERE (O"& _ 
                "ccNo = @OccNo) ORDER BY Occupation"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Occupation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Occupation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OccNo", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OccNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Occupation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Occupation", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Occupation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Occupation", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OccNo", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "OccNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        OccNo, Occupation"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            TblOccupation"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY Occupati"& _ 
                "on"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSCClientRegistration.TblOccupationDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSCClientRegistration.TblOccupationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSCClientRegistration.TblOccupationDataTable = New DSCClientRegistration.TblOccupationDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSCClientRegistration.TblOccupationDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSCClientRegistration) As Integer
            Return Me.Adapter.Update(dataSet, "TblOccupation")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_OccNo As Decimal, ByVal Original_Occupation As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_OccNo,Decimal)
            If (Original_Occupation Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Occupation,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Occupation As String) As Integer
            If (Occupation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Occupation,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Occupation As String, ByVal Original_OccNo As Decimal, ByVal Original_Occupation As String, ByVal OccNo As Decimal) As Integer
            If (Occupation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Occupation,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Original_OccNo,Decimal)
            If (Original_Occupation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_Occupation,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(OccNo,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Occupation As String, ByVal Original_OccNo As Decimal, ByVal Original_Occupation As String) As Integer
            Return Me.Update(Occupation, Original_OccNo, Original_Occupation, Original_OccNo)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblEducationTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblEducation"
            tableMapping.ColumnMappings.Add("eduNo", "eduNo")
            tableMapping.ColumnMappings.Add("Education", "Education")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblEducation] WHERE (([eduNo] = @Original_eduNo) AND ((@IsNull_Educa"& _ 
                "tion = 1 AND [Education] IS NULL) OR ([Education] = @Original_Education)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_eduNo", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "eduNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Education", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Education", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Education", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Education", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblEducation] ([Education]) VALUES (@Education);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT eduNo, Educ"& _ 
                "ation FROM tblEducation WHERE (eduNo = SCOPE_IDENTITY()) ORDER BY Education"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Education", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Education", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblEducation] SET [Education] = @Education WHERE (([eduNo] = @Original_ed"& _ 
                "uNo) AND ((@IsNull_Education = 1 AND [Education] IS NULL) OR ([Education] = @Ori"& _ 
                "ginal_Education)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT eduNo, Education FROM tblEducation WHERE (eduNo = @e"& _ 
                "duNo) ORDER BY Education"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Education", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Education", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_eduNo", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "eduNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Education", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Education", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Education", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Education", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@eduNo", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "eduNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        eduNo, Education"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblEducation"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY Education"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSCClientRegistration.tblEducationDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSCClientRegistration.tblEducationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSCClientRegistration.tblEducationDataTable = New DSCClientRegistration.tblEducationDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSCClientRegistration.tblEducationDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSCClientRegistration) As Integer
            Return Me.Adapter.Update(dataSet, "tblEducation")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_eduNo As Decimal, ByVal Original_Education As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_eduNo,Decimal)
            If (Original_Education Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Education,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Education As String) As Integer
            If (Education Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Education,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Education As String, ByVal Original_eduNo As Decimal, ByVal Original_Education As String, ByVal eduNo As Decimal) As Integer
            If (Education Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Education,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Original_eduNo,Decimal)
            If (Original_Education Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_Education,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(eduNo,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Education As String, ByVal Original_eduNo As Decimal, ByVal Original_Education As String) As Integer
            Return Me.Update(Education, Original_eduNo, Original_Education, Original_eduNo)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblVillagesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblVillages"
            tableMapping.ColumnMappings.Add("IDProvCode", "IDProvCode")
            tableMapping.ColumnMappings.Add("SrokCode", "SrokCode")
            tableMapping.ColumnMappings.Add("KhumCode", "KhumCode")
            tableMapping.ColumnMappings.Add("PhumCode", "PhumCode")
            tableMapping.ColumnMappings.Add("VILLAGE", "VILLAGE")
            tableMapping.ColumnMappings.Add("PUmi", "PUmi")
            tableMapping.ColumnMappings.Add("XPHUM", "XPHUM")
            tableMapping.ColumnMappings.Add("YPHUM", "YPHUM")
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("Mods", "Mods")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblVillages] ([IDProvCode], [SrokCode], [KhumCode], [PhumCode], [VIL"& _ 
                "LAGE], [PUmi], [XPHUM], [YPHUM], [ID], [Mods]) VALUES (@IDProvCode, @SrokCode, @"& _ 
                "KhumCode, @PhumCode, @VILLAGE, @PUmi, @XPHUM, @YPHUM, @ID, @Mods)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDProvCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDProvCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SrokCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SrokCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KhumCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KhumCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PhumCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PhumCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VILLAGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VILLAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PUmi", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PUmi", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XPHUM", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XPHUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YPHUM", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YPHUM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mods", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Mods", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        IDProvCode, SrokCode, KhumCode, PhumCode, VILLAGE, PUmi, XPHUM, YPH"& _ 
                "UM, ID, Mods"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblVillages"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY VILLAGE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        IDProvCode, SrokCode, KhumCode, PhumCode, VILLAGE, PUmi, XPHUM, YPH"& _ 
                "UM, ID, Mods"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblVillages"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  KhumCode = @KhumCode"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY"& _ 
                " VILLAGE"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KhumCode", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "KhumCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSCClientRegistration.tblVillagesDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSCClientRegistration.tblVillagesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSCClientRegistration.tblVillagesDataTable = New DSCClientRegistration.tblVillagesDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSCClientRegistration.tblVillagesDataTable, ByVal KhumCode As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (KhumCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(KhumCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function getVillage(ByVal KhumCode As Global.System.Nullable(Of Integer)) As DSCClientRegistration.tblVillagesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (KhumCode.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(KhumCode.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSCClientRegistration.tblVillagesDataTable = New DSCClientRegistration.tblVillagesDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSCClientRegistration.tblVillagesDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSCClientRegistration) As Integer
            Return Me.Adapter.Update(dataSet, "tblVillages")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal IDProvCode As Global.System.Nullable(Of Integer), ByVal SrokCode As Global.System.Nullable(Of Integer), ByVal KhumCode As Global.System.Nullable(Of Integer), ByVal PhumCode As Global.System.Nullable(Of Integer), ByVal VILLAGE As String, ByVal PUmi As String, ByVal XPHUM As Global.System.Nullable(Of Double), ByVal YPHUM As Global.System.Nullable(Of Double), ByVal ID As Integer, ByVal Mods As String) As Integer
            If (IDProvCode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(IDProvCode.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (SrokCode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SrokCode.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (KhumCode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(KhumCode.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PhumCode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PhumCode.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (VILLAGE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(VILLAGE,String)
            End If
            If (PUmi Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PUmi,String)
            End If
            If (XPHUM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(XPHUM.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (YPHUM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(YPHUM.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(ID,Integer)
            If (Mods Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Mods,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CCAMH_CLIENTS111TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CCAMH_CLIENTS111"
            tableMapping.ColumnMappings.Add("CLIENT_ID", "CLIENT_ID")
            tableMapping.ColumnMappings.Add("CLIENT_NO", "CLIENT_NO")
            tableMapping.ColumnMappings.Add("CLIENT_NAME", "CLIENT_NAME")
            tableMapping.ColumnMappings.Add("CLIENT_SEX", "CLIENT_SEX")
            tableMapping.ColumnMappings.Add("CLIENT_AGE", "CLIENT_AGE")
            tableMapping.ColumnMappings.Add("CLIENT_DOB", "CLIENT_DOB")
            tableMapping.ColumnMappings.Add("CLIENT_BROUGHT_BY", "CLIENT_BROUGHT_BY")
            tableMapping.ColumnMappings.Add("CLIENT_REFERED_BY", "CLIENT_REFERED_BY")
            tableMapping.ColumnMappings.Add("CLIENT_SIBLING", "CLIENT_SIBLING")
            tableMapping.ColumnMappings.Add("CLIENT_BROTHER", "CLIENT_BROTHER")
            tableMapping.ColumnMappings.Add("CLIENT_SISTER", "CLIENT_SISTER")
            tableMapping.ColumnMappings.Add("CLIENT_DATE_SEEN", "CLIENT_DATE_SEEN")
            tableMapping.ColumnMappings.Add("CLIENT_SCHOOL_GOING", "CLIENT_SCHOOL_GOING")
            tableMapping.ColumnMappings.Add("CLIENT_LEVE_OF_EDU", "CLIENT_LEVE_OF_EDU")
            tableMapping.ColumnMappings.Add("CLIENT_FATHER", "CLIENT_FATHER")
            tableMapping.ColumnMappings.Add("CLIENT_FATHER_EDU", "CLIENT_FATHER_EDU")
            tableMapping.ColumnMappings.Add("CLIENT_FATHER_POS", "CLIENT_FATHER_POS")
            tableMapping.ColumnMappings.Add("CLIENT_MOTHER", "CLIENT_MOTHER")
            tableMapping.ColumnMappings.Add("CLIENT_MOTHER_EDU", "CLIENT_MOTHER_EDU")
            tableMapping.ColumnMappings.Add("CLIENT_MOTHER_POS", "CLIENT_MOTHER_POS")
            tableMapping.ColumnMappings.Add("CLIENT_HOUSE_NO", "CLIENT_HOUSE_NO")
            tableMapping.ColumnMappings.Add("CLIENT_STREET_NO", "CLIENT_STREET_NO")
            tableMapping.ColumnMappings.Add("CLIENT_VILLAGE", "CLIENT_VILLAGE")
            tableMapping.ColumnMappings.Add("CLIENT_COMMUNE", "CLIENT_COMMUNE")
            tableMapping.ColumnMappings.Add("CLIENT_DISTICT", "CLIENT_DISTICT")
            tableMapping.ColumnMappings.Add("CLIENT_CITY", "CLIENT_CITY")
            tableMapping.ColumnMappings.Add("CLIENT_PHONE", "CLIENT_PHONE")
            tableMapping.ColumnMappings.Add("CLIENT_CONSULTATION_PURPOSE", "CLIENT_CONSULTATION_PURPOSE")
            tableMapping.ColumnMappings.Add("CLIENT_IMP_NEUROPSY", "CLIENT_IMP_NEUROPSY")
            tableMapping.ColumnMappings.Add("CLIENT_IMP_DEV", "CLIENT_IMP_DEV")
            tableMapping.ColumnMappings.Add("CLIENT_PSYCHO", "CLIENT_PSYCHO")
            tableMapping.ColumnMappings.Add("CLIENT_SUBTYPE", "CLIENT_SUBTYPE")
            tableMapping.ColumnMappings.Add("CLIENT_REASON_FOR_NOT_REG", "CLIENT_REASON_FOR_NOT_REG")
            tableMapping.ColumnMappings.Add("CLIENT_ADV_REG_DATE", "CLIENT_ADV_REG_DATE")
            tableMapping.ColumnMappings.Add("CLIENT_ADV_REFERENCE", "CLIENT_ADV_REFERENCE")
            tableMapping.ColumnMappings.Add("YEARS", "YEARS")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CCAMH_CLIENTS] WHERE (([CLIENT_ID] = @Original_CLIENT_ID) AND ([CLIE"& _ 
                "NT_NO] = @Original_CLIENT_NO) AND ((@IsNull_CLIENT_NAME = 1 AND [CLIENT_NAME] IS"& _ 
                " NULL) OR ([CLIENT_NAME] = @Original_CLIENT_NAME)) AND ((@IsNull_CLIENT_SEX = 1 "& _ 
                "AND [CLIENT_SEX] IS NULL) OR ([CLIENT_SEX] = @Original_CLIENT_SEX)) AND ((@IsNul"& _ 
                "l_CLIENT_AGE = 1 AND [CLIENT_AGE] IS NULL) OR ([CLIENT_AGE] = @Original_CLIENT_A"& _ 
                "GE)) AND ((@IsNull_CLIENT_DOB = 1 AND [CLIENT_DOB] IS NULL) OR ([CLIENT_DOB] = @"& _ 
                "Original_CLIENT_DOB)) AND ((@IsNull_CLIENT_BROUGHT_BY = 1 AND [CLIENT_BROUGHT_BY"& _ 
                "] IS NULL) OR ([CLIENT_BROUGHT_BY] = @Original_CLIENT_BROUGHT_BY)) AND ((@IsNull"& _ 
                "_CLIENT_REFERED_BY = 1 AND [CLIENT_REFERED_BY] IS NULL) OR ([CLIENT_REFERED_BY] "& _ 
                "= @Original_CLIENT_REFERED_BY)) AND ((@IsNull_CLIENT_SIBLING = 1 AND [CLIENT_SIB"& _ 
                "LING] IS NULL) OR ([CLIENT_SIBLING] = @Original_CLIENT_SIBLING)) AND ((@IsNull_C"& _ 
                "LIENT_BROTHER = 1 AND [CLIENT_BROTHER] IS NULL) OR ([CLIENT_BROTHER] = @Original"& _ 
                "_CLIENT_BROTHER)) AND ((@IsNull_CLIENT_SISTER = 1 AND [CLIENT_SISTER] IS NULL) O"& _ 
                "R ([CLIENT_SISTER] = @Original_CLIENT_SISTER)) AND ((@IsNull_CLIENT_DATE_SEEN = "& _ 
                "1 AND [CLIENT_DATE_SEEN] IS NULL) OR ([CLIENT_DATE_SEEN] = @Original_CLIENT_DATE"& _ 
                "_SEEN)) AND ((@IsNull_CLIENT_SCHOOL_GOING = 1 AND [CLIENT_SCHOOL_GOING] IS NULL)"& _ 
                " OR ([CLIENT_SCHOOL_GOING] = @Original_CLIENT_SCHOOL_GOING)) AND ((@IsNull_CLIEN"& _ 
                "T_LEVE_OF_EDU = 1 AND [CLIENT_LEVE_OF_EDU] IS NULL) OR ([CLIENT_LEVE_OF_EDU] = @"& _ 
                "Original_CLIENT_LEVE_OF_EDU)) AND ((@IsNull_CLIENT_FATHER = 1 AND [CLIENT_FATHER"& _ 
                "] IS NULL) OR ([CLIENT_FATHER] = @Original_CLIENT_FATHER)) AND ((@IsNull_CLIENT_"& _ 
                "FATHER_EDU = 1 AND [CLIENT_FATHER_EDU] IS NULL) OR ([CLIENT_FATHER_EDU] = @Origi"& _ 
                "nal_CLIENT_FATHER_EDU)) AND ((@IsNull_CLIENT_FATHER_POS = 1 AND [CLIENT_FATHER_P"& _ 
                "OS] IS NULL) OR ([CLIENT_FATHER_POS] = @Original_CLIENT_FATHER_POS)) AND ((@IsNu"& _ 
                "ll_CLIENT_MOTHER = 1 AND [CLIENT_MOTHER] IS NULL) OR ([CLIENT_MOTHER] = @Origina"& _ 
                "l_CLIENT_MOTHER)) AND ((@IsNull_CLIENT_MOTHER_EDU = 1 AND [CLIENT_MOTHER_EDU] IS"& _ 
                " NULL) OR ([CLIENT_MOTHER_EDU] = @Original_CLIENT_MOTHER_EDU)) AND ((@IsNull_CLI"& _ 
                "ENT_MOTHER_POS = 1 AND [CLIENT_MOTHER_POS] IS NULL) OR ([CLIENT_MOTHER_POS] = @O"& _ 
                "riginal_CLIENT_MOTHER_POS)) AND ((@IsNull_CLIENT_HOUSE_NO = 1 AND [CLIENT_HOUSE_"& _ 
                "NO] IS NULL) OR ([CLIENT_HOUSE_NO] = @Original_CLIENT_HOUSE_NO)) AND ((@IsNull_C"& _ 
                "LIENT_STREET_NO = 1 AND [CLIENT_STREET_NO] IS NULL) OR ([CLIENT_STREET_NO] = @Or"& _ 
                "iginal_CLIENT_STREET_NO)) AND ((@IsNull_CLIENT_VILLAGE = 1 AND [CLIENT_VILLAGE] "& _ 
                "IS NULL) OR ([CLIENT_VILLAGE] = @Original_CLIENT_VILLAGE)) AND ((@IsNull_CLIENT_"& _ 
                "COMMUNE = 1 AND [CLIENT_COMMUNE] IS NULL) OR ([CLIENT_COMMUNE] = @Original_CLIEN"& _ 
                "T_COMMUNE)) AND ((@IsNull_CLIENT_DISTICT = 1 AND [CLIENT_DISTICT] IS NULL) OR (["& _ 
                "CLIENT_DISTICT] = @Original_CLIENT_DISTICT)) AND ((@IsNull_CLIENT_CITY = 1 AND ["& _ 
                "CLIENT_CITY] IS NULL) OR ([CLIENT_CITY] = @Original_CLIENT_CITY)) AND ((@IsNull_"& _ 
                "CLIENT_PHONE = 1 AND [CLIENT_PHONE] IS NULL) OR ([CLIENT_PHONE] = @Original_CLIE"& _ 
                "NT_PHONE)) AND ((@IsNull_CLIENT_CONSULTATION_PURPOSE = 1 AND [CLIENT_CONSULTATIO"& _ 
                "N_PURPOSE] IS NULL) OR ([CLIENT_CONSULTATION_PURPOSE] = @Original_CLIENT_CONSULT"& _ 
                "ATION_PURPOSE)) AND ((@IsNull_CLIENT_IMP_NEUROPSY = 1 AND [CLIENT_IMP_NEUROPSY] "& _ 
                "IS NULL) OR ([CLIENT_IMP_NEUROPSY] = @Original_CLIENT_IMP_NEUROPSY)) AND ((@IsNu"& _ 
                "ll_CLIENT_IMP_DEV = 1 AND [CLIENT_IMP_DEV] IS NULL) OR ([CLIENT_IMP_DEV] = @Orig"& _ 
                "inal_CLIENT_IMP_DEV)) AND ((@IsNull_CLIENT_PSYCHO = 1 AND [CLIENT_PSYCHO] IS NUL"& _ 
                "L) OR ([CLIENT_PSYCHO] = @Original_CLIENT_PSYCHO)) AND ((@IsNull_CLIENT_SUBTYPE "& _ 
                "= 1 AND [CLIENT_SUBTYPE] IS NULL) OR ([CLIENT_SUBTYPE] = @Original_CLIENT_SUBTYP"& _ 
                "E)) AND ((@IsNull_CLIENT_REASON_FOR_NOT_REG = 1 AND [CLIENT_REASON_FOR_NOT_REG] "& _ 
                "IS NULL) OR ([CLIENT_REASON_FOR_NOT_REG] = @Original_CLIENT_REASON_FOR_NOT_REG))"& _ 
                " AND ((@IsNull_CLIENT_ADV_REG_DATE = 1 AND [CLIENT_ADV_REG_DATE] IS NULL) OR ([C"& _ 
                "LIENT_ADV_REG_DATE] = @Original_CLIENT_ADV_REG_DATE)) AND ((@IsNull_CLIENT_ADV_R"& _ 
                "EFERENCE = 1 AND [CLIENT_ADV_REFERENCE] IS NULL) OR ([CLIENT_ADV_REFERENCE] = @O"& _ 
                "riginal_CLIENT_ADV_REFERENCE)) AND ((@IsNull_YEARS = 1 AND [YEARS] IS NULL) OR ("& _ 
                "[YEARS] = @Original_YEARS)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_AGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_AGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_AGE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_AGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_DOB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DOB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_DOB", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DOB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_BROUGHT_BY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_BROUGHT_BY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_BROUGHT_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_BROUGHT_BY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_REFERED_BY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFERED_BY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_REFERED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFERED_BY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SIBLING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SIBLING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SIBLING", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SIBLING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_BROTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_BROTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_BROTHER", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_BROTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SISTER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SISTER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SISTER", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SISTER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_DATE_SEEN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_SEEN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_DATE_SEEN", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_SEEN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SCHOOL_GOING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SCHOOL_GOING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SCHOOL_GOING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SCHOOL_GOING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_LEVE_OF_EDU", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_LEVE_OF_EDU", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_LEVE_OF_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_LEVE_OF_EDU", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_FATHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_FATHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_FATHER_EDU", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_EDU", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_FATHER_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_EDU", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_FATHER_POS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_POS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_FATHER_POS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_POS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_MOTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_MOTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_MOTHER_EDU", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_EDU", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_MOTHER_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_EDU", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_MOTHER_POS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_POS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_MOTHER_POS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_POS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_HOUSE_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_HOUSE_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_HOUSE_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_HOUSE_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_STREET_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_STREET_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_STREET_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_STREET_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_VILLAGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_VILLAGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_VILLAGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_VILLAGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_COMMUNE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMMUNE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_COMMUNE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMMUNE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_DISTICT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DISTICT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_DISTICT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DISTICT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CITY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CITY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CITY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_PHONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PHONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_PHONE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PHONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CONSULTATION_PURPOSE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CONSULTATION_PURPOSE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CONSULTATION_PURPOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CONSULTATION_PURPOSE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_IMP_NEUROPSY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_NEUROPSY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_IMP_NEUROPSY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_NEUROPSY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_IMP_DEV", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_DEV", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_IMP_DEV", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_DEV", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_PSYCHO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_PSYCHO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SUBTYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SUBTYPE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SUBTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SUBTYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_REASON_FOR_NOT_REG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REASON_FOR_NOT_REG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_REASON_FOR_NOT_REG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REASON_FOR_NOT_REG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_ADV_REG_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REG_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_ADV_REG_DATE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REG_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_ADV_REFERENCE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REFERENCE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_ADV_REFERENCE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REFERENCE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_YEARS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YEARS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_YEARS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "YEARS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CCAMH_CLIENTS] ([CLIENT_NO], [CLIENT_NAME], [CLIENT_SEX], [CLIENT_AG"& _ 
                "E], [CLIENT_DOB], [CLIENT_BROUGHT_BY], [CLIENT_REFERED_BY], [CLIENT_SIBLING], [C"& _ 
                "LIENT_BROTHER], [CLIENT_SISTER], [CLIENT_DATE_SEEN], [CLIENT_SCHOOL_GOING], [CLI"& _ 
                "ENT_LEVE_OF_EDU], [CLIENT_FATHER], [CLIENT_FATHER_EDU], [CLIENT_FATHER_POS], [CL"& _ 
                "IENT_MOTHER], [CLIENT_MOTHER_EDU], [CLIENT_MOTHER_POS], [CLIENT_HOUSE_NO], [CLIE"& _ 
                "NT_STREET_NO], [CLIENT_VILLAGE], [CLIENT_COMMUNE], [CLIENT_DISTICT], [CLIENT_CIT"& _ 
                "Y], [CLIENT_PHONE], [CLIENT_CONSULTATION_PURPOSE], [CLIENT_IMP_NEUROPSY], [CLIEN"& _ 
                "T_IMP_DEV], [CLIENT_PSYCHO], [CLIENT_SUBTYPE], [CLIENT_REASON_FOR_NOT_REG], [CLI"& _ 
                "ENT_ADV_REG_DATE], [CLIENT_ADV_REFERENCE], [YEARS]) VALUES (@CLIENT_NO, @CLIENT_"& _ 
                "NAME, @CLIENT_SEX, @CLIENT_AGE, @CLIENT_DOB, @CLIENT_BROUGHT_BY, @CLIENT_REFERED"& _ 
                "_BY, @CLIENT_SIBLING, @CLIENT_BROTHER, @CLIENT_SISTER, @CLIENT_DATE_SEEN, @CLIEN"& _ 
                "T_SCHOOL_GOING, @CLIENT_LEVE_OF_EDU, @CLIENT_FATHER, @CLIENT_FATHER_EDU, @CLIENT"& _ 
                "_FATHER_POS, @CLIENT_MOTHER, @CLIENT_MOTHER_EDU, @CLIENT_MOTHER_POS, @CLIENT_HOU"& _ 
                "SE_NO, @CLIENT_STREET_NO, @CLIENT_VILLAGE, @CLIENT_COMMUNE, @CLIENT_DISTICT, @CL"& _ 
                "IENT_CITY, @CLIENT_PHONE, @CLIENT_CONSULTATION_PURPOSE, @CLIENT_IMP_NEUROPSY, @C"& _ 
                "LIENT_IMP_DEV, @CLIENT_PSYCHO, @CLIENT_SUBTYPE, @CLIENT_REASON_FOR_NOT_REG, @CLI"& _ 
                "ENT_ADV_REG_DATE, @CLIENT_ADV_REFERENCE, @YEARS);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CLIENT_ID, CLIENT_NO, "& _ 
                "CLIENT_NAME, CLIENT_SEX, CLIENT_AGE, CLIENT_DOB, CLIENT_BROUGHT_BY, CLIENT_REFER"& _ 
                "ED_BY, CLIENT_SIBLING, CLIENT_BROTHER, CLIENT_SISTER, CLIENT_DATE_SEEN, CLIENT_S"& _ 
                "CHOOL_GOING, CLIENT_LEVE_OF_EDU, CLIENT_FATHER, CLIENT_FATHER_EDU, CLIENT_FATHER"& _ 
                "_POS, CLIENT_MOTHER, CLIENT_MOTHER_EDU, CLIENT_MOTHER_POS, CLIENT_HOUSE_NO, CLIE"& _ 
                "NT_STREET_NO, CLIENT_VILLAGE, CLIENT_COMMUNE, CLIENT_DISTICT, CLIENT_CITY, CLIEN"& _ 
                "T_PHONE, CLIENT_CONSULTATION_PURPOSE, CLIENT_IMP_NEUROPSY, CLIENT_IMP_DEV, CLIEN"& _ 
                "T_PSYCHO, CLIENT_SUBTYPE, CLIENT_REASON_FOR_NOT_REG, CLIENT_ADV_REG_DATE, CLIENT"& _ 
                "_ADV_REFERENCE, YEARS FROM CCAMH_CLIENTS WHERE (CLIENT_NO = @CLIENT_NO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_AGE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DOB", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DOB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_BROUGHT_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_BROUGHT_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REFERED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFERED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SIBLING", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SIBLING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_BROTHER", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_BROTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SISTER", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SISTER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DATE_SEEN", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_SEEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SCHOOL_GOING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SCHOOL_GOING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_LEVE_OF_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_LEVE_OF_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER_POS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_POS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER_POS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_POS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_HOUSE_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_HOUSE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_STREET_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_STREET_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_VILLAGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_VILLAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_COMMUNE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMMUNE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DISTICT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DISTICT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CITY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PHONE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PHONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CONSULTATION_PURPOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CONSULTATION_PURPOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_IMP_NEUROPSY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_NEUROPSY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_IMP_DEV", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_DEV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PSYCHO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SUBTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SUBTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REASON_FOR_NOT_REG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REASON_FOR_NOT_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADV_REG_DATE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REG_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADV_REFERENCE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REFERENCE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YEARS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "YEARS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CCAMH_CLIENTS] SET [CLIENT_NO] = @CLIENT_NO, [CLIENT_NAME] = @CLIENT_NAME"& _ 
                ", [CLIENT_SEX] = @CLIENT_SEX, [CLIENT_AGE] = @CLIENT_AGE, [CLIENT_DOB] = @CLIENT"& _ 
                "_DOB, [CLIENT_BROUGHT_BY] = @CLIENT_BROUGHT_BY, [CLIENT_REFERED_BY] = @CLIENT_RE"& _ 
                "FERED_BY, [CLIENT_SIBLING] = @CLIENT_SIBLING, [CLIENT_BROTHER] = @CLIENT_BROTHER"& _ 
                ", [CLIENT_SISTER] = @CLIENT_SISTER, [CLIENT_DATE_SEEN] = @CLIENT_DATE_SEEN, [CLI"& _ 
                "ENT_SCHOOL_GOING] = @CLIENT_SCHOOL_GOING, [CLIENT_LEVE_OF_EDU] = @CLIENT_LEVE_OF"& _ 
                "_EDU, [CLIENT_FATHER] = @CLIENT_FATHER, [CLIENT_FATHER_EDU] = @CLIENT_FATHER_EDU"& _ 
                ", [CLIENT_FATHER_POS] = @CLIENT_FATHER_POS, [CLIENT_MOTHER] = @CLIENT_MOTHER, [C"& _ 
                "LIENT_MOTHER_EDU] = @CLIENT_MOTHER_EDU, [CLIENT_MOTHER_POS] = @CLIENT_MOTHER_POS"& _ 
                ", [CLIENT_HOUSE_NO] = @CLIENT_HOUSE_NO, [CLIENT_STREET_NO] = @CLIENT_STREET_NO, "& _ 
                "[CLIENT_VILLAGE] = @CLIENT_VILLAGE, [CLIENT_COMMUNE] = @CLIENT_COMMUNE, [CLIENT_"& _ 
                "DISTICT] = @CLIENT_DISTICT, [CLIENT_CITY] = @CLIENT_CITY, [CLIENT_PHONE] = @CLIE"& _ 
                "NT_PHONE, [CLIENT_CONSULTATION_PURPOSE] = @CLIENT_CONSULTATION_PURPOSE, [CLIENT_"& _ 
                "IMP_NEUROPSY] = @CLIENT_IMP_NEUROPSY, [CLIENT_IMP_DEV] = @CLIENT_IMP_DEV, [CLIEN"& _ 
                "T_PSYCHO] = @CLIENT_PSYCHO, [CLIENT_SUBTYPE] = @CLIENT_SUBTYPE, [CLIENT_REASON_F"& _ 
                "OR_NOT_REG] = @CLIENT_REASON_FOR_NOT_REG, [CLIENT_ADV_REG_DATE] = @CLIENT_ADV_RE"& _ 
                "G_DATE, [CLIENT_ADV_REFERENCE] = @CLIENT_ADV_REFERENCE, [YEARS] = @YEARS WHERE ("& _ 
                "([CLIENT_ID] = @Original_CLIENT_ID) AND ([CLIENT_NO] = @Original_CLIENT_NO) AND "& _ 
                "((@IsNull_CLIENT_NAME = 1 AND [CLIENT_NAME] IS NULL) OR ([CLIENT_NAME] = @Origin"& _ 
                "al_CLIENT_NAME)) AND ((@IsNull_CLIENT_SEX = 1 AND [CLIENT_SEX] IS NULL) OR ([CLI"& _ 
                "ENT_SEX] = @Original_CLIENT_SEX)) AND ((@IsNull_CLIENT_AGE = 1 AND [CLIENT_AGE] "& _ 
                "IS NULL) OR ([CLIENT_AGE] = @Original_CLIENT_AGE)) AND ((@IsNull_CLIENT_DOB = 1 "& _ 
                "AND [CLIENT_DOB] IS NULL) OR ([CLIENT_DOB] = @Original_CLIENT_DOB)) AND ((@IsNul"& _ 
                "l_CLIENT_BROUGHT_BY = 1 AND [CLIENT_BROUGHT_BY] IS NULL) OR ([CLIENT_BROUGHT_BY]"& _ 
                " = @Original_CLIENT_BROUGHT_BY)) AND ((@IsNull_CLIENT_REFERED_BY = 1 AND [CLIENT"& _ 
                "_REFERED_BY] IS NULL) OR ([CLIENT_REFERED_BY] = @Original_CLIENT_REFERED_BY)) AN"& _ 
                "D ((@IsNull_CLIENT_SIBLING = 1 AND [CLIENT_SIBLING] IS NULL) OR ([CLIENT_SIBLING"& _ 
                "] = @Original_CLIENT_SIBLING)) AND ((@IsNull_CLIENT_BROTHER = 1 AND [CLIENT_BROT"& _ 
                "HER] IS NULL) OR ([CLIENT_BROTHER] = @Original_CLIENT_BROTHER)) AND ((@IsNull_CL"& _ 
                "IENT_SISTER = 1 AND [CLIENT_SISTER] IS NULL) OR ([CLIENT_SISTER] = @Original_CLI"& _ 
                "ENT_SISTER)) AND ((@IsNull_CLIENT_DATE_SEEN = 1 AND [CLIENT_DATE_SEEN] IS NULL) "& _ 
                "OR ([CLIENT_DATE_SEEN] = @Original_CLIENT_DATE_SEEN)) AND ((@IsNull_CLIENT_SCHOO"& _ 
                "L_GOING = 1 AND [CLIENT_SCHOOL_GOING] IS NULL) OR ([CLIENT_SCHOOL_GOING] = @Orig"& _ 
                "inal_CLIENT_SCHOOL_GOING)) AND ((@IsNull_CLIENT_LEVE_OF_EDU = 1 AND [CLIENT_LEVE"& _ 
                "_OF_EDU] IS NULL) OR ([CLIENT_LEVE_OF_EDU] = @Original_CLIENT_LEVE_OF_EDU)) AND "& _ 
                "((@IsNull_CLIENT_FATHER = 1 AND [CLIENT_FATHER] IS NULL) OR ([CLIENT_FATHER] = @"& _ 
                "Original_CLIENT_FATHER)) AND ((@IsNull_CLIENT_FATHER_EDU = 1 AND [CLIENT_FATHER_"& _ 
                "EDU] IS NULL) OR ([CLIENT_FATHER_EDU] = @Original_CLIENT_FATHER_EDU)) AND ((@IsN"& _ 
                "ull_CLIENT_FATHER_POS = 1 AND [CLIENT_FATHER_POS] IS NULL) OR ([CLIENT_FATHER_PO"& _ 
                "S] = @Original_CLIENT_FATHER_POS)) AND ((@IsNull_CLIENT_MOTHER = 1 AND [CLIENT_M"& _ 
                "OTHER] IS NULL) OR ([CLIENT_MOTHER] = @Original_CLIENT_MOTHER)) AND ((@IsNull_CL"& _ 
                "IENT_MOTHER_EDU = 1 AND [CLIENT_MOTHER_EDU] IS NULL) OR ([CLIENT_MOTHER_EDU] = @"& _ 
                "Original_CLIENT_MOTHER_EDU)) AND ((@IsNull_CLIENT_MOTHER_POS = 1 AND [CLIENT_MOT"& _ 
                "HER_POS] IS NULL) OR ([CLIENT_MOTHER_POS] = @Original_CLIENT_MOTHER_POS)) AND (("& _ 
                "@IsNull_CLIENT_HOUSE_NO = 1 AND [CLIENT_HOUSE_NO] IS NULL) OR ([CLIENT_HOUSE_NO]"& _ 
                " = @Original_CLIENT_HOUSE_NO)) AND ((@IsNull_CLIENT_STREET_NO = 1 AND [CLIENT_ST"& _ 
                "REET_NO] IS NULL) OR ([CLIENT_STREET_NO] = @Original_CLIENT_STREET_NO)) AND ((@I"& _ 
                "sNull_CLIENT_VILLAGE = 1 AND [CLIENT_VILLAGE] IS NULL) OR ([CLIENT_VILLAGE] = @O"& _ 
                "riginal_CLIENT_VILLAGE)) AND ((@IsNull_CLIENT_COMMUNE = 1 AND [CLIENT_COMMUNE] I"& _ 
                "S NULL) OR ([CLIENT_COMMUNE] = @Original_CLIENT_COMMUNE)) AND ((@IsNull_CLIENT_D"& _ 
                "ISTICT = 1 AND [CLIENT_DISTICT] IS NULL) OR ([CLIENT_DISTICT] = @Original_CLIENT"& _ 
                "_DISTICT)) AND ((@IsNull_CLIENT_CITY = 1 AND [CLIENT_CITY] IS NULL) OR ([CLIENT_"& _ 
                "CITY] = @Original_CLIENT_CITY)) AND ((@IsNull_CLIENT_PHONE = 1 AND [CLIENT_PHONE"& _ 
                "] IS NULL) OR ([CLIENT_PHONE] = @Original_CLIENT_PHONE)) AND ((@IsNull_CLIENT_CO"& _ 
                "NSULTATION_PURPOSE = 1 AND [CLIENT_CONSULTATION_PURPOSE] IS NULL) OR ([CLIENT_CO"& _ 
                "NSULTATION_PURPOSE] = @Original_CLIENT_CONSULTATION_PURPOSE)) AND ((@IsNull_CLIE"& _ 
                "NT_IMP_NEUROPSY = 1 AND [CLIENT_IMP_NEUROPSY] IS NULL) OR ([CLIENT_IMP_NEUROPSY]"& _ 
                " = @Original_CLIENT_IMP_NEUROPSY)) AND ((@IsNull_CLIENT_IMP_DEV = 1 AND [CLIENT_"& _ 
                "IMP_DEV] IS NULL) OR ([CLIENT_IMP_DEV] = @Original_CLIENT_IMP_DEV)) AND ((@IsNul"& _ 
                "l_CLIENT_PSYCHO = 1 AND [CLIENT_PSYCHO] IS NULL) OR ([CLIENT_PSYCHO] = @Original"& _ 
                "_CLIENT_PSYCHO)) AND ((@IsNull_CLIENT_SUBTYPE = 1 AND [CLIENT_SUBTYPE] IS NULL) "& _ 
                "OR ([CLIENT_SUBTYPE] = @Original_CLIENT_SUBTYPE)) AND ((@IsNull_CLIENT_REASON_FO"& _ 
                "R_NOT_REG = 1 AND [CLIENT_REASON_FOR_NOT_REG] IS NULL) OR ([CLIENT_REASON_FOR_NO"& _ 
                "T_REG] = @Original_CLIENT_REASON_FOR_NOT_REG)) AND ((@IsNull_CLIENT_ADV_REG_DATE"& _ 
                " = 1 AND [CLIENT_ADV_REG_DATE] IS NULL) OR ([CLIENT_ADV_REG_DATE] = @Original_CL"& _ 
                "IENT_ADV_REG_DATE)) AND ((@IsNull_CLIENT_ADV_REFERENCE = 1 AND [CLIENT_ADV_REFER"& _ 
                "ENCE] IS NULL) OR ([CLIENT_ADV_REFERENCE] = @Original_CLIENT_ADV_REFERENCE)) AND"& _ 
                " ((@IsNull_YEARS = 1 AND [YEARS] IS NULL) OR ([YEARS] = @Original_YEARS)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SEL"& _ 
                "ECT CLIENT_ID, CLIENT_NO, CLIENT_NAME, CLIENT_SEX, CLIENT_AGE, CLIENT_DOB, CLIEN"& _ 
                "T_BROUGHT_BY, CLIENT_REFERED_BY, CLIENT_SIBLING, CLIENT_BROTHER, CLIENT_SISTER, "& _ 
                "CLIENT_DATE_SEEN, CLIENT_SCHOOL_GOING, CLIENT_LEVE_OF_EDU, CLIENT_FATHER, CLIENT"& _ 
                "_FATHER_EDU, CLIENT_FATHER_POS, CLIENT_MOTHER, CLIENT_MOTHER_EDU, CLIENT_MOTHER_"& _ 
                "POS, CLIENT_HOUSE_NO, CLIENT_STREET_NO, CLIENT_VILLAGE, CLIENT_COMMUNE, CLIENT_D"& _ 
                "ISTICT, CLIENT_CITY, CLIENT_PHONE, CLIENT_CONSULTATION_PURPOSE, CLIENT_IMP_NEURO"& _ 
                "PSY, CLIENT_IMP_DEV, CLIENT_PSYCHO, CLIENT_SUBTYPE, CLIENT_REASON_FOR_NOT_REG, C"& _ 
                "LIENT_ADV_REG_DATE, CLIENT_ADV_REFERENCE, YEARS FROM CCAMH_CLIENTS WHERE (CLIENT"& _ 
                "_NO = @CLIENT_NO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_AGE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DOB", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DOB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_BROUGHT_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_BROUGHT_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REFERED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFERED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SIBLING", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SIBLING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_BROTHER", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_BROTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SISTER", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SISTER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DATE_SEEN", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_SEEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SCHOOL_GOING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SCHOOL_GOING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_LEVE_OF_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_LEVE_OF_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER_POS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_POS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER_POS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_POS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_HOUSE_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_HOUSE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_STREET_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_STREET_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_VILLAGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_VILLAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_COMMUNE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMMUNE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DISTICT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DISTICT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CITY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PHONE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PHONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CONSULTATION_PURPOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CONSULTATION_PURPOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_IMP_NEUROPSY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_NEUROPSY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_IMP_DEV", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_DEV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PSYCHO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SUBTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SUBTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REASON_FOR_NOT_REG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REASON_FOR_NOT_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADV_REG_DATE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REG_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADV_REFERENCE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REFERENCE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YEARS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "YEARS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_AGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_AGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_AGE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_AGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_DOB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DOB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_DOB", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DOB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_BROUGHT_BY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_BROUGHT_BY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_BROUGHT_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_BROUGHT_BY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_REFERED_BY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFERED_BY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_REFERED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFERED_BY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SIBLING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SIBLING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SIBLING", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SIBLING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_BROTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_BROTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_BROTHER", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_BROTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SISTER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SISTER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SISTER", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SISTER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_DATE_SEEN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_SEEN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_DATE_SEEN", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_SEEN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SCHOOL_GOING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SCHOOL_GOING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SCHOOL_GOING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SCHOOL_GOING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_LEVE_OF_EDU", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_LEVE_OF_EDU", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_LEVE_OF_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_LEVE_OF_EDU", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_FATHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_FATHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_FATHER_EDU", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_EDU", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_FATHER_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_EDU", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_FATHER_POS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_POS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_FATHER_POS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_POS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_MOTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_MOTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_MOTHER_EDU", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_EDU", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_MOTHER_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_EDU", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_MOTHER_POS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_POS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_MOTHER_POS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_POS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_HOUSE_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_HOUSE_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_HOUSE_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_HOUSE_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_STREET_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_STREET_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_STREET_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_STREET_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_VILLAGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_VILLAGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_VILLAGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_VILLAGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_COMMUNE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMMUNE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_COMMUNE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMMUNE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_DISTICT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DISTICT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_DISTICT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DISTICT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CITY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CITY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CITY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_PHONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PHONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_PHONE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PHONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CONSULTATION_PURPOSE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CONSULTATION_PURPOSE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CONSULTATION_PURPOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CONSULTATION_PURPOSE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_IMP_NEUROPSY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_NEUROPSY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_IMP_NEUROPSY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_NEUROPSY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_IMP_DEV", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_DEV", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_IMP_DEV", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_DEV", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_PSYCHO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_PSYCHO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SUBTYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SUBTYPE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SUBTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SUBTYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_REASON_FOR_NOT_REG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REASON_FOR_NOT_REG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_REASON_FOR_NOT_REG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REASON_FOR_NOT_REG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_ADV_REG_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REG_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_ADV_REG_DATE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REG_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_ADV_REFERENCE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REFERENCE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_ADV_REFERENCE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REFERENCE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_YEARS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YEARS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_YEARS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "YEARS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(4) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CLIENT_ID, CLIENT_NO, CLIENT_NAME, CLIENT_SEX, CLIENT_AGE, CLIENT_D"& _ 
                "OB, CLIENT_BROUGHT_BY, CLIENT_REFERED_BY, CLIENT_SIBLING, CLIENT_BROTHER, CLIENT"& _ 
                "_SISTER, CLIENT_DATE_SEEN, CLIENT_SCHOOL_GOING, CLIENT_LEVE_OF_EDU, CLIENT_FATHE"& _ 
                "R, CLIENT_FATHER_EDU, CLIENT_FATHER_POS, CLIENT_MOTHER, CLIENT_MOTHER_EDU, CLIEN"& _ 
                "T_MOTHER_POS, CLIENT_HOUSE_NO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"CLIENT_STREET_NO, CLIENT_VILLAGE, CLIENT_COMMUN"& _ 
                "E, CLIENT_DISTICT, CLIENT_CITY, CLIENT_PHONE, CLIENT_CONSULTATION_PURPOSE, CLIEN"& _ 
                "T_IMP_NEUROPSY, CLIENT_IMP_DEV, CLIENT_PSYCHO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"CLIENT_SUBTYPE, CLIENT_REASON_F"& _ 
                "OR_NOT_REG, CLIENT_ADV_REG_DATE, CLIENT_ADV_REFERENCE, YEARS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM   CCAMH_CLIEN"& _ 
                "TS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        CLIENT_ID, CLIENT_NO, CLIENT_NAME, CLIENT_SEX, CLIENT_AGE, CLIENT_D"& _ 
                "OB, CLIENT_BROUGHT_BY, CLIENT_REFERED_BY, CLIENT_SIBLING, CLIENT_BROTHER, CLIENT"& _ 
                "_SISTER, CLIENT_DATE_SEEN, CLIENT_SCHOOL_GOING, CLIENT_LEVE_OF_EDU, CLIENT_FATHE"& _ 
                "R, CLIENT_FATHER_EDU, CLIENT_FATHER_POS, CLIENT_MOTHER, CLIENT_MOTHER_EDU, CLIEN"& _ 
                "T_MOTHER_POS, CLIENT_HOUSE_NO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"CLIENT_STREET_NO, CLIENT_VILLAGE, CLIENT_COMMUN"& _ 
                "E, CLIENT_DISTICT, CLIENT_CITY, CLIENT_PHONE, CLIENT_CONSULTATION_PURPOSE, CLIEN"& _ 
                "T_IMP_NEUROPSY, CLIENT_IMP_DEV, CLIENT_PSYCHO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"CLIENT_SUBTYPE, CLIENT_REASON_F"& _ 
                "OR_NOT_REG, CLIENT_ADV_REG_DATE, CLIENT_ADV_REFERENCE, YEARS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM   CCAMH_CLIEN"& _ 
                "TS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE CLIENT_NO = @CLIENT_NO"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "INSERT INTO [CCAMH_CLIENTS] ([CLIENT_NO], [CLIENT_NAME], [CLIENT_SEX], [CLIENT_AG"& _ 
                "E], [CLIENT_DOB], [CLIENT_BROUGHT_BY], [CLIENT_REFERED_BY], [CLIENT_SIBLING], [C"& _ 
                "LIENT_BROTHER], [CLIENT_SISTER], [CLIENT_DATE_SEEN], [CLIENT_SCHOOL_GOING], [CLI"& _ 
                "ENT_LEVE_OF_EDU], [CLIENT_FATHER], [CLIENT_FATHER_EDU], [CLIENT_FATHER_POS], [CL"& _ 
                "IENT_MOTHER], [CLIENT_MOTHER_EDU], [CLIENT_MOTHER_POS], [CLIENT_HOUSE_NO], [CLIE"& _ 
                "NT_STREET_NO], [CLIENT_VILLAGE], [CLIENT_COMMUNE], [CLIENT_DISTICT], [CLIENT_CIT"& _ 
                "Y], [CLIENT_PHONE], [CLIENT_CONSULTATION_PURPOSE], [CLIENT_IMP_NEUROPSY], [CLIEN"& _ 
                "T_IMP_DEV], [CLIENT_PSYCHO], [CLIENT_SUBTYPE], [CLIENT_REASON_FOR_NOT_REG], [CLI"& _ 
                "ENT_ADV_REG_DATE], [CLIENT_ADV_REFERENCE], [YEARS]) VALUES (@CLIENT_NO, @CLIENT_"& _ 
                "NAME, @CLIENT_SEX, @CLIENT_AGE, @CLIENT_DOB, @CLIENT_BROUGHT_BY, @CLIENT_REFERED"& _ 
                "_BY, @CLIENT_SIBLING, @CLIENT_BROTHER, @CLIENT_SISTER, @CLIENT_DATE_SEEN, @CLIEN"& _ 
                "T_SCHOOL_GOING, @CLIENT_LEVE_OF_EDU, @CLIENT_FATHER, @CLIENT_FATHER_EDU, @CLIENT"& _ 
                "_FATHER_POS, @CLIENT_MOTHER, @CLIENT_MOTHER_EDU, @CLIENT_MOTHER_POS, @CLIENT_HOU"& _ 
                "SE_NO, @CLIENT_STREET_NO, @CLIENT_VILLAGE, @CLIENT_COMMUNE, @CLIENT_DISTICT, @CL"& _ 
                "IENT_CITY, @CLIENT_PHONE, @CLIENT_CONSULTATION_PURPOSE, @CLIENT_IMP_NEUROPSY, @C"& _ 
                "LIENT_IMP_DEV, @CLIENT_PSYCHO, @CLIENT_SUBTYPE, @CLIENT_REASON_FOR_NOT_REG, @CLI"& _ 
                "ENT_ADV_REG_DATE, @CLIENT_ADV_REFERENCE, @YEARS)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SEX", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_AGE", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DOB", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DOB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_BROUGHT_BY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_BROUGHT_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REFERED_BY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFERED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SIBLING", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SIBLING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_BROTHER", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_BROTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SISTER", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SISTER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DATE_SEEN", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_SEEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SCHOOL_GOING", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SCHOOL_GOING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_LEVE_OF_EDU", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_LEVE_OF_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER_EDU", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER_POS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_POS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER_EDU", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER_POS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_POS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_HOUSE_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_HOUSE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_STREET_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_STREET_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_VILLAGE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_VILLAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_COMMUNE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMMUNE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DISTICT", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DISTICT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CITY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PHONE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PHONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CONSULTATION_PURPOSE", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CONSULTATION_PURPOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_IMP_NEUROPSY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_NEUROPSY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_IMP_DEV", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_DEV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PSYCHO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SUBTYPE", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SUBTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REASON_FOR_NOT_REG", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REASON_FOR_NOT_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADV_REG_DATE", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REG_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADV_REFERENCE", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REFERENCE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YEARS", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "YEARS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "INSERT INTO [CCAMH_CLIENTS] ([CLIENT_NO], [CLIENT_NAME], [CLIENT_SEX], [CLIENT_AG"& _ 
                "E], [CLIENT_DOB], [CLIENT_BROUGHT_BY], [CLIENT_REFERED_BY], [CLIENT_SIBLING], [C"& _ 
                "LIENT_BROTHER], [CLIENT_SISTER], [CLIENT_DATE_SEEN], [CLIENT_SCHOOL_GOING], [CLI"& _ 
                "ENT_LEVE_OF_EDU], [CLIENT_FATHER], [CLIENT_FATHER_EDU], [CLIENT_FATHER_POS], [CL"& _ 
                "IENT_MOTHER], [CLIENT_MOTHER_EDU], [CLIENT_MOTHER_POS], [CLIENT_HOUSE_NO], [CLIE"& _ 
                "NT_STREET_NO], [CLIENT_VILLAGE], [CLIENT_COMMUNE], [CLIENT_DISTICT], [CLIENT_CIT"& _ 
                "Y], [CLIENT_PHONE], [CLIENT_CONSULTATION_PURPOSE], [CLIENT_IMP_NEUROPSY], [CLIEN"& _ 
                "T_IMP_DEV], [CLIENT_PSYCHO], [CLIENT_SUBTYPE], [CLIENT_REASON_FOR_NOT_REG], [CLI"& _ 
                "ENT_ADV_REG_DATE], [CLIENT_ADV_REFERENCE], [YEARS]) VALUES (@CLIENT_NO, @CLIENT_"& _ 
                "NAME, @CLIENT_SEX, @CLIENT_AGE, @CLIENT_DOB, @CLIENT_BROUGHT_BY, @CLIENT_REFERED"& _ 
                "_BY, @CLIENT_SIBLING, @CLIENT_BROTHER, @CLIENT_SISTER, @CLIENT_DATE_SEEN, @CLIEN"& _ 
                "T_SCHOOL_GOING, @CLIENT_LEVE_OF_EDU, @CLIENT_FATHER, @CLIENT_FATHER_EDU, @CLIENT"& _ 
                "_FATHER_POS, @CLIENT_MOTHER, @CLIENT_MOTHER_EDU, @CLIENT_MOTHER_POS, @CLIENT_HOU"& _ 
                "SE_NO, @CLIENT_STREET_NO, @CLIENT_VILLAGE, @CLIENT_COMMUNE, @CLIENT_DISTICT, @CL"& _ 
                "IENT_CITY, @CLIENT_PHONE, @CLIENT_CONSULTATION_PURPOSE, @CLIENT_IMP_NEUROPSY, @C"& _ 
                "LIENT_IMP_DEV, @CLIENT_PSYCHO, @CLIENT_SUBTYPE, @CLIENT_REASON_FOR_NOT_REG, @CLI"& _ 
                "ENT_ADV_REG_DATE, @CLIENT_ADV_REFERENCE, @YEARS)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SEX", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_AGE", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DOB", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DOB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_BROUGHT_BY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_BROUGHT_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REFERED_BY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFERED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SIBLING", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SIBLING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_BROTHER", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_BROTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SISTER", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SISTER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DATE_SEEN", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_SEEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SCHOOL_GOING", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SCHOOL_GOING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_LEVE_OF_EDU", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_LEVE_OF_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER_EDU", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER_POS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_POS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER_EDU", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER_POS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_POS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_HOUSE_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_HOUSE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_STREET_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_STREET_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_VILLAGE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_VILLAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_COMMUNE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMMUNE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DISTICT", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DISTICT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CITY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PHONE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PHONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CONSULTATION_PURPOSE", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CONSULTATION_PURPOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_IMP_NEUROPSY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_NEUROPSY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_IMP_DEV", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_DEV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PSYCHO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SUBTYPE", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SUBTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REASON_FOR_NOT_REG", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REASON_FOR_NOT_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADV_REG_DATE", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REG_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADV_REFERENCE", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REFERENCE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YEARS", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "YEARS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "UPDATE [CCAMH_CLIENTS] SET [CLIENT_NAME] = @CLIENT_NAME, [CLIENT_SEX] = @CLIENT_S"& _ 
                "EX, [CLIENT_AGE] = @CLIENT_AGE, [CLIENT_DOB] = @CLIENT_DOB, [CLIENT_BROUGHT_BY] "& _ 
                "= @CLIENT_BROUGHT_BY, [CLIENT_REFERED_BY] = @CLIENT_REFERED_BY, [CLIENT_SIBLING]"& _ 
                " = @CLIENT_SIBLING, [CLIENT_BROTHER] = @CLIENT_BROTHER, [CLIENT_SISTER] = @CLIEN"& _ 
                "T_SISTER, [CLIENT_DATE_SEEN] = @CLIENT_DATE_SEEN, [CLIENT_SCHOOL_GOING] = @CLIEN"& _ 
                "T_SCHOOL_GOING, [CLIENT_LEVE_OF_EDU] = @CLIENT_LEVE_OF_EDU, [CLIENT_FATHER] = @C"& _ 
                "LIENT_FATHER, [CLIENT_FATHER_EDU] = @CLIENT_FATHER_EDU, [CLIENT_FATHER_POS] = @C"& _ 
                "LIENT_FATHER_POS, [CLIENT_MOTHER] = @CLIENT_MOTHER, [CLIENT_MOTHER_EDU] = @CLIEN"& _ 
                "T_MOTHER_EDU, [CLIENT_MOTHER_POS] = @CLIENT_MOTHER_POS, [CLIENT_HOUSE_NO] = @CLI"& _ 
                "ENT_HOUSE_NO, [CLIENT_STREET_NO] = @CLIENT_STREET_NO, [CLIENT_VILLAGE] = @CLIENT"& _ 
                "_VILLAGE, [CLIENT_COMMUNE] = @CLIENT_COMMUNE, [CLIENT_DISTICT] = @CLIENT_DISTICT"& _ 
                ", [CLIENT_CITY] = @CLIENT_CITY, [CLIENT_PHONE] = @CLIENT_PHONE, [CLIENT_CONSULTA"& _ 
                "TION_PURPOSE] = @CLIENT_CONSULTATION_PURPOSE, [CLIENT_IMP_NEUROPSY] = @CLIENT_IM"& _ 
                "P_NEUROPSY, [CLIENT_IMP_DEV] = @CLIENT_IMP_DEV, [CLIENT_PSYCHO] = @CLIENT_PSYCHO"& _ 
                ", [CLIENT_SUBTYPE] = @CLIENT_SUBTYPE, [CLIENT_REASON_FOR_NOT_REG] = @CLIENT_REAS"& _ 
                "ON_FOR_NOT_REG, [CLIENT_ADV_REG_DATE] = @CLIENT_ADV_REG_DATE, [CLIENT_ADV_REFERE"& _ 
                "NCE] = @CLIENT_ADV_REFERENCE, [YEARS] = @YEARS WHERE  ([CLIENT_NO] = @Original_C"& _ 
                "LIENT_NO)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SEX", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_AGE", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DOB", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DOB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_BROUGHT_BY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_BROUGHT_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REFERED_BY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFERED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SIBLING", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SIBLING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_BROTHER", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_BROTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SISTER", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SISTER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DATE_SEEN", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_SEEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SCHOOL_GOING", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SCHOOL_GOING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_LEVE_OF_EDU", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_LEVE_OF_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER_EDU", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER_POS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_POS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER_EDU", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER_POS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_POS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_HOUSE_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_HOUSE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_STREET_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_STREET_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_VILLAGE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_VILLAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_COMMUNE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMMUNE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DISTICT", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DISTICT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CITY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PHONE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PHONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CONSULTATION_PURPOSE", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CONSULTATION_PURPOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_IMP_NEUROPSY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_NEUROPSY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_IMP_DEV", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_DEV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PSYCHO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SUBTYPE", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SUBTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REASON_FOR_NOT_REG", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REASON_FOR_NOT_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADV_REG_DATE", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REG_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADV_REFERENCE", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REFERENCE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YEARS", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "YEARS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSCClientRegistration.CCAMH_CLIENTS111DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSCClientRegistration.CCAMH_CLIENTS111DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSCClientRegistration.CCAMH_CLIENTS111DataTable = New DSCClientRegistration.CCAMH_CLIENTS111DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSCClientRegistration.CCAMH_CLIENTS111DataTable, ByVal CLIENT_NO As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function getClientByCLIENT_NO(ByVal CLIENT_NO As Decimal) As DSCClientRegistration.CCAMH_CLIENTS111DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO,Decimal)
            Dim dataTable As DSCClientRegistration.CCAMH_CLIENTS111DataTable = New DSCClientRegistration.CCAMH_CLIENTS111DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSCClientRegistration.CCAMH_CLIENTS111DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSCClientRegistration) As Integer
            Return Me.Adapter.Update(dataSet, "CCAMH_CLIENTS111")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_CLIENT_ID As Decimal,  _
                    ByVal Original_CLIENT_NO As Decimal,  _
                    ByVal Original_CLIENT_NAME As String,  _
                    ByVal Original_CLIENT_SEX As String,  _
                    ByVal Original_CLIENT_AGE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_DOB As Global.System.Nullable(Of Date),  _
                    ByVal Original_CLIENT_BROUGHT_BY As String,  _
                    ByVal Original_CLIENT_REFERED_BY As String,  _
                    ByVal Original_CLIENT_SIBLING As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_BROTHER As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_SISTER As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_DATE_SEEN As Global.System.Nullable(Of Date),  _
                    ByVal Original_CLIENT_SCHOOL_GOING As String,  _
                    ByVal Original_CLIENT_LEVE_OF_EDU As String,  _
                    ByVal Original_CLIENT_FATHER As String,  _
                    ByVal Original_CLIENT_FATHER_EDU As String,  _
                    ByVal Original_CLIENT_FATHER_POS As String,  _
                    ByVal Original_CLIENT_MOTHER As String,  _
                    ByVal Original_CLIENT_MOTHER_EDU As String,  _
                    ByVal Original_CLIENT_MOTHER_POS As String,  _
                    ByVal Original_CLIENT_HOUSE_NO As String,  _
                    ByVal Original_CLIENT_STREET_NO As String,  _
                    ByVal Original_CLIENT_VILLAGE As String,  _
                    ByVal Original_CLIENT_COMMUNE As String,  _
                    ByVal Original_CLIENT_DISTICT As String,  _
                    ByVal Original_CLIENT_CITY As String,  _
                    ByVal Original_CLIENT_PHONE As String,  _
                    ByVal Original_CLIENT_CONSULTATION_PURPOSE As String,  _
                    ByVal Original_CLIENT_IMP_NEUROPSY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_IMP_DEV As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_PSYCHO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_SUBTYPE As String,  _
                    ByVal Original_CLIENT_REASON_FOR_NOT_REG As String,  _
                    ByVal Original_CLIENT_ADV_REG_DATE As String,  _
                    ByVal Original_CLIENT_ADV_REFERENCE As String,  _
                    ByVal Original_YEARS As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CLIENT_ID,Decimal)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CLIENT_NO,Decimal)
            If (Original_CLIENT_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_CLIENT_NAME,String)
            End If
            If (Original_CLIENT_SEX Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_CLIENT_SEX,String)
            End If
            If (Original_CLIENT_AGE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_CLIENT_AGE.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_DOB.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_CLIENT_DOB.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_BROUGHT_BY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_CLIENT_BROUGHT_BY,String)
            End If
            If (Original_CLIENT_REFERED_BY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_CLIENT_REFERED_BY,String)
            End If
            If (Original_CLIENT_SIBLING.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_CLIENT_SIBLING.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_BROTHER.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_CLIENT_BROTHER.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_SISTER.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_CLIENT_SISTER.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_DATE_SEEN.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_CLIENT_DATE_SEEN.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_SCHOOL_GOING Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_CLIENT_SCHOOL_GOING,String)
            End If
            If (Original_CLIENT_LEVE_OF_EDU Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_CLIENT_LEVE_OF_EDU,String)
            End If
            If (Original_CLIENT_FATHER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_CLIENT_FATHER,String)
            End If
            If (Original_CLIENT_FATHER_EDU Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_CLIENT_FATHER_EDU,String)
            End If
            If (Original_CLIENT_FATHER_POS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_CLIENT_FATHER_POS,String)
            End If
            If (Original_CLIENT_MOTHER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_CLIENT_MOTHER,String)
            End If
            If (Original_CLIENT_MOTHER_EDU Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_CLIENT_MOTHER_EDU,String)
            End If
            If (Original_CLIENT_MOTHER_POS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_CLIENT_MOTHER_POS,String)
            End If
            If (Original_CLIENT_HOUSE_NO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_CLIENT_HOUSE_NO,String)
            End If
            If (Original_CLIENT_STREET_NO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_CLIENT_STREET_NO,String)
            End If
            If (Original_CLIENT_VILLAGE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_CLIENT_VILLAGE,String)
            End If
            If (Original_CLIENT_COMMUNE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_CLIENT_COMMUNE,String)
            End If
            If (Original_CLIENT_DISTICT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_CLIENT_DISTICT,String)
            End If
            If (Original_CLIENT_CITY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_CLIENT_CITY,String)
            End If
            If (Original_CLIENT_PHONE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_CLIENT_PHONE,String)
            End If
            If (Original_CLIENT_CONSULTATION_PURPOSE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_CLIENT_CONSULTATION_PURPOSE,String)
            End If
            If (Original_CLIENT_IMP_NEUROPSY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_CLIENT_IMP_NEUROPSY.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_IMP_DEV.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_CLIENT_IMP_DEV.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_PSYCHO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_CLIENT_PSYCHO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_SUBTYPE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_CLIENT_SUBTYPE,String)
            End If
            If (Original_CLIENT_REASON_FOR_NOT_REG Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_CLIENT_REASON_FOR_NOT_REG,String)
            End If
            If (Original_CLIENT_ADV_REG_DATE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(Original_CLIENT_ADV_REG_DATE,String)
            End If
            If (Original_CLIENT_ADV_REFERENCE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(Original_CLIENT_ADV_REFERENCE,String)
            End If
            If (Original_YEARS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(Original_YEARS.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CLIENT_NO As Decimal,  _
                    ByVal CLIENT_NAME As String,  _
                    ByVal CLIENT_SEX As String,  _
                    ByVal CLIENT_AGE As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DOB As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_BROUGHT_BY As String,  _
                    ByVal CLIENT_REFERED_BY As String,  _
                    ByVal CLIENT_SIBLING As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_BROTHER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_SISTER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DATE_SEEN As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_SCHOOL_GOING As String,  _
                    ByVal CLIENT_LEVE_OF_EDU As String,  _
                    ByVal CLIENT_FATHER As String,  _
                    ByVal CLIENT_FATHER_EDU As String,  _
                    ByVal CLIENT_FATHER_POS As String,  _
                    ByVal CLIENT_MOTHER As String,  _
                    ByVal CLIENT_MOTHER_EDU As String,  _
                    ByVal CLIENT_MOTHER_POS As String,  _
                    ByVal CLIENT_HOUSE_NO As String,  _
                    ByVal CLIENT_STREET_NO As String,  _
                    ByVal CLIENT_VILLAGE As String,  _
                    ByVal CLIENT_COMMUNE As String,  _
                    ByVal CLIENT_DISTICT As String,  _
                    ByVal CLIENT_CITY As String,  _
                    ByVal CLIENT_PHONE As String,  _
                    ByVal CLIENT_CONSULTATION_PURPOSE As String,  _
                    ByVal CLIENT_IMP_NEUROPSY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_IMP_DEV As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_PSYCHO As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_SUBTYPE As String,  _
                    ByVal CLIENT_REASON_FOR_NOT_REG As String,  _
                    ByVal CLIENT_ADV_REG_DATE As String,  _
                    ByVal CLIENT_ADV_REFERENCE As String,  _
                    ByVal YEARS As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CLIENT_NO,Decimal)
            If (CLIENT_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CLIENT_NAME,String)
            End If
            If (CLIENT_SEX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CLIENT_SEX,String)
            End If
            If (CLIENT_AGE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CLIENT_AGE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DOB.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CLIENT_DOB.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_BROUGHT_BY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CLIENT_BROUGHT_BY,String)
            End If
            If (CLIENT_REFERED_BY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CLIENT_REFERED_BY,String)
            End If
            If (CLIENT_SIBLING.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CLIENT_SIBLING.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_BROTHER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CLIENT_BROTHER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SISTER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CLIENT_SISTER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DATE_SEEN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(CLIENT_DATE_SEEN.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SCHOOL_GOING Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(CLIENT_SCHOOL_GOING,String)
            End If
            If (CLIENT_LEVE_OF_EDU Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(CLIENT_LEVE_OF_EDU,String)
            End If
            If (CLIENT_FATHER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(CLIENT_FATHER,String)
            End If
            If (CLIENT_FATHER_EDU Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(CLIENT_FATHER_EDU,String)
            End If
            If (CLIENT_FATHER_POS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(CLIENT_FATHER_POS,String)
            End If
            If (CLIENT_MOTHER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(CLIENT_MOTHER,String)
            End If
            If (CLIENT_MOTHER_EDU Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(CLIENT_MOTHER_EDU,String)
            End If
            If (CLIENT_MOTHER_POS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(CLIENT_MOTHER_POS,String)
            End If
            If (CLIENT_HOUSE_NO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(CLIENT_HOUSE_NO,String)
            End If
            If (CLIENT_STREET_NO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(CLIENT_STREET_NO,String)
            End If
            If (CLIENT_VILLAGE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(CLIENT_VILLAGE,String)
            End If
            If (CLIENT_COMMUNE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(CLIENT_COMMUNE,String)
            End If
            If (CLIENT_DISTICT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(CLIENT_DISTICT,String)
            End If
            If (CLIENT_CITY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(CLIENT_CITY,String)
            End If
            If (CLIENT_PHONE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(CLIENT_PHONE,String)
            End If
            If (CLIENT_CONSULTATION_PURPOSE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(CLIENT_CONSULTATION_PURPOSE,String)
            End If
            If (CLIENT_IMP_NEUROPSY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(CLIENT_IMP_NEUROPSY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_IMP_DEV.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(CLIENT_IMP_DEV.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_PSYCHO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(CLIENT_PSYCHO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SUBTYPE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(CLIENT_SUBTYPE,String)
            End If
            If (CLIENT_REASON_FOR_NOT_REG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(CLIENT_REASON_FOR_NOT_REG,String)
            End If
            If (CLIENT_ADV_REG_DATE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(CLIENT_ADV_REG_DATE,String)
            End If
            If (CLIENT_ADV_REFERENCE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(CLIENT_ADV_REFERENCE,String)
            End If
            If (YEARS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(YEARS.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CLIENT_NO As Decimal,  _
                    ByVal CLIENT_NAME As String,  _
                    ByVal CLIENT_SEX As String,  _
                    ByVal CLIENT_AGE As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DOB As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_BROUGHT_BY As String,  _
                    ByVal CLIENT_REFERED_BY As String,  _
                    ByVal CLIENT_SIBLING As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_BROTHER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_SISTER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DATE_SEEN As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_SCHOOL_GOING As String,  _
                    ByVal CLIENT_LEVE_OF_EDU As String,  _
                    ByVal CLIENT_FATHER As String,  _
                    ByVal CLIENT_FATHER_EDU As String,  _
                    ByVal CLIENT_FATHER_POS As String,  _
                    ByVal CLIENT_MOTHER As String,  _
                    ByVal CLIENT_MOTHER_EDU As String,  _
                    ByVal CLIENT_MOTHER_POS As String,  _
                    ByVal CLIENT_HOUSE_NO As String,  _
                    ByVal CLIENT_STREET_NO As String,  _
                    ByVal CLIENT_VILLAGE As String,  _
                    ByVal CLIENT_COMMUNE As String,  _
                    ByVal CLIENT_DISTICT As String,  _
                    ByVal CLIENT_CITY As String,  _
                    ByVal CLIENT_PHONE As String,  _
                    ByVal CLIENT_CONSULTATION_PURPOSE As String,  _
                    ByVal CLIENT_IMP_NEUROPSY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_IMP_DEV As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_PSYCHO As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_SUBTYPE As String,  _
                    ByVal CLIENT_REASON_FOR_NOT_REG As String,  _
                    ByVal CLIENT_ADV_REG_DATE As String,  _
                    ByVal CLIENT_ADV_REFERENCE As String,  _
                    ByVal YEARS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_ID As Decimal,  _
                    ByVal Original_CLIENT_NO As Decimal,  _
                    ByVal Original_CLIENT_NAME As String,  _
                    ByVal Original_CLIENT_SEX As String,  _
                    ByVal Original_CLIENT_AGE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_DOB As Global.System.Nullable(Of Date),  _
                    ByVal Original_CLIENT_BROUGHT_BY As String,  _
                    ByVal Original_CLIENT_REFERED_BY As String,  _
                    ByVal Original_CLIENT_SIBLING As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_BROTHER As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_SISTER As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_DATE_SEEN As Global.System.Nullable(Of Date),  _
                    ByVal Original_CLIENT_SCHOOL_GOING As String,  _
                    ByVal Original_CLIENT_LEVE_OF_EDU As String,  _
                    ByVal Original_CLIENT_FATHER As String,  _
                    ByVal Original_CLIENT_FATHER_EDU As String,  _
                    ByVal Original_CLIENT_FATHER_POS As String,  _
                    ByVal Original_CLIENT_MOTHER As String,  _
                    ByVal Original_CLIENT_MOTHER_EDU As String,  _
                    ByVal Original_CLIENT_MOTHER_POS As String,  _
                    ByVal Original_CLIENT_HOUSE_NO As String,  _
                    ByVal Original_CLIENT_STREET_NO As String,  _
                    ByVal Original_CLIENT_VILLAGE As String,  _
                    ByVal Original_CLIENT_COMMUNE As String,  _
                    ByVal Original_CLIENT_DISTICT As String,  _
                    ByVal Original_CLIENT_CITY As String,  _
                    ByVal Original_CLIENT_PHONE As String,  _
                    ByVal Original_CLIENT_CONSULTATION_PURPOSE As String,  _
                    ByVal Original_CLIENT_IMP_NEUROPSY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_IMP_DEV As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_PSYCHO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_SUBTYPE As String,  _
                    ByVal Original_CLIENT_REASON_FOR_NOT_REG As String,  _
                    ByVal Original_CLIENT_ADV_REG_DATE As String,  _
                    ByVal Original_CLIENT_ADV_REFERENCE As String,  _
                    ByVal Original_YEARS As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CLIENT_NO,Decimal)
            If (CLIENT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CLIENT_NAME,String)
            End If
            If (CLIENT_SEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CLIENT_SEX,String)
            End If
            If (CLIENT_AGE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CLIENT_AGE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DOB.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CLIENT_DOB.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_BROUGHT_BY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CLIENT_BROUGHT_BY,String)
            End If
            If (CLIENT_REFERED_BY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CLIENT_REFERED_BY,String)
            End If
            If (CLIENT_SIBLING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CLIENT_SIBLING.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_BROTHER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(CLIENT_BROTHER.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SISTER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(CLIENT_SISTER.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DATE_SEEN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(CLIENT_DATE_SEEN.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SCHOOL_GOING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(CLIENT_SCHOOL_GOING,String)
            End If
            If (CLIENT_LEVE_OF_EDU Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(CLIENT_LEVE_OF_EDU,String)
            End If
            If (CLIENT_FATHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(CLIENT_FATHER,String)
            End If
            If (CLIENT_FATHER_EDU Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(CLIENT_FATHER_EDU,String)
            End If
            If (CLIENT_FATHER_POS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(CLIENT_FATHER_POS,String)
            End If
            If (CLIENT_MOTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(CLIENT_MOTHER,String)
            End If
            If (CLIENT_MOTHER_EDU Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(CLIENT_MOTHER_EDU,String)
            End If
            If (CLIENT_MOTHER_POS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(CLIENT_MOTHER_POS,String)
            End If
            If (CLIENT_HOUSE_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(CLIENT_HOUSE_NO,String)
            End If
            If (CLIENT_STREET_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(CLIENT_STREET_NO,String)
            End If
            If (CLIENT_VILLAGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(CLIENT_VILLAGE,String)
            End If
            If (CLIENT_COMMUNE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(CLIENT_COMMUNE,String)
            End If
            If (CLIENT_DISTICT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(CLIENT_DISTICT,String)
            End If
            If (CLIENT_CITY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(CLIENT_CITY,String)
            End If
            If (CLIENT_PHONE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(CLIENT_PHONE,String)
            End If
            If (CLIENT_CONSULTATION_PURPOSE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(CLIENT_CONSULTATION_PURPOSE,String)
            End If
            If (CLIENT_IMP_NEUROPSY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(CLIENT_IMP_NEUROPSY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_IMP_DEV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(CLIENT_IMP_DEV.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_PSYCHO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(CLIENT_PSYCHO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SUBTYPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(CLIENT_SUBTYPE,String)
            End If
            If (CLIENT_REASON_FOR_NOT_REG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(CLIENT_REASON_FOR_NOT_REG,String)
            End If
            If (CLIENT_ADV_REG_DATE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(CLIENT_ADV_REG_DATE,String)
            End If
            If (CLIENT_ADV_REFERENCE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(CLIENT_ADV_REFERENCE,String)
            End If
            If (YEARS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(YEARS.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_CLIENT_ID,Decimal)
            Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_CLIENT_NO,Decimal)
            If (Original_CLIENT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_CLIENT_NAME,String)
            End If
            If (Original_CLIENT_SEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_CLIENT_SEX,String)
            End If
            If (Original_CLIENT_AGE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_CLIENT_AGE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_DOB.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_CLIENT_DOB.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_BROUGHT_BY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_CLIENT_BROUGHT_BY,String)
            End If
            If (Original_CLIENT_REFERED_BY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_CLIENT_REFERED_BY,String)
            End If
            If (Original_CLIENT_SIBLING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_CLIENT_SIBLING.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_BROTHER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_CLIENT_BROTHER.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_SISTER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_CLIENT_SISTER.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_DATE_SEEN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_CLIENT_DATE_SEEN.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_SCHOOL_GOING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_CLIENT_SCHOOL_GOING,String)
            End If
            If (Original_CLIENT_LEVE_OF_EDU Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_CLIENT_LEVE_OF_EDU,String)
            End If
            If (Original_CLIENT_FATHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_CLIENT_FATHER,String)
            End If
            If (Original_CLIENT_FATHER_EDU Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_CLIENT_FATHER_EDU,String)
            End If
            If (Original_CLIENT_FATHER_POS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_CLIENT_FATHER_POS,String)
            End If
            If (Original_CLIENT_MOTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_CLIENT_MOTHER,String)
            End If
            If (Original_CLIENT_MOTHER_EDU Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_CLIENT_MOTHER_EDU,String)
            End If
            If (Original_CLIENT_MOTHER_POS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_CLIENT_MOTHER_POS,String)
            End If
            If (Original_CLIENT_HOUSE_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_CLIENT_HOUSE_NO,String)
            End If
            If (Original_CLIENT_STREET_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_CLIENT_STREET_NO,String)
            End If
            If (Original_CLIENT_VILLAGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_CLIENT_VILLAGE,String)
            End If
            If (Original_CLIENT_COMMUNE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_CLIENT_COMMUNE,String)
            End If
            If (Original_CLIENT_DISTICT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_CLIENT_DISTICT,String)
            End If
            If (Original_CLIENT_CITY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_CLIENT_CITY,String)
            End If
            If (Original_CLIENT_PHONE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_CLIENT_PHONE,String)
            End If
            If (Original_CLIENT_CONSULTATION_PURPOSE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_CLIENT_CONSULTATION_PURPOSE,String)
            End If
            If (Original_CLIENT_IMP_NEUROPSY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_CLIENT_IMP_NEUROPSY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_IMP_DEV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_CLIENT_IMP_DEV.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_PSYCHO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_CLIENT_PSYCHO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_SUBTYPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_CLIENT_SUBTYPE,String)
            End If
            If (Original_CLIENT_REASON_FOR_NOT_REG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_CLIENT_REASON_FOR_NOT_REG,String)
            End If
            If (Original_CLIENT_ADV_REG_DATE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_CLIENT_ADV_REG_DATE,String)
            End If
            If (Original_CLIENT_ADV_REFERENCE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_CLIENT_ADV_REFERENCE,String)
            End If
            If (Original_YEARS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_YEARS.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CLIENT_NAME As String,  _
                    ByVal CLIENT_SEX As String,  _
                    ByVal CLIENT_AGE As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DOB As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_BROUGHT_BY As String,  _
                    ByVal CLIENT_REFERED_BY As String,  _
                    ByVal CLIENT_SIBLING As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_BROTHER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_SISTER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DATE_SEEN As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_SCHOOL_GOING As String,  _
                    ByVal CLIENT_LEVE_OF_EDU As String,  _
                    ByVal CLIENT_FATHER As String,  _
                    ByVal CLIENT_FATHER_EDU As String,  _
                    ByVal CLIENT_FATHER_POS As String,  _
                    ByVal CLIENT_MOTHER As String,  _
                    ByVal CLIENT_MOTHER_EDU As String,  _
                    ByVal CLIENT_MOTHER_POS As String,  _
                    ByVal CLIENT_HOUSE_NO As String,  _
                    ByVal CLIENT_STREET_NO As String,  _
                    ByVal CLIENT_VILLAGE As String,  _
                    ByVal CLIENT_COMMUNE As String,  _
                    ByVal CLIENT_DISTICT As String,  _
                    ByVal CLIENT_CITY As String,  _
                    ByVal CLIENT_PHONE As String,  _
                    ByVal CLIENT_CONSULTATION_PURPOSE As String,  _
                    ByVal CLIENT_IMP_NEUROPSY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_IMP_DEV As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_PSYCHO As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_SUBTYPE As String,  _
                    ByVal CLIENT_REASON_FOR_NOT_REG As String,  _
                    ByVal CLIENT_ADV_REG_DATE As String,  _
                    ByVal CLIENT_ADV_REFERENCE As String,  _
                    ByVal YEARS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_ID As Decimal,  _
                    ByVal Original_CLIENT_NO As Decimal,  _
                    ByVal Original_CLIENT_NAME As String,  _
                    ByVal Original_CLIENT_SEX As String,  _
                    ByVal Original_CLIENT_AGE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_DOB As Global.System.Nullable(Of Date),  _
                    ByVal Original_CLIENT_BROUGHT_BY As String,  _
                    ByVal Original_CLIENT_REFERED_BY As String,  _
                    ByVal Original_CLIENT_SIBLING As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_BROTHER As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_SISTER As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_DATE_SEEN As Global.System.Nullable(Of Date),  _
                    ByVal Original_CLIENT_SCHOOL_GOING As String,  _
                    ByVal Original_CLIENT_LEVE_OF_EDU As String,  _
                    ByVal Original_CLIENT_FATHER As String,  _
                    ByVal Original_CLIENT_FATHER_EDU As String,  _
                    ByVal Original_CLIENT_FATHER_POS As String,  _
                    ByVal Original_CLIENT_MOTHER As String,  _
                    ByVal Original_CLIENT_MOTHER_EDU As String,  _
                    ByVal Original_CLIENT_MOTHER_POS As String,  _
                    ByVal Original_CLIENT_HOUSE_NO As String,  _
                    ByVal Original_CLIENT_STREET_NO As String,  _
                    ByVal Original_CLIENT_VILLAGE As String,  _
                    ByVal Original_CLIENT_COMMUNE As String,  _
                    ByVal Original_CLIENT_DISTICT As String,  _
                    ByVal Original_CLIENT_CITY As String,  _
                    ByVal Original_CLIENT_PHONE As String,  _
                    ByVal Original_CLIENT_CONSULTATION_PURPOSE As String,  _
                    ByVal Original_CLIENT_IMP_NEUROPSY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_IMP_DEV As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_PSYCHO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_SUBTYPE As String,  _
                    ByVal Original_CLIENT_REASON_FOR_NOT_REG As String,  _
                    ByVal Original_CLIENT_ADV_REG_DATE As String,  _
                    ByVal Original_CLIENT_ADV_REFERENCE As String,  _
                    ByVal Original_YEARS As Global.System.Nullable(Of Decimal)) As Integer
            Return Me.Update(Original_CLIENT_NO, CLIENT_NAME, CLIENT_SEX, CLIENT_AGE, CLIENT_DOB, CLIENT_BROUGHT_BY, CLIENT_REFERED_BY, CLIENT_SIBLING, CLIENT_BROTHER, CLIENT_SISTER, CLIENT_DATE_SEEN, CLIENT_SCHOOL_GOING, CLIENT_LEVE_OF_EDU, CLIENT_FATHER, CLIENT_FATHER_EDU, CLIENT_FATHER_POS, CLIENT_MOTHER, CLIENT_MOTHER_EDU, CLIENT_MOTHER_POS, CLIENT_HOUSE_NO, CLIENT_STREET_NO, CLIENT_VILLAGE, CLIENT_COMMUNE, CLIENT_DISTICT, CLIENT_CITY, CLIENT_PHONE, CLIENT_CONSULTATION_PURPOSE, CLIENT_IMP_NEUROPSY, CLIENT_IMP_DEV, CLIENT_PSYCHO, CLIENT_SUBTYPE, CLIENT_REASON_FOR_NOT_REG, CLIENT_ADV_REG_DATE, CLIENT_ADV_REFERENCE, YEARS, Original_CLIENT_ID, Original_CLIENT_NO, Original_CLIENT_NAME, Original_CLIENT_SEX, Original_CLIENT_AGE, Original_CLIENT_DOB, Original_CLIENT_BROUGHT_BY, Original_CLIENT_REFERED_BY, Original_CLIENT_SIBLING, Original_CLIENT_BROTHER, Original_CLIENT_SISTER, Original_CLIENT_DATE_SEEN, Original_CLIENT_SCHOOL_GOING, Original_CLIENT_LEVE_OF_EDU, Original_CLIENT_FATHER, Original_CLIENT_FATHER_EDU, Original_CLIENT_FATHER_POS, Original_CLIENT_MOTHER, Original_CLIENT_MOTHER_EDU, Original_CLIENT_MOTHER_POS, Original_CLIENT_HOUSE_NO, Original_CLIENT_STREET_NO, Original_CLIENT_VILLAGE, Original_CLIENT_COMMUNE, Original_CLIENT_DISTICT, Original_CLIENT_CITY, Original_CLIENT_PHONE, Original_CLIENT_CONSULTATION_PURPOSE, Original_CLIENT_IMP_NEUROPSY, Original_CLIENT_IMP_DEV, Original_CLIENT_PSYCHO, Original_CLIENT_SUBTYPE, Original_CLIENT_REASON_FOR_NOT_REG, Original_CLIENT_ADV_REG_DATE, Original_CLIENT_ADV_REFERENCE, Original_YEARS)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function insertCCAMHClient( _
                    ByVal CLIENT_NO As Decimal,  _
                    ByVal CLIENT_NAME As String,  _
                    ByVal CLIENT_SEX As String,  _
                    ByVal CLIENT_AGE As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DOB As String,  _
                    ByVal CLIENT_BROUGHT_BY As String,  _
                    ByVal CLIENT_REFERED_BY As String,  _
                    ByVal CLIENT_SIBLING As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_BROTHER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_SISTER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DATE_SEEN As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_SCHOOL_GOING As String,  _
                    ByVal CLIENT_LEVE_OF_EDU As String,  _
                    ByVal CLIENT_FATHER As String,  _
                    ByVal CLIENT_FATHER_EDU As String,  _
                    ByVal CLIENT_FATHER_POS As String,  _
                    ByVal CLIENT_MOTHER As String,  _
                    ByVal CLIENT_MOTHER_EDU As String,  _
                    ByVal CLIENT_MOTHER_POS As String,  _
                    ByVal CLIENT_HOUSE_NO As String,  _
                    ByVal CLIENT_STREET_NO As String,  _
                    ByVal CLIENT_VILLAGE As String,  _
                    ByVal CLIENT_COMMUNE As String,  _
                    ByVal CLIENT_DISTICT As String,  _
                    ByVal CLIENT_CITY As String,  _
                    ByVal CLIENT_PHONE As String,  _
                    ByVal CLIENT_CONSULTATION_PURPOSE As String,  _
                    ByVal CLIENT_IMP_NEUROPSY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_IMP_DEV As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_PSYCHO As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_SUBTYPE As String,  _
                    ByVal CLIENT_REASON_FOR_NOT_REG As String,  _
                    ByVal CLIENT_ADV_REG_DATE As String,  _
                    ByVal CLIENT_ADV_REFERENCE As String,  _
                    ByVal YEARS As Global.System.Nullable(Of Decimal)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            command.Parameters(0).Value = CType(CLIENT_NO,Decimal)
            If (CLIENT_NAME Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(CLIENT_NAME,String)
            End If
            If (CLIENT_SEX Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(CLIENT_SEX,String)
            End If
            If (CLIENT_AGE.HasValue = true) Then
                command.Parameters(3).Value = CType(CLIENT_AGE.Value,Decimal)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DOB Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(CLIENT_DOB,String)
            End If
            If (CLIENT_BROUGHT_BY Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(CLIENT_BROUGHT_BY,String)
            End If
            If (CLIENT_REFERED_BY Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(CLIENT_REFERED_BY,String)
            End If
            If (CLIENT_SIBLING.HasValue = true) Then
                command.Parameters(7).Value = CType(CLIENT_SIBLING.Value,Decimal)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_BROTHER.HasValue = true) Then
                command.Parameters(8).Value = CType(CLIENT_BROTHER.Value,Decimal)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SISTER.HasValue = true) Then
                command.Parameters(9).Value = CType(CLIENT_SISTER.Value,Decimal)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DATE_SEEN.HasValue = true) Then
                command.Parameters(10).Value = CType(CLIENT_DATE_SEEN.Value,Date)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SCHOOL_GOING Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(CLIENT_SCHOOL_GOING,String)
            End If
            If (CLIENT_LEVE_OF_EDU Is Nothing) Then
                command.Parameters(12).Value = Global.System.DBNull.Value
            Else
                command.Parameters(12).Value = CType(CLIENT_LEVE_OF_EDU,String)
            End If
            If (CLIENT_FATHER Is Nothing) Then
                command.Parameters(13).Value = Global.System.DBNull.Value
            Else
                command.Parameters(13).Value = CType(CLIENT_FATHER,String)
            End If
            If (CLIENT_FATHER_EDU Is Nothing) Then
                command.Parameters(14).Value = Global.System.DBNull.Value
            Else
                command.Parameters(14).Value = CType(CLIENT_FATHER_EDU,String)
            End If
            If (CLIENT_FATHER_POS Is Nothing) Then
                command.Parameters(15).Value = Global.System.DBNull.Value
            Else
                command.Parameters(15).Value = CType(CLIENT_FATHER_POS,String)
            End If
            If (CLIENT_MOTHER Is Nothing) Then
                command.Parameters(16).Value = Global.System.DBNull.Value
            Else
                command.Parameters(16).Value = CType(CLIENT_MOTHER,String)
            End If
            If (CLIENT_MOTHER_EDU Is Nothing) Then
                command.Parameters(17).Value = Global.System.DBNull.Value
            Else
                command.Parameters(17).Value = CType(CLIENT_MOTHER_EDU,String)
            End If
            If (CLIENT_MOTHER_POS Is Nothing) Then
                command.Parameters(18).Value = Global.System.DBNull.Value
            Else
                command.Parameters(18).Value = CType(CLIENT_MOTHER_POS,String)
            End If
            If (CLIENT_HOUSE_NO Is Nothing) Then
                command.Parameters(19).Value = Global.System.DBNull.Value
            Else
                command.Parameters(19).Value = CType(CLIENT_HOUSE_NO,String)
            End If
            If (CLIENT_STREET_NO Is Nothing) Then
                command.Parameters(20).Value = Global.System.DBNull.Value
            Else
                command.Parameters(20).Value = CType(CLIENT_STREET_NO,String)
            End If
            If (CLIENT_VILLAGE Is Nothing) Then
                command.Parameters(21).Value = Global.System.DBNull.Value
            Else
                command.Parameters(21).Value = CType(CLIENT_VILLAGE,String)
            End If
            If (CLIENT_COMMUNE Is Nothing) Then
                command.Parameters(22).Value = Global.System.DBNull.Value
            Else
                command.Parameters(22).Value = CType(CLIENT_COMMUNE,String)
            End If
            If (CLIENT_DISTICT Is Nothing) Then
                command.Parameters(23).Value = Global.System.DBNull.Value
            Else
                command.Parameters(23).Value = CType(CLIENT_DISTICT,String)
            End If
            If (CLIENT_CITY Is Nothing) Then
                command.Parameters(24).Value = Global.System.DBNull.Value
            Else
                command.Parameters(24).Value = CType(CLIENT_CITY,String)
            End If
            If (CLIENT_PHONE Is Nothing) Then
                command.Parameters(25).Value = Global.System.DBNull.Value
            Else
                command.Parameters(25).Value = CType(CLIENT_PHONE,String)
            End If
            If (CLIENT_CONSULTATION_PURPOSE Is Nothing) Then
                command.Parameters(26).Value = Global.System.DBNull.Value
            Else
                command.Parameters(26).Value = CType(CLIENT_CONSULTATION_PURPOSE,String)
            End If
            If (CLIENT_IMP_NEUROPSY.HasValue = true) Then
                command.Parameters(27).Value = CType(CLIENT_IMP_NEUROPSY.Value,Boolean)
            Else
                command.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_IMP_DEV.HasValue = true) Then
                command.Parameters(28).Value = CType(CLIENT_IMP_DEV.Value,Boolean)
            Else
                command.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_PSYCHO.HasValue = true) Then
                command.Parameters(29).Value = CType(CLIENT_PSYCHO.Value,Boolean)
            Else
                command.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SUBTYPE Is Nothing) Then
                command.Parameters(30).Value = Global.System.DBNull.Value
            Else
                command.Parameters(30).Value = CType(CLIENT_SUBTYPE,String)
            End If
            If (CLIENT_REASON_FOR_NOT_REG Is Nothing) Then
                command.Parameters(31).Value = Global.System.DBNull.Value
            Else
                command.Parameters(31).Value = CType(CLIENT_REASON_FOR_NOT_REG,String)
            End If
            If (CLIENT_ADV_REG_DATE Is Nothing) Then
                command.Parameters(32).Value = Global.System.DBNull.Value
            Else
                command.Parameters(32).Value = CType(CLIENT_ADV_REG_DATE,String)
            End If
            If (CLIENT_ADV_REFERENCE Is Nothing) Then
                command.Parameters(33).Value = Global.System.DBNull.Value
            Else
                command.Parameters(33).Value = CType(CLIENT_ADV_REFERENCE,String)
            End If
            If (YEARS.HasValue = true) Then
                command.Parameters(34).Value = CType(YEARS.Value,Decimal)
            Else
                command.Parameters(34).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function insertClient( _
                    ByVal CLIENT_NO As Decimal,  _
                    ByVal CLIENT_NAME As String,  _
                    ByVal CLIENT_SEX As String,  _
                    ByVal CLIENT_AGE As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DOB As String,  _
                    ByVal CLIENT_BROUGHT_BY As String,  _
                    ByVal CLIENT_REFERED_BY As String,  _
                    ByVal CLIENT_SIBLING As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_BROTHER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_SISTER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DATE_SEEN As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_SCHOOL_GOING As String,  _
                    ByVal CLIENT_LEVE_OF_EDU As String,  _
                    ByVal CLIENT_FATHER As String,  _
                    ByVal CLIENT_FATHER_EDU As String,  _
                    ByVal CLIENT_FATHER_POS As String,  _
                    ByVal CLIENT_MOTHER As String,  _
                    ByVal CLIENT_MOTHER_EDU As String,  _
                    ByVal CLIENT_MOTHER_POS As String,  _
                    ByVal CLIENT_HOUSE_NO As String,  _
                    ByVal CLIENT_STREET_NO As String,  _
                    ByVal CLIENT_VILLAGE As String,  _
                    ByVal CLIENT_COMMUNE As String,  _
                    ByVal CLIENT_DISTICT As String,  _
                    ByVal CLIENT_CITY As String,  _
                    ByVal CLIENT_PHONE As String,  _
                    ByVal CLIENT_CONSULTATION_PURPOSE As String,  _
                    ByVal CLIENT_IMP_NEUROPSY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_IMP_DEV As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_PSYCHO As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_SUBTYPE As String,  _
                    ByVal CLIENT_REASON_FOR_NOT_REG As String,  _
                    ByVal CLIENT_ADV_REG_DATE As String,  _
                    ByVal CLIENT_ADV_REFERENCE As String,  _
                    ByVal YEARS As Global.System.Nullable(Of Decimal)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            command.Parameters(0).Value = CType(CLIENT_NO,Decimal)
            If (CLIENT_NAME Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(CLIENT_NAME,String)
            End If
            If (CLIENT_SEX Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(CLIENT_SEX,String)
            End If
            If (CLIENT_AGE.HasValue = true) Then
                command.Parameters(3).Value = CType(CLIENT_AGE.Value,Decimal)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DOB Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(CLIENT_DOB,String)
            End If
            If (CLIENT_BROUGHT_BY Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(CLIENT_BROUGHT_BY,String)
            End If
            If (CLIENT_REFERED_BY Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(CLIENT_REFERED_BY,String)
            End If
            If (CLIENT_SIBLING.HasValue = true) Then
                command.Parameters(7).Value = CType(CLIENT_SIBLING.Value,Decimal)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_BROTHER.HasValue = true) Then
                command.Parameters(8).Value = CType(CLIENT_BROTHER.Value,Decimal)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SISTER.HasValue = true) Then
                command.Parameters(9).Value = CType(CLIENT_SISTER.Value,Decimal)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DATE_SEEN.HasValue = true) Then
                command.Parameters(10).Value = CType(CLIENT_DATE_SEEN.Value,Date)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SCHOOL_GOING Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(CLIENT_SCHOOL_GOING,String)
            End If
            If (CLIENT_LEVE_OF_EDU Is Nothing) Then
                command.Parameters(12).Value = Global.System.DBNull.Value
            Else
                command.Parameters(12).Value = CType(CLIENT_LEVE_OF_EDU,String)
            End If
            If (CLIENT_FATHER Is Nothing) Then
                command.Parameters(13).Value = Global.System.DBNull.Value
            Else
                command.Parameters(13).Value = CType(CLIENT_FATHER,String)
            End If
            If (CLIENT_FATHER_EDU Is Nothing) Then
                command.Parameters(14).Value = Global.System.DBNull.Value
            Else
                command.Parameters(14).Value = CType(CLIENT_FATHER_EDU,String)
            End If
            If (CLIENT_FATHER_POS Is Nothing) Then
                command.Parameters(15).Value = Global.System.DBNull.Value
            Else
                command.Parameters(15).Value = CType(CLIENT_FATHER_POS,String)
            End If
            If (CLIENT_MOTHER Is Nothing) Then
                command.Parameters(16).Value = Global.System.DBNull.Value
            Else
                command.Parameters(16).Value = CType(CLIENT_MOTHER,String)
            End If
            If (CLIENT_MOTHER_EDU Is Nothing) Then
                command.Parameters(17).Value = Global.System.DBNull.Value
            Else
                command.Parameters(17).Value = CType(CLIENT_MOTHER_EDU,String)
            End If
            If (CLIENT_MOTHER_POS Is Nothing) Then
                command.Parameters(18).Value = Global.System.DBNull.Value
            Else
                command.Parameters(18).Value = CType(CLIENT_MOTHER_POS,String)
            End If
            If (CLIENT_HOUSE_NO Is Nothing) Then
                command.Parameters(19).Value = Global.System.DBNull.Value
            Else
                command.Parameters(19).Value = CType(CLIENT_HOUSE_NO,String)
            End If
            If (CLIENT_STREET_NO Is Nothing) Then
                command.Parameters(20).Value = Global.System.DBNull.Value
            Else
                command.Parameters(20).Value = CType(CLIENT_STREET_NO,String)
            End If
            If (CLIENT_VILLAGE Is Nothing) Then
                command.Parameters(21).Value = Global.System.DBNull.Value
            Else
                command.Parameters(21).Value = CType(CLIENT_VILLAGE,String)
            End If
            If (CLIENT_COMMUNE Is Nothing) Then
                command.Parameters(22).Value = Global.System.DBNull.Value
            Else
                command.Parameters(22).Value = CType(CLIENT_COMMUNE,String)
            End If
            If (CLIENT_DISTICT Is Nothing) Then
                command.Parameters(23).Value = Global.System.DBNull.Value
            Else
                command.Parameters(23).Value = CType(CLIENT_DISTICT,String)
            End If
            If (CLIENT_CITY Is Nothing) Then
                command.Parameters(24).Value = Global.System.DBNull.Value
            Else
                command.Parameters(24).Value = CType(CLIENT_CITY,String)
            End If
            If (CLIENT_PHONE Is Nothing) Then
                command.Parameters(25).Value = Global.System.DBNull.Value
            Else
                command.Parameters(25).Value = CType(CLIENT_PHONE,String)
            End If
            If (CLIENT_CONSULTATION_PURPOSE Is Nothing) Then
                command.Parameters(26).Value = Global.System.DBNull.Value
            Else
                command.Parameters(26).Value = CType(CLIENT_CONSULTATION_PURPOSE,String)
            End If
            If (CLIENT_IMP_NEUROPSY.HasValue = true) Then
                command.Parameters(27).Value = CType(CLIENT_IMP_NEUROPSY.Value,Boolean)
            Else
                command.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_IMP_DEV.HasValue = true) Then
                command.Parameters(28).Value = CType(CLIENT_IMP_DEV.Value,Boolean)
            Else
                command.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_PSYCHO.HasValue = true) Then
                command.Parameters(29).Value = CType(CLIENT_PSYCHO.Value,Boolean)
            Else
                command.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SUBTYPE Is Nothing) Then
                command.Parameters(30).Value = Global.System.DBNull.Value
            Else
                command.Parameters(30).Value = CType(CLIENT_SUBTYPE,String)
            End If
            If (CLIENT_REASON_FOR_NOT_REG Is Nothing) Then
                command.Parameters(31).Value = Global.System.DBNull.Value
            Else
                command.Parameters(31).Value = CType(CLIENT_REASON_FOR_NOT_REG,String)
            End If
            If (CLIENT_ADV_REG_DATE Is Nothing) Then
                command.Parameters(32).Value = Global.System.DBNull.Value
            Else
                command.Parameters(32).Value = CType(CLIENT_ADV_REG_DATE,String)
            End If
            If (CLIENT_ADV_REFERENCE Is Nothing) Then
                command.Parameters(33).Value = Global.System.DBNull.Value
            Else
                command.Parameters(33).Value = CType(CLIENT_ADV_REFERENCE,String)
            End If
            If (YEARS.HasValue = true) Then
                command.Parameters(34).Value = CType(YEARS.Value,Decimal)
            Else
                command.Parameters(34).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function updateCCAMHClient( _
                    ByVal CLIENT_NAME As String,  _
                    ByVal CLIENT_SEX As String,  _
                    ByVal CLIENT_AGE As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DOB As String,  _
                    ByVal CLIENT_BROUGHT_BY As String,  _
                    ByVal CLIENT_REFERED_BY As String,  _
                    ByVal CLIENT_SIBLING As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_BROTHER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_SISTER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DATE_SEEN As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_SCHOOL_GOING As String,  _
                    ByVal CLIENT_LEVE_OF_EDU As String,  _
                    ByVal CLIENT_FATHER As String,  _
                    ByVal CLIENT_FATHER_EDU As String,  _
                    ByVal CLIENT_FATHER_POS As String,  _
                    ByVal CLIENT_MOTHER As String,  _
                    ByVal CLIENT_MOTHER_EDU As String,  _
                    ByVal CLIENT_MOTHER_POS As String,  _
                    ByVal CLIENT_HOUSE_NO As String,  _
                    ByVal CLIENT_STREET_NO As String,  _
                    ByVal CLIENT_VILLAGE As String,  _
                    ByVal CLIENT_COMMUNE As String,  _
                    ByVal CLIENT_DISTICT As String,  _
                    ByVal CLIENT_CITY As String,  _
                    ByVal CLIENT_PHONE As String,  _
                    ByVal CLIENT_CONSULTATION_PURPOSE As String,  _
                    ByVal CLIENT_IMP_NEUROPSY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_IMP_DEV As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_PSYCHO As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_SUBTYPE As String,  _
                    ByVal CLIENT_REASON_FOR_NOT_REG As String,  _
                    ByVal CLIENT_ADV_REG_DATE As String,  _
                    ByVal CLIENT_ADV_REFERENCE As String,  _
                    ByVal YEARS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_NO As Decimal) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(4)
            If (CLIENT_NAME Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(CLIENT_NAME,String)
            End If
            If (CLIENT_SEX Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(CLIENT_SEX,String)
            End If
            If (CLIENT_AGE.HasValue = true) Then
                command.Parameters(2).Value = CType(CLIENT_AGE.Value,Decimal)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DOB Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(CLIENT_DOB,String)
            End If
            If (CLIENT_BROUGHT_BY Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(CLIENT_BROUGHT_BY,String)
            End If
            If (CLIENT_REFERED_BY Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(CLIENT_REFERED_BY,String)
            End If
            If (CLIENT_SIBLING.HasValue = true) Then
                command.Parameters(6).Value = CType(CLIENT_SIBLING.Value,Decimal)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_BROTHER.HasValue = true) Then
                command.Parameters(7).Value = CType(CLIENT_BROTHER.Value,Decimal)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SISTER.HasValue = true) Then
                command.Parameters(8).Value = CType(CLIENT_SISTER.Value,Decimal)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DATE_SEEN.HasValue = true) Then
                command.Parameters(9).Value = CType(CLIENT_DATE_SEEN.Value,Date)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SCHOOL_GOING Is Nothing) Then
                command.Parameters(10).Value = Global.System.DBNull.Value
            Else
                command.Parameters(10).Value = CType(CLIENT_SCHOOL_GOING,String)
            End If
            If (CLIENT_LEVE_OF_EDU Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(CLIENT_LEVE_OF_EDU,String)
            End If
            If (CLIENT_FATHER Is Nothing) Then
                command.Parameters(12).Value = Global.System.DBNull.Value
            Else
                command.Parameters(12).Value = CType(CLIENT_FATHER,String)
            End If
            If (CLIENT_FATHER_EDU Is Nothing) Then
                command.Parameters(13).Value = Global.System.DBNull.Value
            Else
                command.Parameters(13).Value = CType(CLIENT_FATHER_EDU,String)
            End If
            If (CLIENT_FATHER_POS Is Nothing) Then
                command.Parameters(14).Value = Global.System.DBNull.Value
            Else
                command.Parameters(14).Value = CType(CLIENT_FATHER_POS,String)
            End If
            If (CLIENT_MOTHER Is Nothing) Then
                command.Parameters(15).Value = Global.System.DBNull.Value
            Else
                command.Parameters(15).Value = CType(CLIENT_MOTHER,String)
            End If
            If (CLIENT_MOTHER_EDU Is Nothing) Then
                command.Parameters(16).Value = Global.System.DBNull.Value
            Else
                command.Parameters(16).Value = CType(CLIENT_MOTHER_EDU,String)
            End If
            If (CLIENT_MOTHER_POS Is Nothing) Then
                command.Parameters(17).Value = Global.System.DBNull.Value
            Else
                command.Parameters(17).Value = CType(CLIENT_MOTHER_POS,String)
            End If
            If (CLIENT_HOUSE_NO Is Nothing) Then
                command.Parameters(18).Value = Global.System.DBNull.Value
            Else
                command.Parameters(18).Value = CType(CLIENT_HOUSE_NO,String)
            End If
            If (CLIENT_STREET_NO Is Nothing) Then
                command.Parameters(19).Value = Global.System.DBNull.Value
            Else
                command.Parameters(19).Value = CType(CLIENT_STREET_NO,String)
            End If
            If (CLIENT_VILLAGE Is Nothing) Then
                command.Parameters(20).Value = Global.System.DBNull.Value
            Else
                command.Parameters(20).Value = CType(CLIENT_VILLAGE,String)
            End If
            If (CLIENT_COMMUNE Is Nothing) Then
                command.Parameters(21).Value = Global.System.DBNull.Value
            Else
                command.Parameters(21).Value = CType(CLIENT_COMMUNE,String)
            End If
            If (CLIENT_DISTICT Is Nothing) Then
                command.Parameters(22).Value = Global.System.DBNull.Value
            Else
                command.Parameters(22).Value = CType(CLIENT_DISTICT,String)
            End If
            If (CLIENT_CITY Is Nothing) Then
                command.Parameters(23).Value = Global.System.DBNull.Value
            Else
                command.Parameters(23).Value = CType(CLIENT_CITY,String)
            End If
            If (CLIENT_PHONE Is Nothing) Then
                command.Parameters(24).Value = Global.System.DBNull.Value
            Else
                command.Parameters(24).Value = CType(CLIENT_PHONE,String)
            End If
            If (CLIENT_CONSULTATION_PURPOSE Is Nothing) Then
                command.Parameters(25).Value = Global.System.DBNull.Value
            Else
                command.Parameters(25).Value = CType(CLIENT_CONSULTATION_PURPOSE,String)
            End If
            If (CLIENT_IMP_NEUROPSY.HasValue = true) Then
                command.Parameters(26).Value = CType(CLIENT_IMP_NEUROPSY.Value,Boolean)
            Else
                command.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_IMP_DEV.HasValue = true) Then
                command.Parameters(27).Value = CType(CLIENT_IMP_DEV.Value,Boolean)
            Else
                command.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_PSYCHO.HasValue = true) Then
                command.Parameters(28).Value = CType(CLIENT_PSYCHO.Value,Boolean)
            Else
                command.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SUBTYPE Is Nothing) Then
                command.Parameters(29).Value = Global.System.DBNull.Value
            Else
                command.Parameters(29).Value = CType(CLIENT_SUBTYPE,String)
            End If
            If (CLIENT_REASON_FOR_NOT_REG Is Nothing) Then
                command.Parameters(30).Value = Global.System.DBNull.Value
            Else
                command.Parameters(30).Value = CType(CLIENT_REASON_FOR_NOT_REG,String)
            End If
            If (CLIENT_ADV_REG_DATE Is Nothing) Then
                command.Parameters(31).Value = Global.System.DBNull.Value
            Else
                command.Parameters(31).Value = CType(CLIENT_ADV_REG_DATE,String)
            End If
            If (CLIENT_ADV_REFERENCE Is Nothing) Then
                command.Parameters(32).Value = Global.System.DBNull.Value
            Else
                command.Parameters(32).Value = CType(CLIENT_ADV_REFERENCE,String)
            End If
            If (YEARS.HasValue = true) Then
                command.Parameters(33).Value = CType(YEARS.Value,Decimal)
            Else
                command.Parameters(33).Value = Global.System.DBNull.Value
            End If
            command.Parameters(34).Value = CType(Original_CLIENT_NO,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CCAMH_CLIENTSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CCAMH_CLIENTS"
            tableMapping.ColumnMappings.Add("CLIENT_ID", "CLIENT_ID")
            tableMapping.ColumnMappings.Add("CLIENT_NO", "CLIENT_NO")
            tableMapping.ColumnMappings.Add("CLIENT_NAME", "CLIENT_NAME")
            tableMapping.ColumnMappings.Add("CLIENT_SEX", "CLIENT_SEX")
            tableMapping.ColumnMappings.Add("CLIENT_AGE", "CLIENT_AGE")
            tableMapping.ColumnMappings.Add("CLIENT_DOB", "CLIENT_DOB")
            tableMapping.ColumnMappings.Add("CLIENT_BROUGHT_BY", "CLIENT_BROUGHT_BY")
            tableMapping.ColumnMappings.Add("CLIENT_REFERED_BY", "CLIENT_REFERED_BY")
            tableMapping.ColumnMappings.Add("CLIENT_SIBLING", "CLIENT_SIBLING")
            tableMapping.ColumnMappings.Add("CLIENT_BROTHER", "CLIENT_BROTHER")
            tableMapping.ColumnMappings.Add("CLIENT_SISTER", "CLIENT_SISTER")
            tableMapping.ColumnMappings.Add("CLIENT_DATE_SEEN", "CLIENT_DATE_SEEN")
            tableMapping.ColumnMappings.Add("CLIENT_SCHOOL_GOING", "CLIENT_SCHOOL_GOING")
            tableMapping.ColumnMappings.Add("CLIENT_LEVE_OF_EDU", "CLIENT_LEVE_OF_EDU")
            tableMapping.ColumnMappings.Add("CLIENT_FATHER", "CLIENT_FATHER")
            tableMapping.ColumnMappings.Add("CLIENT_FATHER_EDU", "CLIENT_FATHER_EDU")
            tableMapping.ColumnMappings.Add("CLIENT_FATHER_POS", "CLIENT_FATHER_POS")
            tableMapping.ColumnMappings.Add("CLIENT_MOTHER", "CLIENT_MOTHER")
            tableMapping.ColumnMappings.Add("CLIENT_MOTHER_EDU", "CLIENT_MOTHER_EDU")
            tableMapping.ColumnMappings.Add("CLIENT_MOTHER_POS", "CLIENT_MOTHER_POS")
            tableMapping.ColumnMappings.Add("CLIENT_HOUSE_NO", "CLIENT_HOUSE_NO")
            tableMapping.ColumnMappings.Add("CLIENT_STREET_NO", "CLIENT_STREET_NO")
            tableMapping.ColumnMappings.Add("CLIENT_VILLAGE", "CLIENT_VILLAGE")
            tableMapping.ColumnMappings.Add("CLIENT_COMMUNE", "CLIENT_COMMUNE")
            tableMapping.ColumnMappings.Add("CLIENT_DISTICT", "CLIENT_DISTICT")
            tableMapping.ColumnMappings.Add("CLIENT_CITY", "CLIENT_CITY")
            tableMapping.ColumnMappings.Add("CLIENT_PHONE", "CLIENT_PHONE")
            tableMapping.ColumnMappings.Add("CLIENT_CONSULTATION_PURPOSE", "CLIENT_CONSULTATION_PURPOSE")
            tableMapping.ColumnMappings.Add("CLIENT_IMP_NEUROPSY", "CLIENT_IMP_NEUROPSY")
            tableMapping.ColumnMappings.Add("CLIENT_IMP_DEV", "CLIENT_IMP_DEV")
            tableMapping.ColumnMappings.Add("CLIENT_PSYCHO", "CLIENT_PSYCHO")
            tableMapping.ColumnMappings.Add("CLIENT_SUBTYPE", "CLIENT_SUBTYPE")
            tableMapping.ColumnMappings.Add("CLIENT_REASON_FOR_NOT_REG", "CLIENT_REASON_FOR_NOT_REG")
            tableMapping.ColumnMappings.Add("CLIENT_ADV_REFERENCE", "CLIENT_ADV_REFERENCE")
            tableMapping.ColumnMappings.Add("YEARS", "YEARS")
            tableMapping.ColumnMappings.Add("CLIENT_DATE_REG", "CLIENT_DATE_REG")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CCAMH_CLIENTS] WHERE (([CLIENT_ID] = @Original_CLIENT_ID) AND ([CLIE"& _ 
                "NT_NO] = @Original_CLIENT_NO) AND ((@IsNull_CLIENT_NAME = 1 AND [CLIENT_NAME] IS"& _ 
                " NULL) OR ([CLIENT_NAME] = @Original_CLIENT_NAME)) AND ((@IsNull_CLIENT_SEX = 1 "& _ 
                "AND [CLIENT_SEX] IS NULL) OR ([CLIENT_SEX] = @Original_CLIENT_SEX)) AND ((@IsNul"& _ 
                "l_CLIENT_AGE = 1 AND [CLIENT_AGE] IS NULL) OR ([CLIENT_AGE] = @Original_CLIENT_A"& _ 
                "GE)) AND ((@IsNull_CLIENT_DOB = 1 AND [CLIENT_DOB] IS NULL) OR ([CLIENT_DOB] = @"& _ 
                "Original_CLIENT_DOB)) AND ((@IsNull_CLIENT_BROUGHT_BY = 1 AND [CLIENT_BROUGHT_BY"& _ 
                "] IS NULL) OR ([CLIENT_BROUGHT_BY] = @Original_CLIENT_BROUGHT_BY)) AND ((@IsNull"& _ 
                "_CLIENT_REFERED_BY = 1 AND [CLIENT_REFERED_BY] IS NULL) OR ([CLIENT_REFERED_BY] "& _ 
                "= @Original_CLIENT_REFERED_BY)) AND ((@IsNull_CLIENT_SIBLING = 1 AND [CLIENT_SIB"& _ 
                "LING] IS NULL) OR ([CLIENT_SIBLING] = @Original_CLIENT_SIBLING)) AND ((@IsNull_C"& _ 
                "LIENT_BROTHER = 1 AND [CLIENT_BROTHER] IS NULL) OR ([CLIENT_BROTHER] = @Original"& _ 
                "_CLIENT_BROTHER)) AND ((@IsNull_CLIENT_SISTER = 1 AND [CLIENT_SISTER] IS NULL) O"& _ 
                "R ([CLIENT_SISTER] = @Original_CLIENT_SISTER)) AND ((@IsNull_CLIENT_DATE_SEEN = "& _ 
                "1 AND [CLIENT_DATE_SEEN] IS NULL) OR ([CLIENT_DATE_SEEN] = @Original_CLIENT_DATE"& _ 
                "_SEEN)) AND ((@IsNull_CLIENT_SCHOOL_GOING = 1 AND [CLIENT_SCHOOL_GOING] IS NULL)"& _ 
                " OR ([CLIENT_SCHOOL_GOING] = @Original_CLIENT_SCHOOL_GOING)) AND ((@IsNull_CLIEN"& _ 
                "T_LEVE_OF_EDU = 1 AND [CLIENT_LEVE_OF_EDU] IS NULL) OR ([CLIENT_LEVE_OF_EDU] = @"& _ 
                "Original_CLIENT_LEVE_OF_EDU)) AND ((@IsNull_CLIENT_FATHER = 1 AND [CLIENT_FATHER"& _ 
                "] IS NULL) OR ([CLIENT_FATHER] = @Original_CLIENT_FATHER)) AND ((@IsNull_CLIENT_"& _ 
                "FATHER_EDU = 1 AND [CLIENT_FATHER_EDU] IS NULL) OR ([CLIENT_FATHER_EDU] = @Origi"& _ 
                "nal_CLIENT_FATHER_EDU)) AND ((@IsNull_CLIENT_FATHER_POS = 1 AND [CLIENT_FATHER_P"& _ 
                "OS] IS NULL) OR ([CLIENT_FATHER_POS] = @Original_CLIENT_FATHER_POS)) AND ((@IsNu"& _ 
                "ll_CLIENT_MOTHER = 1 AND [CLIENT_MOTHER] IS NULL) OR ([CLIENT_MOTHER] = @Origina"& _ 
                "l_CLIENT_MOTHER)) AND ((@IsNull_CLIENT_MOTHER_EDU = 1 AND [CLIENT_MOTHER_EDU] IS"& _ 
                " NULL) OR ([CLIENT_MOTHER_EDU] = @Original_CLIENT_MOTHER_EDU)) AND ((@IsNull_CLI"& _ 
                "ENT_MOTHER_POS = 1 AND [CLIENT_MOTHER_POS] IS NULL) OR ([CLIENT_MOTHER_POS] = @O"& _ 
                "riginal_CLIENT_MOTHER_POS)) AND ((@IsNull_CLIENT_HOUSE_NO = 1 AND [CLIENT_HOUSE_"& _ 
                "NO] IS NULL) OR ([CLIENT_HOUSE_NO] = @Original_CLIENT_HOUSE_NO)) AND ((@IsNull_C"& _ 
                "LIENT_STREET_NO = 1 AND [CLIENT_STREET_NO] IS NULL) OR ([CLIENT_STREET_NO] = @Or"& _ 
                "iginal_CLIENT_STREET_NO)) AND ((@IsNull_CLIENT_VILLAGE = 1 AND [CLIENT_VILLAGE] "& _ 
                "IS NULL) OR ([CLIENT_VILLAGE] = @Original_CLIENT_VILLAGE)) AND ((@IsNull_CLIENT_"& _ 
                "COMMUNE = 1 AND [CLIENT_COMMUNE] IS NULL) OR ([CLIENT_COMMUNE] = @Original_CLIEN"& _ 
                "T_COMMUNE)) AND ((@IsNull_CLIENT_DISTICT = 1 AND [CLIENT_DISTICT] IS NULL) OR (["& _ 
                "CLIENT_DISTICT] = @Original_CLIENT_DISTICT)) AND ((@IsNull_CLIENT_CITY = 1 AND ["& _ 
                "CLIENT_CITY] IS NULL) OR ([CLIENT_CITY] = @Original_CLIENT_CITY)) AND ((@IsNull_"& _ 
                "CLIENT_PHONE = 1 AND [CLIENT_PHONE] IS NULL) OR ([CLIENT_PHONE] = @Original_CLIE"& _ 
                "NT_PHONE)) AND ((@IsNull_CLIENT_CONSULTATION_PURPOSE = 1 AND [CLIENT_CONSULTATIO"& _ 
                "N_PURPOSE] IS NULL) OR ([CLIENT_CONSULTATION_PURPOSE] = @Original_CLIENT_CONSULT"& _ 
                "ATION_PURPOSE)) AND ((@IsNull_CLIENT_IMP_NEUROPSY = 1 AND [CLIENT_IMP_NEUROPSY] "& _ 
                "IS NULL) OR ([CLIENT_IMP_NEUROPSY] = @Original_CLIENT_IMP_NEUROPSY)) AND ((@IsNu"& _ 
                "ll_CLIENT_IMP_DEV = 1 AND [CLIENT_IMP_DEV] IS NULL) OR ([CLIENT_IMP_DEV] = @Orig"& _ 
                "inal_CLIENT_IMP_DEV)) AND ((@IsNull_CLIENT_PSYCHO = 1 AND [CLIENT_PSYCHO] IS NUL"& _ 
                "L) OR ([CLIENT_PSYCHO] = @Original_CLIENT_PSYCHO)) AND ((@IsNull_CLIENT_SUBTYPE "& _ 
                "= 1 AND [CLIENT_SUBTYPE] IS NULL) OR ([CLIENT_SUBTYPE] = @Original_CLIENT_SUBTYP"& _ 
                "E)) AND ((@IsNull_CLIENT_REASON_FOR_NOT_REG = 1 AND [CLIENT_REASON_FOR_NOT_REG] "& _ 
                "IS NULL) OR ([CLIENT_REASON_FOR_NOT_REG] = @Original_CLIENT_REASON_FOR_NOT_REG))"& _ 
                " AND ((@IsNull_CLIENT_ADV_REFERENCE = 1 AND [CLIENT_ADV_REFERENCE] IS NULL) OR ("& _ 
                "[CLIENT_ADV_REFERENCE] = @Original_CLIENT_ADV_REFERENCE)) AND ((@IsNull_YEARS = "& _ 
                "1 AND [YEARS] IS NULL) OR ([YEARS] = @Original_YEARS)) AND ((@IsNull_CLIENT_DATE"& _ 
                "_REG = 1 AND [CLIENT_DATE_REG] IS NULL) OR ([CLIENT_DATE_REG] = @Original_CLIENT"& _ 
                "_DATE_REG)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_AGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_AGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_AGE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_AGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_DOB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DOB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_DOB", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DOB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_BROUGHT_BY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_BROUGHT_BY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_BROUGHT_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_BROUGHT_BY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_REFERED_BY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFERED_BY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_REFERED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFERED_BY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SIBLING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SIBLING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SIBLING", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SIBLING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_BROTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_BROTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_BROTHER", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_BROTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SISTER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SISTER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SISTER", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SISTER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_DATE_SEEN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_SEEN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_DATE_SEEN", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_SEEN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SCHOOL_GOING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SCHOOL_GOING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SCHOOL_GOING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SCHOOL_GOING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_LEVE_OF_EDU", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_LEVE_OF_EDU", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_LEVE_OF_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_LEVE_OF_EDU", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_FATHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_FATHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_FATHER_EDU", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_EDU", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_FATHER_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_EDU", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_FATHER_POS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_POS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_FATHER_POS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_POS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_MOTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_MOTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_MOTHER_EDU", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_EDU", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_MOTHER_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_EDU", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_MOTHER_POS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_POS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_MOTHER_POS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_POS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_HOUSE_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_HOUSE_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_HOUSE_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_HOUSE_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_STREET_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_STREET_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_STREET_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_STREET_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_VILLAGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_VILLAGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_VILLAGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_VILLAGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_COMMUNE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMMUNE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_COMMUNE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMMUNE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_DISTICT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DISTICT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_DISTICT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DISTICT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CITY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CITY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CITY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_PHONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PHONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_PHONE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PHONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CONSULTATION_PURPOSE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CONSULTATION_PURPOSE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CONSULTATION_PURPOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CONSULTATION_PURPOSE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_IMP_NEUROPSY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_NEUROPSY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_IMP_NEUROPSY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_NEUROPSY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_IMP_DEV", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_DEV", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_IMP_DEV", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_DEV", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_PSYCHO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_PSYCHO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SUBTYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SUBTYPE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SUBTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SUBTYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_REASON_FOR_NOT_REG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REASON_FOR_NOT_REG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_REASON_FOR_NOT_REG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REASON_FOR_NOT_REG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_ADV_REFERENCE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REFERENCE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_ADV_REFERENCE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REFERENCE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_YEARS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YEARS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_YEARS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "YEARS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_DATE_REG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_REG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_DATE_REG", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_REG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CCAMH_CLIENTS] ([CLIENT_NO], [CLIENT_NAME], [CLIENT_SEX], [CLIENT_AG"& _ 
                "E], [CLIENT_DOB], [CLIENT_BROUGHT_BY], [CLIENT_REFERED_BY], [CLIENT_SIBLING], [C"& _ 
                "LIENT_BROTHER], [CLIENT_SISTER], [CLIENT_DATE_SEEN], [CLIENT_SCHOOL_GOING], [CLI"& _ 
                "ENT_LEVE_OF_EDU], [CLIENT_FATHER], [CLIENT_FATHER_EDU], [CLIENT_FATHER_POS], [CL"& _ 
                "IENT_MOTHER], [CLIENT_MOTHER_EDU], [CLIENT_MOTHER_POS], [CLIENT_HOUSE_NO], [CLIE"& _ 
                "NT_STREET_NO], [CLIENT_VILLAGE], [CLIENT_COMMUNE], [CLIENT_DISTICT], [CLIENT_CIT"& _ 
                "Y], [CLIENT_PHONE], [CLIENT_CONSULTATION_PURPOSE], [CLIENT_IMP_NEUROPSY], [CLIEN"& _ 
                "T_IMP_DEV], [CLIENT_PSYCHO], [CLIENT_SUBTYPE], [CLIENT_REASON_FOR_NOT_REG], [CLI"& _ 
                "ENT_ADV_REFERENCE], [YEARS], [CLIENT_DATE_REG]) VALUES (@CLIENT_NO, @CLIENT_NAME"& _ 
                ", @CLIENT_SEX, @CLIENT_AGE, @CLIENT_DOB, @CLIENT_BROUGHT_BY, @CLIENT_REFERED_BY,"& _ 
                " @CLIENT_SIBLING, @CLIENT_BROTHER, @CLIENT_SISTER, @CLIENT_DATE_SEEN, @CLIENT_SC"& _ 
                "HOOL_GOING, @CLIENT_LEVE_OF_EDU, @CLIENT_FATHER, @CLIENT_FATHER_EDU, @CLIENT_FAT"& _ 
                "HER_POS, @CLIENT_MOTHER, @CLIENT_MOTHER_EDU, @CLIENT_MOTHER_POS, @CLIENT_HOUSE_N"& _ 
                "O, @CLIENT_STREET_NO, @CLIENT_VILLAGE, @CLIENT_COMMUNE, @CLIENT_DISTICT, @CLIENT"& _ 
                "_CITY, @CLIENT_PHONE, @CLIENT_CONSULTATION_PURPOSE, @CLIENT_IMP_NEUROPSY, @CLIEN"& _ 
                "T_IMP_DEV, @CLIENT_PSYCHO, @CLIENT_SUBTYPE, @CLIENT_REASON_FOR_NOT_REG, @CLIENT_"& _ 
                "ADV_REFERENCE, @YEARS, @CLIENT_DATE_REG);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CLIENT_ID, CLIENT_NO, CLIENT_N"& _ 
                "AME, CLIENT_SEX, CLIENT_AGE, CLIENT_DOB, CLIENT_BROUGHT_BY, CLIENT_REFERED_BY, C"& _ 
                "LIENT_SIBLING, CLIENT_BROTHER, CLIENT_SISTER, CLIENT_DATE_SEEN, CLIENT_SCHOOL_GO"& _ 
                "ING, CLIENT_LEVE_OF_EDU, CLIENT_FATHER, CLIENT_FATHER_EDU, CLIENT_FATHER_POS, CL"& _ 
                "IENT_MOTHER, CLIENT_MOTHER_EDU, CLIENT_MOTHER_POS, CLIENT_HOUSE_NO, CLIENT_STREE"& _ 
                "T_NO, CLIENT_VILLAGE, CLIENT_COMMUNE, CLIENT_DISTICT, CLIENT_CITY, CLIENT_PHONE,"& _ 
                " CLIENT_CONSULTATION_PURPOSE, CLIENT_IMP_NEUROPSY, CLIENT_IMP_DEV, CLIENT_PSYCHO"& _ 
                ", CLIENT_SUBTYPE, CLIENT_REASON_FOR_NOT_REG, CLIENT_ADV_REFERENCE, YEARS, CLIENT"& _ 
                "_DATE_REG FROM CCAMH_CLIENTS WHERE (CLIENT_NO = @CLIENT_NO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_AGE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DOB", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DOB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_BROUGHT_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_BROUGHT_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REFERED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFERED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SIBLING", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SIBLING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_BROTHER", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_BROTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SISTER", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SISTER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DATE_SEEN", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_SEEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SCHOOL_GOING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SCHOOL_GOING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_LEVE_OF_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_LEVE_OF_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER_POS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_POS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER_POS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_POS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_HOUSE_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_HOUSE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_STREET_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_STREET_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_VILLAGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_VILLAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_COMMUNE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMMUNE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DISTICT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DISTICT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CITY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PHONE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PHONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CONSULTATION_PURPOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CONSULTATION_PURPOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_IMP_NEUROPSY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_NEUROPSY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_IMP_DEV", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_DEV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PSYCHO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SUBTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SUBTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REASON_FOR_NOT_REG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REASON_FOR_NOT_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADV_REFERENCE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REFERENCE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YEARS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "YEARS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DATE_REG", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CCAMH_CLIENTS] SET [CLIENT_NO] = @CLIENT_NO, [CLIENT_NAME] = @CLIENT_NAME"& _ 
                ", [CLIENT_SEX] = @CLIENT_SEX, [CLIENT_AGE] = @CLIENT_AGE, [CLIENT_DOB] = @CLIENT"& _ 
                "_DOB, [CLIENT_BROUGHT_BY] = @CLIENT_BROUGHT_BY, [CLIENT_REFERED_BY] = @CLIENT_RE"& _ 
                "FERED_BY, [CLIENT_SIBLING] = @CLIENT_SIBLING, [CLIENT_BROTHER] = @CLIENT_BROTHER"& _ 
                ", [CLIENT_SISTER] = @CLIENT_SISTER, [CLIENT_DATE_SEEN] = @CLIENT_DATE_SEEN, [CLI"& _ 
                "ENT_SCHOOL_GOING] = @CLIENT_SCHOOL_GOING, [CLIENT_LEVE_OF_EDU] = @CLIENT_LEVE_OF"& _ 
                "_EDU, [CLIENT_FATHER] = @CLIENT_FATHER, [CLIENT_FATHER_EDU] = @CLIENT_FATHER_EDU"& _ 
                ", [CLIENT_FATHER_POS] = @CLIENT_FATHER_POS, [CLIENT_MOTHER] = @CLIENT_MOTHER, [C"& _ 
                "LIENT_MOTHER_EDU] = @CLIENT_MOTHER_EDU, [CLIENT_MOTHER_POS] = @CLIENT_MOTHER_POS"& _ 
                ", [CLIENT_HOUSE_NO] = @CLIENT_HOUSE_NO, [CLIENT_STREET_NO] = @CLIENT_STREET_NO, "& _ 
                "[CLIENT_VILLAGE] = @CLIENT_VILLAGE, [CLIENT_COMMUNE] = @CLIENT_COMMUNE, [CLIENT_"& _ 
                "DISTICT] = @CLIENT_DISTICT, [CLIENT_CITY] = @CLIENT_CITY, [CLIENT_PHONE] = @CLIE"& _ 
                "NT_PHONE, [CLIENT_CONSULTATION_PURPOSE] = @CLIENT_CONSULTATION_PURPOSE, [CLIENT_"& _ 
                "IMP_NEUROPSY] = @CLIENT_IMP_NEUROPSY, [CLIENT_IMP_DEV] = @CLIENT_IMP_DEV, [CLIEN"& _ 
                "T_PSYCHO] = @CLIENT_PSYCHO, [CLIENT_SUBTYPE] = @CLIENT_SUBTYPE, [CLIENT_REASON_F"& _ 
                "OR_NOT_REG] = @CLIENT_REASON_FOR_NOT_REG, [CLIENT_ADV_REFERENCE] = @CLIENT_ADV_R"& _ 
                "EFERENCE, [YEARS] = @YEARS, [CLIENT_DATE_REG] = @CLIENT_DATE_REG WHERE (([CLIENT"& _ 
                "_ID] = @Original_CLIENT_ID) AND ([CLIENT_NO] = @Original_CLIENT_NO) AND ((@IsNul"& _ 
                "l_CLIENT_NAME = 1 AND [CLIENT_NAME] IS NULL) OR ([CLIENT_NAME] = @Original_CLIEN"& _ 
                "T_NAME)) AND ((@IsNull_CLIENT_SEX = 1 AND [CLIENT_SEX] IS NULL) OR ([CLIENT_SEX]"& _ 
                " = @Original_CLIENT_SEX)) AND ((@IsNull_CLIENT_AGE = 1 AND [CLIENT_AGE] IS NULL)"& _ 
                " OR ([CLIENT_AGE] = @Original_CLIENT_AGE)) AND ((@IsNull_CLIENT_DOB = 1 AND [CLI"& _ 
                "ENT_DOB] IS NULL) OR ([CLIENT_DOB] = @Original_CLIENT_DOB)) AND ((@IsNull_CLIENT"& _ 
                "_BROUGHT_BY = 1 AND [CLIENT_BROUGHT_BY] IS NULL) OR ([CLIENT_BROUGHT_BY] = @Orig"& _ 
                "inal_CLIENT_BROUGHT_BY)) AND ((@IsNull_CLIENT_REFERED_BY = 1 AND [CLIENT_REFERED"& _ 
                "_BY] IS NULL) OR ([CLIENT_REFERED_BY] = @Original_CLIENT_REFERED_BY)) AND ((@IsN"& _ 
                "ull_CLIENT_SIBLING = 1 AND [CLIENT_SIBLING] IS NULL) OR ([CLIENT_SIBLING] = @Ori"& _ 
                "ginal_CLIENT_SIBLING)) AND ((@IsNull_CLIENT_BROTHER = 1 AND [CLIENT_BROTHER] IS "& _ 
                "NULL) OR ([CLIENT_BROTHER] = @Original_CLIENT_BROTHER)) AND ((@IsNull_CLIENT_SIS"& _ 
                "TER = 1 AND [CLIENT_SISTER] IS NULL) OR ([CLIENT_SISTER] = @Original_CLIENT_SIST"& _ 
                "ER)) AND ((@IsNull_CLIENT_DATE_SEEN = 1 AND [CLIENT_DATE_SEEN] IS NULL) OR ([CLI"& _ 
                "ENT_DATE_SEEN] = @Original_CLIENT_DATE_SEEN)) AND ((@IsNull_CLIENT_SCHOOL_GOING "& _ 
                "= 1 AND [CLIENT_SCHOOL_GOING] IS NULL) OR ([CLIENT_SCHOOL_GOING] = @Original_CLI"& _ 
                "ENT_SCHOOL_GOING)) AND ((@IsNull_CLIENT_LEVE_OF_EDU = 1 AND [CLIENT_LEVE_OF_EDU]"& _ 
                " IS NULL) OR ([CLIENT_LEVE_OF_EDU] = @Original_CLIENT_LEVE_OF_EDU)) AND ((@IsNul"& _ 
                "l_CLIENT_FATHER = 1 AND [CLIENT_FATHER] IS NULL) OR ([CLIENT_FATHER] = @Original"& _ 
                "_CLIENT_FATHER)) AND ((@IsNull_CLIENT_FATHER_EDU = 1 AND [CLIENT_FATHER_EDU] IS "& _ 
                "NULL) OR ([CLIENT_FATHER_EDU] = @Original_CLIENT_FATHER_EDU)) AND ((@IsNull_CLIE"& _ 
                "NT_FATHER_POS = 1 AND [CLIENT_FATHER_POS] IS NULL) OR ([CLIENT_FATHER_POS] = @Or"& _ 
                "iginal_CLIENT_FATHER_POS)) AND ((@IsNull_CLIENT_MOTHER = 1 AND [CLIENT_MOTHER] I"& _ 
                "S NULL) OR ([CLIENT_MOTHER] = @Original_CLIENT_MOTHER)) AND ((@IsNull_CLIENT_MOT"& _ 
                "HER_EDU = 1 AND [CLIENT_MOTHER_EDU] IS NULL) OR ([CLIENT_MOTHER_EDU] = @Original"& _ 
                "_CLIENT_MOTHER_EDU)) AND ((@IsNull_CLIENT_MOTHER_POS = 1 AND [CLIENT_MOTHER_POS]"& _ 
                " IS NULL) OR ([CLIENT_MOTHER_POS] = @Original_CLIENT_MOTHER_POS)) AND ((@IsNull_"& _ 
                "CLIENT_HOUSE_NO = 1 AND [CLIENT_HOUSE_NO] IS NULL) OR ([CLIENT_HOUSE_NO] = @Orig"& _ 
                "inal_CLIENT_HOUSE_NO)) AND ((@IsNull_CLIENT_STREET_NO = 1 AND [CLIENT_STREET_NO]"& _ 
                " IS NULL) OR ([CLIENT_STREET_NO] = @Original_CLIENT_STREET_NO)) AND ((@IsNull_CL"& _ 
                "IENT_VILLAGE = 1 AND [CLIENT_VILLAGE] IS NULL) OR ([CLIENT_VILLAGE] = @Original_"& _ 
                "CLIENT_VILLAGE)) AND ((@IsNull_CLIENT_COMMUNE = 1 AND [CLIENT_COMMUNE] IS NULL) "& _ 
                "OR ([CLIENT_COMMUNE] = @Original_CLIENT_COMMUNE)) AND ((@IsNull_CLIENT_DISTICT ="& _ 
                " 1 AND [CLIENT_DISTICT] IS NULL) OR ([CLIENT_DISTICT] = @Original_CLIENT_DISTICT"& _ 
                ")) AND ((@IsNull_CLIENT_CITY = 1 AND [CLIENT_CITY] IS NULL) OR ([CLIENT_CITY] = "& _ 
                "@Original_CLIENT_CITY)) AND ((@IsNull_CLIENT_PHONE = 1 AND [CLIENT_PHONE] IS NUL"& _ 
                "L) OR ([CLIENT_PHONE] = @Original_CLIENT_PHONE)) AND ((@IsNull_CLIENT_CONSULTATI"& _ 
                "ON_PURPOSE = 1 AND [CLIENT_CONSULTATION_PURPOSE] IS NULL) OR ([CLIENT_CONSULTATI"& _ 
                "ON_PURPOSE] = @Original_CLIENT_CONSULTATION_PURPOSE)) AND ((@IsNull_CLIENT_IMP_N"& _ 
                "EUROPSY = 1 AND [CLIENT_IMP_NEUROPSY] IS NULL) OR ([CLIENT_IMP_NEUROPSY] = @Orig"& _ 
                "inal_CLIENT_IMP_NEUROPSY)) AND ((@IsNull_CLIENT_IMP_DEV = 1 AND [CLIENT_IMP_DEV]"& _ 
                " IS NULL) OR ([CLIENT_IMP_DEV] = @Original_CLIENT_IMP_DEV)) AND ((@IsNull_CLIENT"& _ 
                "_PSYCHO = 1 AND [CLIENT_PSYCHO] IS NULL) OR ([CLIENT_PSYCHO] = @Original_CLIENT_"& _ 
                "PSYCHO)) AND ((@IsNull_CLIENT_SUBTYPE = 1 AND [CLIENT_SUBTYPE] IS NULL) OR ([CLI"& _ 
                "ENT_SUBTYPE] = @Original_CLIENT_SUBTYPE)) AND ((@IsNull_CLIENT_REASON_FOR_NOT_RE"& _ 
                "G = 1 AND [CLIENT_REASON_FOR_NOT_REG] IS NULL) OR ([CLIENT_REASON_FOR_NOT_REG] ="& _ 
                " @Original_CLIENT_REASON_FOR_NOT_REG)) AND ((@IsNull_CLIENT_ADV_REFERENCE = 1 AN"& _ 
                "D [CLIENT_ADV_REFERENCE] IS NULL) OR ([CLIENT_ADV_REFERENCE] = @Original_CLIENT_"& _ 
                "ADV_REFERENCE)) AND ((@IsNull_YEARS = 1 AND [YEARS] IS NULL) OR ([YEARS] = @Orig"& _ 
                "inal_YEARS)) AND ((@IsNull_CLIENT_DATE_REG = 1 AND [CLIENT_DATE_REG] IS NULL) OR"& _ 
                " ([CLIENT_DATE_REG] = @Original_CLIENT_DATE_REG)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CLIENT_ID, CLIENT_NO"& _ 
                ", CLIENT_NAME, CLIENT_SEX, CLIENT_AGE, CLIENT_DOB, CLIENT_BROUGHT_BY, CLIENT_REF"& _ 
                "ERED_BY, CLIENT_SIBLING, CLIENT_BROTHER, CLIENT_SISTER, CLIENT_DATE_SEEN, CLIENT"& _ 
                "_SCHOOL_GOING, CLIENT_LEVE_OF_EDU, CLIENT_FATHER, CLIENT_FATHER_EDU, CLIENT_FATH"& _ 
                "ER_POS, CLIENT_MOTHER, CLIENT_MOTHER_EDU, CLIENT_MOTHER_POS, CLIENT_HOUSE_NO, CL"& _ 
                "IENT_STREET_NO, CLIENT_VILLAGE, CLIENT_COMMUNE, CLIENT_DISTICT, CLIENT_CITY, CLI"& _ 
                "ENT_PHONE, CLIENT_CONSULTATION_PURPOSE, CLIENT_IMP_NEUROPSY, CLIENT_IMP_DEV, CLI"& _ 
                "ENT_PSYCHO, CLIENT_SUBTYPE, CLIENT_REASON_FOR_NOT_REG, CLIENT_ADV_REFERENCE, YEA"& _ 
                "RS, CLIENT_DATE_REG FROM CCAMH_CLIENTS WHERE (CLIENT_NO = @CLIENT_NO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_AGE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DOB", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DOB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_BROUGHT_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_BROUGHT_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REFERED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFERED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SIBLING", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SIBLING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_BROTHER", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_BROTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SISTER", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SISTER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DATE_SEEN", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_SEEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SCHOOL_GOING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SCHOOL_GOING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_LEVE_OF_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_LEVE_OF_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER_POS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_POS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER_POS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_POS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_HOUSE_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_HOUSE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_STREET_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_STREET_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_VILLAGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_VILLAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_COMMUNE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMMUNE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DISTICT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DISTICT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CITY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PHONE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PHONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CONSULTATION_PURPOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CONSULTATION_PURPOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_IMP_NEUROPSY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_NEUROPSY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_IMP_DEV", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_DEV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PSYCHO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SUBTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SUBTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REASON_FOR_NOT_REG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REASON_FOR_NOT_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADV_REFERENCE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REFERENCE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YEARS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "YEARS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DATE_REG", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_AGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_AGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_AGE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_AGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_DOB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DOB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_DOB", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DOB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_BROUGHT_BY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_BROUGHT_BY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_BROUGHT_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_BROUGHT_BY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_REFERED_BY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFERED_BY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_REFERED_BY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFERED_BY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SIBLING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SIBLING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SIBLING", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SIBLING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_BROTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_BROTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_BROTHER", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_BROTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SISTER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SISTER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SISTER", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SISTER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_DATE_SEEN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_SEEN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_DATE_SEEN", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_SEEN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SCHOOL_GOING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SCHOOL_GOING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SCHOOL_GOING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SCHOOL_GOING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_LEVE_OF_EDU", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_LEVE_OF_EDU", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_LEVE_OF_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_LEVE_OF_EDU", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_FATHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_FATHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_FATHER_EDU", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_EDU", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_FATHER_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_EDU", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_FATHER_POS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_POS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_FATHER_POS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_POS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_MOTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_MOTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_MOTHER_EDU", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_EDU", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_MOTHER_EDU", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_EDU", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_MOTHER_POS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_POS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_MOTHER_POS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_POS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_HOUSE_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_HOUSE_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_HOUSE_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_HOUSE_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_STREET_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_STREET_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_STREET_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_STREET_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_VILLAGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_VILLAGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_VILLAGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_VILLAGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_COMMUNE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMMUNE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_COMMUNE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMMUNE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_DISTICT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DISTICT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_DISTICT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DISTICT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CITY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CITY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CITY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_PHONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PHONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_PHONE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PHONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CONSULTATION_PURPOSE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CONSULTATION_PURPOSE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CONSULTATION_PURPOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CONSULTATION_PURPOSE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_IMP_NEUROPSY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_NEUROPSY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_IMP_NEUROPSY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_NEUROPSY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_IMP_DEV", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_DEV", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_IMP_DEV", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_DEV", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_PSYCHO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_PSYCHO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SUBTYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SUBTYPE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SUBTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SUBTYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_REASON_FOR_NOT_REG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REASON_FOR_NOT_REG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_REASON_FOR_NOT_REG", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REASON_FOR_NOT_REG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_ADV_REFERENCE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REFERENCE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_ADV_REFERENCE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REFERENCE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_YEARS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YEARS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_YEARS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "YEARS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_DATE_REG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_REG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_DATE_REG", Global.System.Data.SqlDbType.NChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_REG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CLIENT_ID, CLIENT_NO, CLIENT_NAME, CLIENT_SEX, CLIENT_AGE, CLIENT_D"& _ 
                "OB, CLIENT_BROUGHT_BY, CLIENT_REFERED_BY, CLIENT_SIBLING, CLIENT_BROTHER, CLIENT"& _ 
                "_SISTER, CLIENT_DATE_SEEN, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENT_SCHOOL_GOING, CLIEN"& _ 
                "T_LEVE_OF_EDU, CLIENT_FATHER, CLIENT_FATHER_EDU, CLIENT_FATHER_POS, CLIENT_MOTHE"& _ 
                "R, CLIENT_MOTHER_EDU, CLIENT_MOTHER_POS, CLIENT_HOUSE_NO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "     CLIENT_STREET_NO, CLIENT_VILLAGE, CLIENT_COMMUNE, CLIENT_DISTICT, CLIENT_CI"& _ 
                "TY, CLIENT_PHONE, CLIENT_CONSULTATION_PURPOSE, CLIENT_IMP_NEUROPSY, CLIENT_IMP_D"& _ 
                "EV, CLIENT_PSYCHO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENT_SUBTYPE, CLIENT_REASON_FOR_"& _ 
                "NOT_REG, CLIENT_ADV_REFERENCE, YEARS, CLIENT_DATE_REG"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            CCAMH_CLI"& _ 
                "ENTS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        CLIENT_ID, CLIENT_NO, CLIENT_NAME, CLIENT_SEX, CLIENT_AGE, CLIENT_D"& _ 
                "OB, CLIENT_BROUGHT_BY, CLIENT_REFERED_BY, CLIENT_SIBLING, CLIENT_BROTHER, CLIENT"& _ 
                "_SISTER, CLIENT_DATE_SEEN, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENT_SCHOOL_GOING, CLIEN"& _ 
                "T_LEVE_OF_EDU, CLIENT_FATHER, CLIENT_FATHER_EDU, CLIENT_FATHER_POS, CLIENT_MOTHE"& _ 
                "R, CLIENT_MOTHER_EDU, CLIENT_MOTHER_POS, CLIENT_HOUSE_NO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "     CLIENT_STREET_NO, CLIENT_VILLAGE, CLIENT_COMMUNE, CLIENT_DISTICT, CLIENT_CI"& _ 
                "TY, CLIENT_PHONE, CLIENT_CONSULTATION_PURPOSE, CLIENT_IMP_NEUROPSY, CLIENT_IMP_D"& _ 
                "EV, CLIENT_PSYCHO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENT_SUBTYPE, CLIENT_REASON_FOR_"& _ 
                "NOT_REG, CLIENT_ADV_REFERENCE, YEARS, CLIENT_DATE_REG"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            CCAMH_CLI"& _ 
                "ENTS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE   CLIENT_NO = @CLIENT_NO"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "INSERT INTO [CCAMH_CLIENTS] ([CLIENT_NO], [CLIENT_NAME], [CLIENT_SEX], [CLIENT_AG"& _ 
                "E], [CLIENT_DOB], [CLIENT_BROUGHT_BY], [CLIENT_REFERED_BY], [CLIENT_SIBLING], [C"& _ 
                "LIENT_BROTHER], [CLIENT_SISTER], [CLIENT_DATE_SEEN], [CLIENT_SCHOOL_GOING], [CLI"& _ 
                "ENT_LEVE_OF_EDU], [CLIENT_FATHER], [CLIENT_FATHER_EDU], [CLIENT_FATHER_POS], [CL"& _ 
                "IENT_MOTHER], [CLIENT_MOTHER_EDU], [CLIENT_MOTHER_POS], [CLIENT_HOUSE_NO], [CLIE"& _ 
                "NT_STREET_NO], [CLIENT_VILLAGE], [CLIENT_COMMUNE], [CLIENT_DISTICT], [CLIENT_CIT"& _ 
                "Y], [CLIENT_PHONE], [CLIENT_CONSULTATION_PURPOSE], [CLIENT_IMP_NEUROPSY], [CLIEN"& _ 
                "T_IMP_DEV], [CLIENT_PSYCHO], [CLIENT_SUBTYPE], [CLIENT_REASON_FOR_NOT_REG], [CLI"& _ 
                "ENT_ADV_REFERENCE], [YEARS], [CLIENT_DATE_REG]) VALUES (@CLIENT_NO, @CLIENT_NAME"& _ 
                ", @CLIENT_SEX, @CLIENT_AGE, @CLIENT_DOB, @CLIENT_BROUGHT_BY, @CLIENT_REFERED_BY,"& _ 
                " @CLIENT_SIBLING, @CLIENT_BROTHER, @CLIENT_SISTER, @CLIENT_DATE_SEEN, @CLIENT_SC"& _ 
                "HOOL_GOING, @CLIENT_LEVE_OF_EDU, @CLIENT_FATHER, @CLIENT_FATHER_EDU, @CLIENT_FAT"& _ 
                "HER_POS, @CLIENT_MOTHER, @CLIENT_MOTHER_EDU, @CLIENT_MOTHER_POS, @CLIENT_HOUSE_N"& _ 
                "O, @CLIENT_STREET_NO, @CLIENT_VILLAGE, @CLIENT_COMMUNE, @CLIENT_DISTICT, @CLIENT"& _ 
                "_CITY, @CLIENT_PHONE, @CLIENT_CONSULTATION_PURPOSE, @CLIENT_IMP_NEUROPSY, @CLIEN"& _ 
                "T_IMP_DEV, @CLIENT_PSYCHO, @CLIENT_SUBTYPE, @CLIENT_REASON_FOR_NOT_REG, @CLIENT_"& _ 
                "ADV_REFERENCE, @YEARS, @CLIENT_DATE_REG)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SEX", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_AGE", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DOB", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DOB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_BROUGHT_BY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_BROUGHT_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REFERED_BY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFERED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SIBLING", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SIBLING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_BROTHER", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_BROTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SISTER", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SISTER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DATE_SEEN", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_SEEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SCHOOL_GOING", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SCHOOL_GOING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_LEVE_OF_EDU", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_LEVE_OF_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER_EDU", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER_POS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_POS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER_EDU", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER_POS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_POS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_HOUSE_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_HOUSE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_STREET_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_STREET_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_VILLAGE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_VILLAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_COMMUNE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMMUNE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DISTICT", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DISTICT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CITY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PHONE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PHONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CONSULTATION_PURPOSE", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CONSULTATION_PURPOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_IMP_NEUROPSY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_NEUROPSY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_IMP_DEV", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_DEV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PSYCHO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SUBTYPE", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SUBTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REASON_FOR_NOT_REG", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REASON_FOR_NOT_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADV_REFERENCE", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REFERENCE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YEARS", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "YEARS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DATE_REG", Global.System.Data.SqlDbType.NChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "UPDATE [CCAMH_CLIENTS] SET [CLIENT_NAME] = @CLIENT_NAME, [CLIENT_SEX] = @CLIENT_S"& _ 
                "EX, [CLIENT_AGE] = @CLIENT_AGE, [CLIENT_DOB] = @CLIENT_DOB, [CLIENT_BROUGHT_BY] "& _ 
                "= @CLIENT_BROUGHT_BY, [CLIENT_REFERED_BY] = @CLIENT_REFERED_BY, [CLIENT_SIBLING]"& _ 
                " = @CLIENT_SIBLING, [CLIENT_BROTHER] = @CLIENT_BROTHER, [CLIENT_SISTER] = @CLIEN"& _ 
                "T_SISTER, [CLIENT_DATE_SEEN] = @CLIENT_DATE_SEEN, [CLIENT_SCHOOL_GOING] = @CLIEN"& _ 
                "T_SCHOOL_GOING, [CLIENT_LEVE_OF_EDU] = @CLIENT_LEVE_OF_EDU, [CLIENT_FATHER] = @C"& _ 
                "LIENT_FATHER, [CLIENT_FATHER_EDU] = @CLIENT_FATHER_EDU, [CLIENT_FATHER_POS] = @C"& _ 
                "LIENT_FATHER_POS, [CLIENT_MOTHER] = @CLIENT_MOTHER, [CLIENT_MOTHER_EDU] = @CLIEN"& _ 
                "T_MOTHER_EDU, [CLIENT_MOTHER_POS] = @CLIENT_MOTHER_POS, [CLIENT_HOUSE_NO] = @CLI"& _ 
                "ENT_HOUSE_NO, [CLIENT_STREET_NO] = @CLIENT_STREET_NO, [CLIENT_VILLAGE] = @CLIENT"& _ 
                "_VILLAGE, [CLIENT_COMMUNE] = @CLIENT_COMMUNE, [CLIENT_DISTICT] = @CLIENT_DISTICT"& _ 
                ", [CLIENT_CITY] = @CLIENT_CITY, [CLIENT_PHONE] = @CLIENT_PHONE, [CLIENT_CONSULTA"& _ 
                "TION_PURPOSE] = @CLIENT_CONSULTATION_PURPOSE, [CLIENT_IMP_NEUROPSY] = @CLIENT_IM"& _ 
                "P_NEUROPSY, [CLIENT_IMP_DEV] = @CLIENT_IMP_DEV, [CLIENT_PSYCHO] = @CLIENT_PSYCHO"& _ 
                ", [CLIENT_SUBTYPE] = @CLIENT_SUBTYPE, [CLIENT_REASON_FOR_NOT_REG] = @CLIENT_REAS"& _ 
                "ON_FOR_NOT_REG, [CLIENT_ADV_REFERENCE] = @CLIENT_ADV_REFERENCE, [YEARS] = @YEARS"& _ 
                ", [CLIENT_DATE_REG] = @CLIENT_DATE_REG WHERE  ([CLIENT_NO] = @Original_CLIENT_NO"& _ 
                ")"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SEX", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_AGE", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DOB", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DOB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_BROUGHT_BY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_BROUGHT_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REFERED_BY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFERED_BY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SIBLING", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SIBLING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_BROTHER", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_BROTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SISTER", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SISTER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DATE_SEEN", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_SEEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SCHOOL_GOING", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SCHOOL_GOING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_LEVE_OF_EDU", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_LEVE_OF_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER_EDU", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_FATHER_POS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_FATHER_POS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER_EDU", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_EDU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_MOTHER_POS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_MOTHER_POS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_HOUSE_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_HOUSE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_STREET_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_STREET_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_VILLAGE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_VILLAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_COMMUNE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMMUNE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DISTICT", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DISTICT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CITY", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PHONE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PHONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CONSULTATION_PURPOSE", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CONSULTATION_PURPOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_IMP_NEUROPSY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_NEUROPSY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_IMP_DEV", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IMP_DEV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PSYCHO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SUBTYPE", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SUBTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REASON_FOR_NOT_REG", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REASON_FOR_NOT_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADV_REFERENCE", Global.System.Data.SqlDbType.NVarChar, 300, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADV_REFERENCE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YEARS", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "YEARS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DATE_REG", Global.System.Data.SqlDbType.NChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSCClientRegistration.CCAMH_CLIENTSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSCClientRegistration.CCAMH_CLIENTSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSCClientRegistration.CCAMH_CLIENTSDataTable = New DSCClientRegistration.CCAMH_CLIENTSDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSCClientRegistration.CCAMH_CLIENTSDataTable, ByVal CLIENT_NO As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function getClientByClient_NO(ByVal CLIENT_NO As Decimal) As DSCClientRegistration.CCAMH_CLIENTSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO,Decimal)
            Dim dataTable As DSCClientRegistration.CCAMH_CLIENTSDataTable = New DSCClientRegistration.CCAMH_CLIENTSDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSCClientRegistration.CCAMH_CLIENTSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSCClientRegistration) As Integer
            Return Me.Adapter.Update(dataSet, "CCAMH_CLIENTS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_CLIENT_ID As Decimal,  _
                    ByVal Original_CLIENT_NO As Decimal,  _
                    ByVal Original_CLIENT_NAME As String,  _
                    ByVal Original_CLIENT_SEX As String,  _
                    ByVal Original_CLIENT_AGE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_DOB As Global.System.Nullable(Of Date),  _
                    ByVal Original_CLIENT_BROUGHT_BY As String,  _
                    ByVal Original_CLIENT_REFERED_BY As String,  _
                    ByVal Original_CLIENT_SIBLING As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_BROTHER As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_SISTER As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_DATE_SEEN As Global.System.Nullable(Of Date),  _
                    ByVal Original_CLIENT_SCHOOL_GOING As String,  _
                    ByVal Original_CLIENT_LEVE_OF_EDU As String,  _
                    ByVal Original_CLIENT_FATHER As String,  _
                    ByVal Original_CLIENT_FATHER_EDU As String,  _
                    ByVal Original_CLIENT_FATHER_POS As String,  _
                    ByVal Original_CLIENT_MOTHER As String,  _
                    ByVal Original_CLIENT_MOTHER_EDU As String,  _
                    ByVal Original_CLIENT_MOTHER_POS As String,  _
                    ByVal Original_CLIENT_HOUSE_NO As String,  _
                    ByVal Original_CLIENT_STREET_NO As String,  _
                    ByVal Original_CLIENT_VILLAGE As String,  _
                    ByVal Original_CLIENT_COMMUNE As String,  _
                    ByVal Original_CLIENT_DISTICT As String,  _
                    ByVal Original_CLIENT_CITY As String,  _
                    ByVal Original_CLIENT_PHONE As String,  _
                    ByVal Original_CLIENT_CONSULTATION_PURPOSE As String,  _
                    ByVal Original_CLIENT_IMP_NEUROPSY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_IMP_DEV As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_PSYCHO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_SUBTYPE As String,  _
                    ByVal Original_CLIENT_REASON_FOR_NOT_REG As String,  _
                    ByVal Original_CLIENT_ADV_REFERENCE As String,  _
                    ByVal Original_YEARS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_DATE_REG As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CLIENT_ID,Decimal)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CLIENT_NO,Decimal)
            If (Original_CLIENT_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_CLIENT_NAME,String)
            End If
            If (Original_CLIENT_SEX Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_CLIENT_SEX,String)
            End If
            If (Original_CLIENT_AGE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_CLIENT_AGE.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_DOB.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_CLIENT_DOB.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_BROUGHT_BY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_CLIENT_BROUGHT_BY,String)
            End If
            If (Original_CLIENT_REFERED_BY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_CLIENT_REFERED_BY,String)
            End If
            If (Original_CLIENT_SIBLING.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_CLIENT_SIBLING.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_BROTHER.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_CLIENT_BROTHER.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_SISTER.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_CLIENT_SISTER.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_DATE_SEEN.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_CLIENT_DATE_SEEN.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_SCHOOL_GOING Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_CLIENT_SCHOOL_GOING,String)
            End If
            If (Original_CLIENT_LEVE_OF_EDU Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_CLIENT_LEVE_OF_EDU,String)
            End If
            If (Original_CLIENT_FATHER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_CLIENT_FATHER,String)
            End If
            If (Original_CLIENT_FATHER_EDU Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_CLIENT_FATHER_EDU,String)
            End If
            If (Original_CLIENT_FATHER_POS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_CLIENT_FATHER_POS,String)
            End If
            If (Original_CLIENT_MOTHER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_CLIENT_MOTHER,String)
            End If
            If (Original_CLIENT_MOTHER_EDU Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_CLIENT_MOTHER_EDU,String)
            End If
            If (Original_CLIENT_MOTHER_POS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_CLIENT_MOTHER_POS,String)
            End If
            If (Original_CLIENT_HOUSE_NO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_CLIENT_HOUSE_NO,String)
            End If
            If (Original_CLIENT_STREET_NO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_CLIENT_STREET_NO,String)
            End If
            If (Original_CLIENT_VILLAGE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_CLIENT_VILLAGE,String)
            End If
            If (Original_CLIENT_COMMUNE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_CLIENT_COMMUNE,String)
            End If
            If (Original_CLIENT_DISTICT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_CLIENT_DISTICT,String)
            End If
            If (Original_CLIENT_CITY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_CLIENT_CITY,String)
            End If
            If (Original_CLIENT_PHONE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_CLIENT_PHONE,String)
            End If
            If (Original_CLIENT_CONSULTATION_PURPOSE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_CLIENT_CONSULTATION_PURPOSE,String)
            End If
            If (Original_CLIENT_IMP_NEUROPSY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_CLIENT_IMP_NEUROPSY.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_IMP_DEV.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_CLIENT_IMP_DEV.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_PSYCHO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_CLIENT_PSYCHO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_SUBTYPE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_CLIENT_SUBTYPE,String)
            End If
            If (Original_CLIENT_REASON_FOR_NOT_REG Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_CLIENT_REASON_FOR_NOT_REG,String)
            End If
            If (Original_CLIENT_ADV_REFERENCE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(Original_CLIENT_ADV_REFERENCE,String)
            End If
            If (Original_YEARS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(Original_YEARS.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_DATE_REG Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(Original_CLIENT_DATE_REG,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CLIENT_NO As Decimal,  _
                    ByVal CLIENT_NAME As String,  _
                    ByVal CLIENT_SEX As String,  _
                    ByVal CLIENT_AGE As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DOB As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_BROUGHT_BY As String,  _
                    ByVal CLIENT_REFERED_BY As String,  _
                    ByVal CLIENT_SIBLING As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_BROTHER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_SISTER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DATE_SEEN As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_SCHOOL_GOING As String,  _
                    ByVal CLIENT_LEVE_OF_EDU As String,  _
                    ByVal CLIENT_FATHER As String,  _
                    ByVal CLIENT_FATHER_EDU As String,  _
                    ByVal CLIENT_FATHER_POS As String,  _
                    ByVal CLIENT_MOTHER As String,  _
                    ByVal CLIENT_MOTHER_EDU As String,  _
                    ByVal CLIENT_MOTHER_POS As String,  _
                    ByVal CLIENT_HOUSE_NO As String,  _
                    ByVal CLIENT_STREET_NO As String,  _
                    ByVal CLIENT_VILLAGE As String,  _
                    ByVal CLIENT_COMMUNE As String,  _
                    ByVal CLIENT_DISTICT As String,  _
                    ByVal CLIENT_CITY As String,  _
                    ByVal CLIENT_PHONE As String,  _
                    ByVal CLIENT_CONSULTATION_PURPOSE As String,  _
                    ByVal CLIENT_IMP_NEUROPSY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_IMP_DEV As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_PSYCHO As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_SUBTYPE As String,  _
                    ByVal CLIENT_REASON_FOR_NOT_REG As String,  _
                    ByVal CLIENT_ADV_REFERENCE As String,  _
                    ByVal YEARS As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DATE_REG As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CLIENT_NO,Decimal)
            If (CLIENT_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CLIENT_NAME,String)
            End If
            If (CLIENT_SEX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CLIENT_SEX,String)
            End If
            If (CLIENT_AGE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CLIENT_AGE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DOB.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CLIENT_DOB.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_BROUGHT_BY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CLIENT_BROUGHT_BY,String)
            End If
            If (CLIENT_REFERED_BY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CLIENT_REFERED_BY,String)
            End If
            If (CLIENT_SIBLING.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CLIENT_SIBLING.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_BROTHER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CLIENT_BROTHER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SISTER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CLIENT_SISTER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DATE_SEEN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(CLIENT_DATE_SEEN.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SCHOOL_GOING Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(CLIENT_SCHOOL_GOING,String)
            End If
            If (CLIENT_LEVE_OF_EDU Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(CLIENT_LEVE_OF_EDU,String)
            End If
            If (CLIENT_FATHER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(CLIENT_FATHER,String)
            End If
            If (CLIENT_FATHER_EDU Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(CLIENT_FATHER_EDU,String)
            End If
            If (CLIENT_FATHER_POS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(CLIENT_FATHER_POS,String)
            End If
            If (CLIENT_MOTHER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(CLIENT_MOTHER,String)
            End If
            If (CLIENT_MOTHER_EDU Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(CLIENT_MOTHER_EDU,String)
            End If
            If (CLIENT_MOTHER_POS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(CLIENT_MOTHER_POS,String)
            End If
            If (CLIENT_HOUSE_NO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(CLIENT_HOUSE_NO,String)
            End If
            If (CLIENT_STREET_NO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(CLIENT_STREET_NO,String)
            End If
            If (CLIENT_VILLAGE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(CLIENT_VILLAGE,String)
            End If
            If (CLIENT_COMMUNE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(CLIENT_COMMUNE,String)
            End If
            If (CLIENT_DISTICT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(CLIENT_DISTICT,String)
            End If
            If (CLIENT_CITY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(CLIENT_CITY,String)
            End If
            If (CLIENT_PHONE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(CLIENT_PHONE,String)
            End If
            If (CLIENT_CONSULTATION_PURPOSE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(CLIENT_CONSULTATION_PURPOSE,String)
            End If
            If (CLIENT_IMP_NEUROPSY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(CLIENT_IMP_NEUROPSY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_IMP_DEV.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(CLIENT_IMP_DEV.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_PSYCHO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(CLIENT_PSYCHO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SUBTYPE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(CLIENT_SUBTYPE,String)
            End If
            If (CLIENT_REASON_FOR_NOT_REG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(CLIENT_REASON_FOR_NOT_REG,String)
            End If
            If (CLIENT_ADV_REFERENCE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(CLIENT_ADV_REFERENCE,String)
            End If
            If (YEARS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(YEARS.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DATE_REG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(CLIENT_DATE_REG,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CLIENT_NO As Decimal,  _
                    ByVal CLIENT_NAME As String,  _
                    ByVal CLIENT_SEX As String,  _
                    ByVal CLIENT_AGE As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DOB As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_BROUGHT_BY As String,  _
                    ByVal CLIENT_REFERED_BY As String,  _
                    ByVal CLIENT_SIBLING As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_BROTHER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_SISTER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DATE_SEEN As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_SCHOOL_GOING As String,  _
                    ByVal CLIENT_LEVE_OF_EDU As String,  _
                    ByVal CLIENT_FATHER As String,  _
                    ByVal CLIENT_FATHER_EDU As String,  _
                    ByVal CLIENT_FATHER_POS As String,  _
                    ByVal CLIENT_MOTHER As String,  _
                    ByVal CLIENT_MOTHER_EDU As String,  _
                    ByVal CLIENT_MOTHER_POS As String,  _
                    ByVal CLIENT_HOUSE_NO As String,  _
                    ByVal CLIENT_STREET_NO As String,  _
                    ByVal CLIENT_VILLAGE As String,  _
                    ByVal CLIENT_COMMUNE As String,  _
                    ByVal CLIENT_DISTICT As String,  _
                    ByVal CLIENT_CITY As String,  _
                    ByVal CLIENT_PHONE As String,  _
                    ByVal CLIENT_CONSULTATION_PURPOSE As String,  _
                    ByVal CLIENT_IMP_NEUROPSY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_IMP_DEV As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_PSYCHO As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_SUBTYPE As String,  _
                    ByVal CLIENT_REASON_FOR_NOT_REG As String,  _
                    ByVal CLIENT_ADV_REFERENCE As String,  _
                    ByVal YEARS As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DATE_REG As String,  _
                    ByVal Original_CLIENT_ID As Decimal,  _
                    ByVal Original_CLIENT_NO As Decimal,  _
                    ByVal Original_CLIENT_NAME As String,  _
                    ByVal Original_CLIENT_SEX As String,  _
                    ByVal Original_CLIENT_AGE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_DOB As Global.System.Nullable(Of Date),  _
                    ByVal Original_CLIENT_BROUGHT_BY As String,  _
                    ByVal Original_CLIENT_REFERED_BY As String,  _
                    ByVal Original_CLIENT_SIBLING As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_BROTHER As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_SISTER As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_DATE_SEEN As Global.System.Nullable(Of Date),  _
                    ByVal Original_CLIENT_SCHOOL_GOING As String,  _
                    ByVal Original_CLIENT_LEVE_OF_EDU As String,  _
                    ByVal Original_CLIENT_FATHER As String,  _
                    ByVal Original_CLIENT_FATHER_EDU As String,  _
                    ByVal Original_CLIENT_FATHER_POS As String,  _
                    ByVal Original_CLIENT_MOTHER As String,  _
                    ByVal Original_CLIENT_MOTHER_EDU As String,  _
                    ByVal Original_CLIENT_MOTHER_POS As String,  _
                    ByVal Original_CLIENT_HOUSE_NO As String,  _
                    ByVal Original_CLIENT_STREET_NO As String,  _
                    ByVal Original_CLIENT_VILLAGE As String,  _
                    ByVal Original_CLIENT_COMMUNE As String,  _
                    ByVal Original_CLIENT_DISTICT As String,  _
                    ByVal Original_CLIENT_CITY As String,  _
                    ByVal Original_CLIENT_PHONE As String,  _
                    ByVal Original_CLIENT_CONSULTATION_PURPOSE As String,  _
                    ByVal Original_CLIENT_IMP_NEUROPSY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_IMP_DEV As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_PSYCHO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_SUBTYPE As String,  _
                    ByVal Original_CLIENT_REASON_FOR_NOT_REG As String,  _
                    ByVal Original_CLIENT_ADV_REFERENCE As String,  _
                    ByVal Original_YEARS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_DATE_REG As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CLIENT_NO,Decimal)
            If (CLIENT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CLIENT_NAME,String)
            End If
            If (CLIENT_SEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CLIENT_SEX,String)
            End If
            If (CLIENT_AGE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CLIENT_AGE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DOB.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CLIENT_DOB.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_BROUGHT_BY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CLIENT_BROUGHT_BY,String)
            End If
            If (CLIENT_REFERED_BY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CLIENT_REFERED_BY,String)
            End If
            If (CLIENT_SIBLING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CLIENT_SIBLING.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_BROTHER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(CLIENT_BROTHER.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SISTER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(CLIENT_SISTER.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DATE_SEEN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(CLIENT_DATE_SEEN.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SCHOOL_GOING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(CLIENT_SCHOOL_GOING,String)
            End If
            If (CLIENT_LEVE_OF_EDU Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(CLIENT_LEVE_OF_EDU,String)
            End If
            If (CLIENT_FATHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(CLIENT_FATHER,String)
            End If
            If (CLIENT_FATHER_EDU Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(CLIENT_FATHER_EDU,String)
            End If
            If (CLIENT_FATHER_POS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(CLIENT_FATHER_POS,String)
            End If
            If (CLIENT_MOTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(CLIENT_MOTHER,String)
            End If
            If (CLIENT_MOTHER_EDU Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(CLIENT_MOTHER_EDU,String)
            End If
            If (CLIENT_MOTHER_POS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(CLIENT_MOTHER_POS,String)
            End If
            If (CLIENT_HOUSE_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(CLIENT_HOUSE_NO,String)
            End If
            If (CLIENT_STREET_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(CLIENT_STREET_NO,String)
            End If
            If (CLIENT_VILLAGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(CLIENT_VILLAGE,String)
            End If
            If (CLIENT_COMMUNE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(CLIENT_COMMUNE,String)
            End If
            If (CLIENT_DISTICT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(CLIENT_DISTICT,String)
            End If
            If (CLIENT_CITY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(CLIENT_CITY,String)
            End If
            If (CLIENT_PHONE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(CLIENT_PHONE,String)
            End If
            If (CLIENT_CONSULTATION_PURPOSE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(CLIENT_CONSULTATION_PURPOSE,String)
            End If
            If (CLIENT_IMP_NEUROPSY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(CLIENT_IMP_NEUROPSY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_IMP_DEV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(CLIENT_IMP_DEV.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_PSYCHO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(CLIENT_PSYCHO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SUBTYPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(CLIENT_SUBTYPE,String)
            End If
            If (CLIENT_REASON_FOR_NOT_REG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(CLIENT_REASON_FOR_NOT_REG,String)
            End If
            If (CLIENT_ADV_REFERENCE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(CLIENT_ADV_REFERENCE,String)
            End If
            If (YEARS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(YEARS.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DATE_REG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(CLIENT_DATE_REG,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_CLIENT_ID,Decimal)
            Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_CLIENT_NO,Decimal)
            If (Original_CLIENT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_CLIENT_NAME,String)
            End If
            If (Original_CLIENT_SEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_CLIENT_SEX,String)
            End If
            If (Original_CLIENT_AGE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_CLIENT_AGE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_DOB.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_CLIENT_DOB.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_BROUGHT_BY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_CLIENT_BROUGHT_BY,String)
            End If
            If (Original_CLIENT_REFERED_BY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_CLIENT_REFERED_BY,String)
            End If
            If (Original_CLIENT_SIBLING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_CLIENT_SIBLING.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_BROTHER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_CLIENT_BROTHER.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_SISTER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_CLIENT_SISTER.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_DATE_SEEN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_CLIENT_DATE_SEEN.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_SCHOOL_GOING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_CLIENT_SCHOOL_GOING,String)
            End If
            If (Original_CLIENT_LEVE_OF_EDU Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_CLIENT_LEVE_OF_EDU,String)
            End If
            If (Original_CLIENT_FATHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_CLIENT_FATHER,String)
            End If
            If (Original_CLIENT_FATHER_EDU Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_CLIENT_FATHER_EDU,String)
            End If
            If (Original_CLIENT_FATHER_POS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_CLIENT_FATHER_POS,String)
            End If
            If (Original_CLIENT_MOTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_CLIENT_MOTHER,String)
            End If
            If (Original_CLIENT_MOTHER_EDU Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_CLIENT_MOTHER_EDU,String)
            End If
            If (Original_CLIENT_MOTHER_POS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_CLIENT_MOTHER_POS,String)
            End If
            If (Original_CLIENT_HOUSE_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_CLIENT_HOUSE_NO,String)
            End If
            If (Original_CLIENT_STREET_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_CLIENT_STREET_NO,String)
            End If
            If (Original_CLIENT_VILLAGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_CLIENT_VILLAGE,String)
            End If
            If (Original_CLIENT_COMMUNE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_CLIENT_COMMUNE,String)
            End If
            If (Original_CLIENT_DISTICT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_CLIENT_DISTICT,String)
            End If
            If (Original_CLIENT_CITY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_CLIENT_CITY,String)
            End If
            If (Original_CLIENT_PHONE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_CLIENT_PHONE,String)
            End If
            If (Original_CLIENT_CONSULTATION_PURPOSE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_CLIENT_CONSULTATION_PURPOSE,String)
            End If
            If (Original_CLIENT_IMP_NEUROPSY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_CLIENT_IMP_NEUROPSY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_IMP_DEV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_CLIENT_IMP_DEV.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_PSYCHO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_CLIENT_PSYCHO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_SUBTYPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_CLIENT_SUBTYPE,String)
            End If
            If (Original_CLIENT_REASON_FOR_NOT_REG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_CLIENT_REASON_FOR_NOT_REG,String)
            End If
            If (Original_CLIENT_ADV_REFERENCE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_CLIENT_ADV_REFERENCE,String)
            End If
            If (Original_YEARS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_YEARS.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_DATE_REG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_CLIENT_DATE_REG,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CLIENT_NAME As String,  _
                    ByVal CLIENT_SEX As String,  _
                    ByVal CLIENT_AGE As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DOB As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_BROUGHT_BY As String,  _
                    ByVal CLIENT_REFERED_BY As String,  _
                    ByVal CLIENT_SIBLING As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_BROTHER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_SISTER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DATE_SEEN As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_SCHOOL_GOING As String,  _
                    ByVal CLIENT_LEVE_OF_EDU As String,  _
                    ByVal CLIENT_FATHER As String,  _
                    ByVal CLIENT_FATHER_EDU As String,  _
                    ByVal CLIENT_FATHER_POS As String,  _
                    ByVal CLIENT_MOTHER As String,  _
                    ByVal CLIENT_MOTHER_EDU As String,  _
                    ByVal CLIENT_MOTHER_POS As String,  _
                    ByVal CLIENT_HOUSE_NO As String,  _
                    ByVal CLIENT_STREET_NO As String,  _
                    ByVal CLIENT_VILLAGE As String,  _
                    ByVal CLIENT_COMMUNE As String,  _
                    ByVal CLIENT_DISTICT As String,  _
                    ByVal CLIENT_CITY As String,  _
                    ByVal CLIENT_PHONE As String,  _
                    ByVal CLIENT_CONSULTATION_PURPOSE As String,  _
                    ByVal CLIENT_IMP_NEUROPSY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_IMP_DEV As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_PSYCHO As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_SUBTYPE As String,  _
                    ByVal CLIENT_REASON_FOR_NOT_REG As String,  _
                    ByVal CLIENT_ADV_REFERENCE As String,  _
                    ByVal YEARS As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DATE_REG As String,  _
                    ByVal Original_CLIENT_ID As Decimal,  _
                    ByVal Original_CLIENT_NO As Decimal,  _
                    ByVal Original_CLIENT_NAME As String,  _
                    ByVal Original_CLIENT_SEX As String,  _
                    ByVal Original_CLIENT_AGE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_DOB As Global.System.Nullable(Of Date),  _
                    ByVal Original_CLIENT_BROUGHT_BY As String,  _
                    ByVal Original_CLIENT_REFERED_BY As String,  _
                    ByVal Original_CLIENT_SIBLING As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_BROTHER As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_SISTER As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_DATE_SEEN As Global.System.Nullable(Of Date),  _
                    ByVal Original_CLIENT_SCHOOL_GOING As String,  _
                    ByVal Original_CLIENT_LEVE_OF_EDU As String,  _
                    ByVal Original_CLIENT_FATHER As String,  _
                    ByVal Original_CLIENT_FATHER_EDU As String,  _
                    ByVal Original_CLIENT_FATHER_POS As String,  _
                    ByVal Original_CLIENT_MOTHER As String,  _
                    ByVal Original_CLIENT_MOTHER_EDU As String,  _
                    ByVal Original_CLIENT_MOTHER_POS As String,  _
                    ByVal Original_CLIENT_HOUSE_NO As String,  _
                    ByVal Original_CLIENT_STREET_NO As String,  _
                    ByVal Original_CLIENT_VILLAGE As String,  _
                    ByVal Original_CLIENT_COMMUNE As String,  _
                    ByVal Original_CLIENT_DISTICT As String,  _
                    ByVal Original_CLIENT_CITY As String,  _
                    ByVal Original_CLIENT_PHONE As String,  _
                    ByVal Original_CLIENT_CONSULTATION_PURPOSE As String,  _
                    ByVal Original_CLIENT_IMP_NEUROPSY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_IMP_DEV As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_PSYCHO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_SUBTYPE As String,  _
                    ByVal Original_CLIENT_REASON_FOR_NOT_REG As String,  _
                    ByVal Original_CLIENT_ADV_REFERENCE As String,  _
                    ByVal Original_YEARS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_DATE_REG As String) As Integer
            Return Me.Update(Original_CLIENT_NO, CLIENT_NAME, CLIENT_SEX, CLIENT_AGE, CLIENT_DOB, CLIENT_BROUGHT_BY, CLIENT_REFERED_BY, CLIENT_SIBLING, CLIENT_BROTHER, CLIENT_SISTER, CLIENT_DATE_SEEN, CLIENT_SCHOOL_GOING, CLIENT_LEVE_OF_EDU, CLIENT_FATHER, CLIENT_FATHER_EDU, CLIENT_FATHER_POS, CLIENT_MOTHER, CLIENT_MOTHER_EDU, CLIENT_MOTHER_POS, CLIENT_HOUSE_NO, CLIENT_STREET_NO, CLIENT_VILLAGE, CLIENT_COMMUNE, CLIENT_DISTICT, CLIENT_CITY, CLIENT_PHONE, CLIENT_CONSULTATION_PURPOSE, CLIENT_IMP_NEUROPSY, CLIENT_IMP_DEV, CLIENT_PSYCHO, CLIENT_SUBTYPE, CLIENT_REASON_FOR_NOT_REG, CLIENT_ADV_REFERENCE, YEARS, CLIENT_DATE_REG, Original_CLIENT_ID, Original_CLIENT_NO, Original_CLIENT_NAME, Original_CLIENT_SEX, Original_CLIENT_AGE, Original_CLIENT_DOB, Original_CLIENT_BROUGHT_BY, Original_CLIENT_REFERED_BY, Original_CLIENT_SIBLING, Original_CLIENT_BROTHER, Original_CLIENT_SISTER, Original_CLIENT_DATE_SEEN, Original_CLIENT_SCHOOL_GOING, Original_CLIENT_LEVE_OF_EDU, Original_CLIENT_FATHER, Original_CLIENT_FATHER_EDU, Original_CLIENT_FATHER_POS, Original_CLIENT_MOTHER, Original_CLIENT_MOTHER_EDU, Original_CLIENT_MOTHER_POS, Original_CLIENT_HOUSE_NO, Original_CLIENT_STREET_NO, Original_CLIENT_VILLAGE, Original_CLIENT_COMMUNE, Original_CLIENT_DISTICT, Original_CLIENT_CITY, Original_CLIENT_PHONE, Original_CLIENT_CONSULTATION_PURPOSE, Original_CLIENT_IMP_NEUROPSY, Original_CLIENT_IMP_DEV, Original_CLIENT_PSYCHO, Original_CLIENT_SUBTYPE, Original_CLIENT_REASON_FOR_NOT_REG, Original_CLIENT_ADV_REFERENCE, Original_YEARS, Original_CLIENT_DATE_REG)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function insertClient( _
                    ByVal CLIENT_NO As Decimal,  _
                    ByVal CLIENT_NAME As String,  _
                    ByVal CLIENT_SEX As String,  _
                    ByVal CLIENT_AGE As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DOB As String,  _
                    ByVal CLIENT_BROUGHT_BY As String,  _
                    ByVal CLIENT_REFERED_BY As String,  _
                    ByVal CLIENT_SIBLING As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_BROTHER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_SISTER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DATE_SEEN As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_SCHOOL_GOING As String,  _
                    ByVal CLIENT_LEVE_OF_EDU As String,  _
                    ByVal CLIENT_FATHER As String,  _
                    ByVal CLIENT_FATHER_EDU As String,  _
                    ByVal CLIENT_FATHER_POS As String,  _
                    ByVal CLIENT_MOTHER As String,  _
                    ByVal CLIENT_MOTHER_EDU As String,  _
                    ByVal CLIENT_MOTHER_POS As String,  _
                    ByVal CLIENT_HOUSE_NO As String,  _
                    ByVal CLIENT_STREET_NO As String,  _
                    ByVal CLIENT_VILLAGE As String,  _
                    ByVal CLIENT_COMMUNE As String,  _
                    ByVal CLIENT_DISTICT As String,  _
                    ByVal CLIENT_CITY As String,  _
                    ByVal CLIENT_PHONE As String,  _
                    ByVal CLIENT_CONSULTATION_PURPOSE As String,  _
                    ByVal CLIENT_IMP_NEUROPSY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_IMP_DEV As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_PSYCHO As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_SUBTYPE As String,  _
                    ByVal CLIENT_REASON_FOR_NOT_REG As String,  _
                    ByVal CLIENT_ADV_REFERENCE As String,  _
                    ByVal YEARS As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DATE_REG As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            command.Parameters(0).Value = CType(CLIENT_NO,Decimal)
            If (CLIENT_NAME Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(CLIENT_NAME,String)
            End If
            If (CLIENT_SEX Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(CLIENT_SEX,String)
            End If
            If (CLIENT_AGE.HasValue = true) Then
                command.Parameters(3).Value = CType(CLIENT_AGE.Value,Decimal)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DOB Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(CLIENT_DOB,String)
            End If
            If (CLIENT_BROUGHT_BY Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(CLIENT_BROUGHT_BY,String)
            End If
            If (CLIENT_REFERED_BY Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(CLIENT_REFERED_BY,String)
            End If
            If (CLIENT_SIBLING.HasValue = true) Then
                command.Parameters(7).Value = CType(CLIENT_SIBLING.Value,Decimal)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_BROTHER.HasValue = true) Then
                command.Parameters(8).Value = CType(CLIENT_BROTHER.Value,Decimal)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SISTER.HasValue = true) Then
                command.Parameters(9).Value = CType(CLIENT_SISTER.Value,Decimal)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DATE_SEEN.HasValue = true) Then
                command.Parameters(10).Value = CType(CLIENT_DATE_SEEN.Value,Date)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SCHOOL_GOING Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(CLIENT_SCHOOL_GOING,String)
            End If
            If (CLIENT_LEVE_OF_EDU Is Nothing) Then
                command.Parameters(12).Value = Global.System.DBNull.Value
            Else
                command.Parameters(12).Value = CType(CLIENT_LEVE_OF_EDU,String)
            End If
            If (CLIENT_FATHER Is Nothing) Then
                command.Parameters(13).Value = Global.System.DBNull.Value
            Else
                command.Parameters(13).Value = CType(CLIENT_FATHER,String)
            End If
            If (CLIENT_FATHER_EDU Is Nothing) Then
                command.Parameters(14).Value = Global.System.DBNull.Value
            Else
                command.Parameters(14).Value = CType(CLIENT_FATHER_EDU,String)
            End If
            If (CLIENT_FATHER_POS Is Nothing) Then
                command.Parameters(15).Value = Global.System.DBNull.Value
            Else
                command.Parameters(15).Value = CType(CLIENT_FATHER_POS,String)
            End If
            If (CLIENT_MOTHER Is Nothing) Then
                command.Parameters(16).Value = Global.System.DBNull.Value
            Else
                command.Parameters(16).Value = CType(CLIENT_MOTHER,String)
            End If
            If (CLIENT_MOTHER_EDU Is Nothing) Then
                command.Parameters(17).Value = Global.System.DBNull.Value
            Else
                command.Parameters(17).Value = CType(CLIENT_MOTHER_EDU,String)
            End If
            If (CLIENT_MOTHER_POS Is Nothing) Then
                command.Parameters(18).Value = Global.System.DBNull.Value
            Else
                command.Parameters(18).Value = CType(CLIENT_MOTHER_POS,String)
            End If
            If (CLIENT_HOUSE_NO Is Nothing) Then
                command.Parameters(19).Value = Global.System.DBNull.Value
            Else
                command.Parameters(19).Value = CType(CLIENT_HOUSE_NO,String)
            End If
            If (CLIENT_STREET_NO Is Nothing) Then
                command.Parameters(20).Value = Global.System.DBNull.Value
            Else
                command.Parameters(20).Value = CType(CLIENT_STREET_NO,String)
            End If
            If (CLIENT_VILLAGE Is Nothing) Then
                command.Parameters(21).Value = Global.System.DBNull.Value
            Else
                command.Parameters(21).Value = CType(CLIENT_VILLAGE,String)
            End If
            If (CLIENT_COMMUNE Is Nothing) Then
                command.Parameters(22).Value = Global.System.DBNull.Value
            Else
                command.Parameters(22).Value = CType(CLIENT_COMMUNE,String)
            End If
            If (CLIENT_DISTICT Is Nothing) Then
                command.Parameters(23).Value = Global.System.DBNull.Value
            Else
                command.Parameters(23).Value = CType(CLIENT_DISTICT,String)
            End If
            If (CLIENT_CITY Is Nothing) Then
                command.Parameters(24).Value = Global.System.DBNull.Value
            Else
                command.Parameters(24).Value = CType(CLIENT_CITY,String)
            End If
            If (CLIENT_PHONE Is Nothing) Then
                command.Parameters(25).Value = Global.System.DBNull.Value
            Else
                command.Parameters(25).Value = CType(CLIENT_PHONE,String)
            End If
            If (CLIENT_CONSULTATION_PURPOSE Is Nothing) Then
                command.Parameters(26).Value = Global.System.DBNull.Value
            Else
                command.Parameters(26).Value = CType(CLIENT_CONSULTATION_PURPOSE,String)
            End If
            If (CLIENT_IMP_NEUROPSY.HasValue = true) Then
                command.Parameters(27).Value = CType(CLIENT_IMP_NEUROPSY.Value,Boolean)
            Else
                command.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_IMP_DEV.HasValue = true) Then
                command.Parameters(28).Value = CType(CLIENT_IMP_DEV.Value,Boolean)
            Else
                command.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_PSYCHO.HasValue = true) Then
                command.Parameters(29).Value = CType(CLIENT_PSYCHO.Value,Boolean)
            Else
                command.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SUBTYPE Is Nothing) Then
                command.Parameters(30).Value = Global.System.DBNull.Value
            Else
                command.Parameters(30).Value = CType(CLIENT_SUBTYPE,String)
            End If
            If (CLIENT_REASON_FOR_NOT_REG Is Nothing) Then
                command.Parameters(31).Value = Global.System.DBNull.Value
            Else
                command.Parameters(31).Value = CType(CLIENT_REASON_FOR_NOT_REG,String)
            End If
            If (CLIENT_ADV_REFERENCE Is Nothing) Then
                command.Parameters(32).Value = Global.System.DBNull.Value
            Else
                command.Parameters(32).Value = CType(CLIENT_ADV_REFERENCE,String)
            End If
            If (YEARS.HasValue = true) Then
                command.Parameters(33).Value = CType(YEARS.Value,Decimal)
            Else
                command.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DATE_REG Is Nothing) Then
                command.Parameters(34).Value = Global.System.DBNull.Value
            Else
                command.Parameters(34).Value = CType(CLIENT_DATE_REG,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function updateCCAMHClient( _
                    ByVal CLIENT_NAME As String,  _
                    ByVal CLIENT_SEX As String,  _
                    ByVal CLIENT_AGE As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DOB As String,  _
                    ByVal CLIENT_BROUGHT_BY As String,  _
                    ByVal CLIENT_REFERED_BY As String,  _
                    ByVal CLIENT_SIBLING As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_BROTHER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_SISTER As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DATE_SEEN As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_SCHOOL_GOING As String,  _
                    ByVal CLIENT_LEVE_OF_EDU As String,  _
                    ByVal CLIENT_FATHER As String,  _
                    ByVal CLIENT_FATHER_EDU As String,  _
                    ByVal CLIENT_FATHER_POS As String,  _
                    ByVal CLIENT_MOTHER As String,  _
                    ByVal CLIENT_MOTHER_EDU As String,  _
                    ByVal CLIENT_MOTHER_POS As String,  _
                    ByVal CLIENT_HOUSE_NO As String,  _
                    ByVal CLIENT_STREET_NO As String,  _
                    ByVal CLIENT_VILLAGE As String,  _
                    ByVal CLIENT_COMMUNE As String,  _
                    ByVal CLIENT_DISTICT As String,  _
                    ByVal CLIENT_CITY As String,  _
                    ByVal CLIENT_PHONE As String,  _
                    ByVal CLIENT_CONSULTATION_PURPOSE As String,  _
                    ByVal CLIENT_IMP_NEUROPSY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_IMP_DEV As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_PSYCHO As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_SUBTYPE As String,  _
                    ByVal CLIENT_REASON_FOR_NOT_REG As String,  _
                    ByVal CLIENT_ADV_REFERENCE As String,  _
                    ByVal YEARS As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_DATE_REG As String,  _
                    ByVal Original_CLIENT_NO As Decimal) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (CLIENT_NAME Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(CLIENT_NAME,String)
            End If
            If (CLIENT_SEX Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(CLIENT_SEX,String)
            End If
            If (CLIENT_AGE.HasValue = true) Then
                command.Parameters(2).Value = CType(CLIENT_AGE.Value,Decimal)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DOB Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(CLIENT_DOB,String)
            End If
            If (CLIENT_BROUGHT_BY Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(CLIENT_BROUGHT_BY,String)
            End If
            If (CLIENT_REFERED_BY Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(CLIENT_REFERED_BY,String)
            End If
            If (CLIENT_SIBLING.HasValue = true) Then
                command.Parameters(6).Value = CType(CLIENT_SIBLING.Value,Decimal)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_BROTHER.HasValue = true) Then
                command.Parameters(7).Value = CType(CLIENT_BROTHER.Value,Decimal)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SISTER.HasValue = true) Then
                command.Parameters(8).Value = CType(CLIENT_SISTER.Value,Decimal)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DATE_SEEN.HasValue = true) Then
                command.Parameters(9).Value = CType(CLIENT_DATE_SEEN.Value,Date)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SCHOOL_GOING Is Nothing) Then
                command.Parameters(10).Value = Global.System.DBNull.Value
            Else
                command.Parameters(10).Value = CType(CLIENT_SCHOOL_GOING,String)
            End If
            If (CLIENT_LEVE_OF_EDU Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(CLIENT_LEVE_OF_EDU,String)
            End If
            If (CLIENT_FATHER Is Nothing) Then
                command.Parameters(12).Value = Global.System.DBNull.Value
            Else
                command.Parameters(12).Value = CType(CLIENT_FATHER,String)
            End If
            If (CLIENT_FATHER_EDU Is Nothing) Then
                command.Parameters(13).Value = Global.System.DBNull.Value
            Else
                command.Parameters(13).Value = CType(CLIENT_FATHER_EDU,String)
            End If
            If (CLIENT_FATHER_POS Is Nothing) Then
                command.Parameters(14).Value = Global.System.DBNull.Value
            Else
                command.Parameters(14).Value = CType(CLIENT_FATHER_POS,String)
            End If
            If (CLIENT_MOTHER Is Nothing) Then
                command.Parameters(15).Value = Global.System.DBNull.Value
            Else
                command.Parameters(15).Value = CType(CLIENT_MOTHER,String)
            End If
            If (CLIENT_MOTHER_EDU Is Nothing) Then
                command.Parameters(16).Value = Global.System.DBNull.Value
            Else
                command.Parameters(16).Value = CType(CLIENT_MOTHER_EDU,String)
            End If
            If (CLIENT_MOTHER_POS Is Nothing) Then
                command.Parameters(17).Value = Global.System.DBNull.Value
            Else
                command.Parameters(17).Value = CType(CLIENT_MOTHER_POS,String)
            End If
            If (CLIENT_HOUSE_NO Is Nothing) Then
                command.Parameters(18).Value = Global.System.DBNull.Value
            Else
                command.Parameters(18).Value = CType(CLIENT_HOUSE_NO,String)
            End If
            If (CLIENT_STREET_NO Is Nothing) Then
                command.Parameters(19).Value = Global.System.DBNull.Value
            Else
                command.Parameters(19).Value = CType(CLIENT_STREET_NO,String)
            End If
            If (CLIENT_VILLAGE Is Nothing) Then
                command.Parameters(20).Value = Global.System.DBNull.Value
            Else
                command.Parameters(20).Value = CType(CLIENT_VILLAGE,String)
            End If
            If (CLIENT_COMMUNE Is Nothing) Then
                command.Parameters(21).Value = Global.System.DBNull.Value
            Else
                command.Parameters(21).Value = CType(CLIENT_COMMUNE,String)
            End If
            If (CLIENT_DISTICT Is Nothing) Then
                command.Parameters(22).Value = Global.System.DBNull.Value
            Else
                command.Parameters(22).Value = CType(CLIENT_DISTICT,String)
            End If
            If (CLIENT_CITY Is Nothing) Then
                command.Parameters(23).Value = Global.System.DBNull.Value
            Else
                command.Parameters(23).Value = CType(CLIENT_CITY,String)
            End If
            If (CLIENT_PHONE Is Nothing) Then
                command.Parameters(24).Value = Global.System.DBNull.Value
            Else
                command.Parameters(24).Value = CType(CLIENT_PHONE,String)
            End If
            If (CLIENT_CONSULTATION_PURPOSE Is Nothing) Then
                command.Parameters(25).Value = Global.System.DBNull.Value
            Else
                command.Parameters(25).Value = CType(CLIENT_CONSULTATION_PURPOSE,String)
            End If
            If (CLIENT_IMP_NEUROPSY.HasValue = true) Then
                command.Parameters(26).Value = CType(CLIENT_IMP_NEUROPSY.Value,Boolean)
            Else
                command.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_IMP_DEV.HasValue = true) Then
                command.Parameters(27).Value = CType(CLIENT_IMP_DEV.Value,Boolean)
            Else
                command.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_PSYCHO.HasValue = true) Then
                command.Parameters(28).Value = CType(CLIENT_PSYCHO.Value,Boolean)
            Else
                command.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SUBTYPE Is Nothing) Then
                command.Parameters(29).Value = Global.System.DBNull.Value
            Else
                command.Parameters(29).Value = CType(CLIENT_SUBTYPE,String)
            End If
            If (CLIENT_REASON_FOR_NOT_REG Is Nothing) Then
                command.Parameters(30).Value = Global.System.DBNull.Value
            Else
                command.Parameters(30).Value = CType(CLIENT_REASON_FOR_NOT_REG,String)
            End If
            If (CLIENT_ADV_REFERENCE Is Nothing) Then
                command.Parameters(31).Value = Global.System.DBNull.Value
            Else
                command.Parameters(31).Value = CType(CLIENT_ADV_REFERENCE,String)
            End If
            If (YEARS.HasValue = true) Then
                command.Parameters(32).Value = CType(YEARS.Value,Decimal)
            Else
                command.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DATE_REG Is Nothing) Then
                command.Parameters(33).Value = Global.System.DBNull.Value
            Else
                command.Parameters(33).Value = CType(CLIENT_DATE_REG,String)
            End If
            command.Parameters(34).Value = CType(Original_CLIENT_NO,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _tblProvincesTableAdapter As tblProvincesTableAdapter
        
        Private _tblDistrictsTableAdapter As tblDistrictsTableAdapter
        
        Private _tblCommunesTableAdapter As tblCommunesTableAdapter
        
        Private _tblOccupationTableAdapter As TblOccupationTableAdapter
        
        Private _tblEducationTableAdapter As tblEducationTableAdapter
        
        Private _tblVillagesTableAdapter As tblVillagesTableAdapter
        
        Private _cCAMH_CLIENTS111TableAdapter As CCAMH_CLIENTS111TableAdapter
        
        Private _cCAMH_CLIENTSTableAdapter As CCAMH_CLIENTSTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblProvincesTableAdapter() As tblProvincesTableAdapter
            Get
                Return Me._tblProvincesTableAdapter
            End Get
            Set
                Me._tblProvincesTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblDistrictsTableAdapter() As tblDistrictsTableAdapter
            Get
                Return Me._tblDistrictsTableAdapter
            End Get
            Set
                Me._tblDistrictsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblCommunesTableAdapter() As tblCommunesTableAdapter
            Get
                Return Me._tblCommunesTableAdapter
            End Get
            Set
                Me._tblCommunesTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TblOccupationTableAdapter() As TblOccupationTableAdapter
            Get
                Return Me._tblOccupationTableAdapter
            End Get
            Set
                Me._tblOccupationTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblEducationTableAdapter() As tblEducationTableAdapter
            Get
                Return Me._tblEducationTableAdapter
            End Get
            Set
                Me._tblEducationTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblVillagesTableAdapter() As tblVillagesTableAdapter
            Get
                Return Me._tblVillagesTableAdapter
            End Get
            Set
                Me._tblVillagesTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CCAMH_CLIENTS111TableAdapter() As CCAMH_CLIENTS111TableAdapter
            Get
                Return Me._cCAMH_CLIENTS111TableAdapter
            End Get
            Set
                Me._cCAMH_CLIENTS111TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CCAMH_CLIENTSTableAdapter() As CCAMH_CLIENTSTableAdapter
            Get
                Return Me._cCAMH_CLIENTSTableAdapter
            End Get
            Set
                Me._cCAMH_CLIENTSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._tblProvincesTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblProvincesTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblProvincesTableAdapter.Connection
                End If
                If ((Not (Me._tblDistrictsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblDistrictsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblDistrictsTableAdapter.Connection
                End If
                If ((Not (Me._tblCommunesTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblCommunesTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblCommunesTableAdapter.Connection
                End If
                If ((Not (Me._tblOccupationTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblOccupationTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblOccupationTableAdapter.Connection
                End If
                If ((Not (Me._tblEducationTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblEducationTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblEducationTableAdapter.Connection
                End If
                If ((Not (Me._tblVillagesTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblVillagesTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblVillagesTableAdapter.Connection
                End If
                If ((Not (Me._cCAMH_CLIENTS111TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cCAMH_CLIENTS111TableAdapter.Connection) Is Nothing)) Then
                    Return Me._cCAMH_CLIENTS111TableAdapter.Connection
                End If
                If ((Not (Me._cCAMH_CLIENTSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cCAMH_CLIENTSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cCAMH_CLIENTSTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._tblProvincesTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblDistrictsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblCommunesTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblOccupationTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblEducationTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblVillagesTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cCAMH_CLIENTS111TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cCAMH_CLIENTSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DSCClientRegistration, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tblVillagesTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblVillages.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblVillagesTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblEducationTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblEducation.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblEducationTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cCAMH_CLIENTSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CCAMH_CLIENTS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cCAMH_CLIENTSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cCAMH_CLIENTS111TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CCAMH_CLIENTS111.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cCAMH_CLIENTS111TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblDistrictsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblDistricts.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblDistrictsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblProvincesTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblProvinces.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblProvincesTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblOccupationTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TblOccupation.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblOccupationTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblCommunesTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblCommunes.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblCommunesTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DSCClientRegistration, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tblVillagesTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblVillages.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblVillagesTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblEducationTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblEducation.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblEducationTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cCAMH_CLIENTSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CCAMH_CLIENTS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cCAMH_CLIENTSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cCAMH_CLIENTS111TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CCAMH_CLIENTS111.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cCAMH_CLIENTS111TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblDistrictsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblDistricts.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblDistrictsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblProvincesTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblProvinces.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblProvincesTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblOccupationTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TblOccupation.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblOccupationTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblCommunesTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblCommunes.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblCommunesTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DSCClientRegistration, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tblCommunesTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblCommunes.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblCommunesTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblOccupationTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TblOccupation.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblOccupationTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblProvincesTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblProvinces.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblProvincesTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblDistrictsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblDistricts.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblDistrictsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cCAMH_CLIENTS111TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CCAMH_CLIENTS111.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cCAMH_CLIENTS111TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cCAMH_CLIENTSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CCAMH_CLIENTS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cCAMH_CLIENTSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblEducationTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblEducation.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblEducationTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblVillagesTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblVillages.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblVillagesTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DSCClientRegistration) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._tblProvincesTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblProvincesTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblDistrictsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblDistrictsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblCommunesTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblCommunesTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblOccupationTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblOccupationTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblEducationTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblEducationTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblVillagesTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblVillagesTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._cCAMH_CLIENTS111TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cCAMH_CLIENTS111TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._cCAMH_CLIENTSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cCAMH_CLIENTSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._tblProvincesTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblProvincesTableAdapter, Me._tblProvincesTableAdapter.Connection)
                    Me._tblProvincesTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblProvincesTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblProvincesTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblProvincesTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblProvincesTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblDistrictsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblDistrictsTableAdapter, Me._tblDistrictsTableAdapter.Connection)
                    Me._tblDistrictsTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblDistrictsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblDistrictsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblDistrictsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblDistrictsTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblCommunesTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblCommunesTableAdapter, Me._tblCommunesTableAdapter.Connection)
                    Me._tblCommunesTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblCommunesTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblCommunesTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblCommunesTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblCommunesTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblOccupationTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblOccupationTableAdapter, Me._tblOccupationTableAdapter.Connection)
                    Me._tblOccupationTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblOccupationTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblOccupationTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblOccupationTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblOccupationTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblEducationTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblEducationTableAdapter, Me._tblEducationTableAdapter.Connection)
                    Me._tblEducationTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblEducationTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblEducationTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblEducationTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblEducationTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblVillagesTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblVillagesTableAdapter, Me._tblVillagesTableAdapter.Connection)
                    Me._tblVillagesTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblVillagesTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblVillagesTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblVillagesTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblVillagesTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cCAMH_CLIENTS111TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cCAMH_CLIENTS111TableAdapter, Me._cCAMH_CLIENTS111TableAdapter.Connection)
                    Me._cCAMH_CLIENTS111TableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_CLIENTS111TableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cCAMH_CLIENTS111TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cCAMH_CLIENTS111TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cCAMH_CLIENTS111TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cCAMH_CLIENTSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cCAMH_CLIENTSTableAdapter, Me._cCAMH_CLIENTSTableAdapter.Connection)
                    Me._cCAMH_CLIENTSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_CLIENTSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cCAMH_CLIENTSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cCAMH_CLIENTSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cCAMH_CLIENTSTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._tblProvincesTableAdapter) Is Nothing) Then
                    Me._tblProvincesTableAdapter.Connection = CType(revertConnections(Me._tblProvincesTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblProvincesTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblDistrictsTableAdapter) Is Nothing) Then
                    Me._tblDistrictsTableAdapter.Connection = CType(revertConnections(Me._tblDistrictsTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblDistrictsTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblCommunesTableAdapter) Is Nothing) Then
                    Me._tblCommunesTableAdapter.Connection = CType(revertConnections(Me._tblCommunesTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblCommunesTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblOccupationTableAdapter) Is Nothing) Then
                    Me._tblOccupationTableAdapter.Connection = CType(revertConnections(Me._tblOccupationTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblOccupationTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblEducationTableAdapter) Is Nothing) Then
                    Me._tblEducationTableAdapter.Connection = CType(revertConnections(Me._tblEducationTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblEducationTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblVillagesTableAdapter) Is Nothing) Then
                    Me._tblVillagesTableAdapter.Connection = CType(revertConnections(Me._tblVillagesTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblVillagesTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cCAMH_CLIENTS111TableAdapter) Is Nothing) Then
                    Me._cCAMH_CLIENTS111TableAdapter.Connection = CType(revertConnections(Me._cCAMH_CLIENTS111TableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_CLIENTS111TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cCAMH_CLIENTSTableAdapter) Is Nothing) Then
                    Me._cCAMH_CLIENTSTableAdapter.Connection = CType(revertConnections(Me._cCAMH_CLIENTSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_CLIENTSTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Private Function IsChildAndParent(ByVal child As Global.System.Data.DataRow, ByVal parent As Global.System.Data.DataRow) As Boolean
                Global.System.Diagnostics.Debug.Assert((Not (child) Is Nothing))
                Global.System.Diagnostics.Debug.Assert((Not (parent) Is Nothing))
                Dim newParent As Global.System.Data.DataRow = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (newParent) Is Nothing)  _
                            AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                            AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                    newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop
                If (newParent Is Nothing) Then
                    newParent = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)
                    Do While ((Not (newParent) Is Nothing)  _
                                AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                                AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                        newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If
                If Object.ReferenceEquals(newParent, parent) Then
                    Return true
                End If
                Return false
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                'Is row1 the child or grandchild of row2
                If Me.IsChildAndParent(row1, row2) Then
                    Return Me._childFirst
                End If

                'Is row2 the child or grandchild of row1
                If Me.IsChildAndParent(row2, row1) Then
                    Return (-1 * Me._childFirst)
                End If
                Return 0
            End Function
        End Class
    End Class
End Namespace
